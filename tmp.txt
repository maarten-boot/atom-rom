                                                                                     ; define common subroutines
                                                                                     ; basic rom is cxxx
                                                                                     ; 
                                                                                     ; DEFINE #C22C sr_C22C
                                                                                     ; DEFINE #C231 sr_C231
                                                                                     ; DEFINE #C279 sr_C279
                                                                                     ; DEFINE #C2A5 sr_C2A5
                                                                                     ; DEFINE #C372 sr_C372
                                                                                     ; DEFINE #C3C8 sr_C3C8
                                                                                     ; DEFINE #C3CB sr_C3CB
                                                                                     ; DEFINE #C3CD sr_C3CD
                                                                                     ; DEFINE #C424 sr_C424
                                                                                     ; DEFINE #C434 sr_C434
                                                                                     ; DEFINE #C465 sr_C465
                                                                                     ; DEFINE #C46A sr_C46A
                                                                                     ; DEFINE #C4D9 sr_C4D9
                                                                                     ; DEFINE #C4DE sr_C4DE
                                                                                     ; DEFINE #C4E1 sr_C4E1
                                                                                     ; DEFINE #C4E4 sr_C4E4
                                                                                     ; DEFINE #C4F6 sr_C4F6
                                                                                     ; DEFINE #C500 sr_C500
                                                                                     ; DEFINE #C50C sr_C50C
                                                                                     ; DEFINE #C51C sr_C51C
                                                                                     ; DEFINE #C51D sr_C51D
                                                                                     ; DEFINE #C589 sr_C589
                                                                                     ; DEFINE #C5C8 sr_C5C8
                                                                                     ; DEFINE #C5F9 sr_C5F9
                                                                                     ; DEFINE #C62E sr_C62E
                                                                                     ; DEFINE #C661 sr_C661
                                                                                     ; DEFINE #C689 sr_C689
                                                                                     ; DEFINE #C6DA sr_C6DA
                                                                                     ; DEFINE #C705 sr_C705
                                                                                     ; DEFINE #C70C sr_C70C
                                                                                     ; DEFINE #C72C sr_C72C
                                                                                     ; DEFINE #C78B sr_C78B
                                                                                     ; DEFINE #C80B sr_C80B
                                                                                     ; DEFINE #C8A2 sr_C8A2
                                                                                     ; DEFINE #C8BC sr_C8BC
                                                                                     ; DEFINE #C8C4 sr_C8C4
                                                                                     ; DEFINE #C8DC sr_C8DC
                                                                                     ; DEFINE #C8E1 sr_C8E1
                                                                                     ; DEFINE #C905 sr_C905
                                                                                     ; DEFINE #C907 sr_C907
                                                                                     ; DEFINE #C94C sr_C94C
                                                                                     ; DEFINE #C94F sr_C94F
                                                                                     ; DEFINE #C962 sr_C962
                                                                                     ; DEFINE #C97C sr_C97C
                                                                                     ; DEFINE #C99F sr_C99F
                                                                                     ; DEFINE #C9A1 sr_C9A1
                                                                                     ; DEFINE #C9B3 sr_C9B3
                                                                                     ; DEFINE #CA2C sr_CA2C
                                                                                     ; DEFINE #CA2F sr_CA2F
                                                                                     ; DEFINE #CA4C sr_CA4C
                                                                                     ; DEFINE #CC1F sr_CC1F
                                                                                     ; DEFINE #CD09 sr_CD09
                                                                                     ; DEFINE #CD0F sr_CD0F
                                                                                     ; DEFINE #CD54 sr_CD54
                                                                                     ; DEFINE #CD81 sr_CD81
                                                                                     ; DEFINE #CDBC sr_CDBC
                                                                                     ; DEFINE #CDBD sr_CDBD
                                                                                     ; DEFINE #CE93 sr_CE93
                                                                                     ; DEFINE #CEA1 sr_CEA1
                                                                                     ; DEFINE #CEA2 sr_CEA2
                                                                                     ; DEFINE #CEAE sr_CEAE
                                                                                     ; DEFINE #CEB1 sr_CEB1
                                                                                     ; DEFINE #CEFA sr_CEFA
                                                                                     ; DEFINE #CF3E sr_CF3E
                                                                                     ; DEFINE #CF41 sr_CF41
                                                                                     ; DEFINE #CF5B sr_CF5B
                                                                                     ; DEFINE #CF7B sr_CF7B
                                                                                     ; 
                                                                                     ; Floating point rom is dxxx
                                                                                     ; Subroutines...
                                                                                     ; **************
                                                                                     ; 
                                                                                     ; D236 Something to do with 'ASN' subroutine
                                                                                     ; D303 Get to next non-space character subroutine
                                                                                     ; D49A ??? subroutine
                                                                                     ; D4C3 ??? subroutine
                                                                                     ; D4D0 ??? subroutine
                                                                                     ; D587 ??? subroutine
                                                                                     ; D594 ??? subroutine
                                                                                     ; D636 ??? subroutine
                                                                                     ; D642 ??? subroutine
                                                                                     ; D64E ??? subroutine
                                                                                     ; D67B ??? subroutine
                                                                                     ; D686 ??? subroutine
                                                                                     ; D6A0 ??? subroutine
                                                                                     ; D6C3 Copy the 8 bytes #57..#5E to #5F..66 subroutine
                                                                                     ; D6CD Shift Left 1 Bit #5E..#5A subroutine
                                                                                     ; D6D8 Shift Right 1 Bit #5A..#5E subroutine
                                                                                     ; D6E3 Copy #5A..#5D to #5B..#5E and clear #5A subroutine
                                                                                     ; D706 Copy #62..#65 to #63..#66 and clear #62 subroutine
                                                                                     ; D71B ??? subroutine
                                                                                     ; D778 ??? subroutine
                                                                                     ; D7B2 ??? subroutine
                                                                                     ; D804 ??? subroutine
                                                                                     ; D827 ??? subroutine
                                                                                     ; D85D ??? subroutine
                                                                                     ; D870 ??? subroutine
                                                                                     ; D880 ??? subroutine
                                                                                     ; D892 ??? subroutine
                                                                                     ; D8BB ??? subroutine
                                                                                     ; D8D1 ??? subroutine
                                                                                     ; D8E2 ??? subroutine
                                                                                     ; D913 ??? subroutine
                                                                                     ; D923 ??? subroutine
                                                                                     ; DAAE ??? subroutine
                                                                                     ; DB9E ??? subroutine
                                                                                     ; DBB3 ??? subroutine
                                                                                     ; DC27 ??? subroutine
                                                                                     ; DD86 ??? subroutine
                                                                                     ; DD8A ??? subroutine
                                                                                     ; DD93 ??? subroutine
                                                                                     ; DE51 ??? subroutine
                                                                                     ; DE83 Something to do with 'HTN' subroutine
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Other routines...
                                                                                     ; *****************
                                                                                     ; 
                                                                                     ; D000 Extension ROM Existence Check Bytes
                                                                                     ; D002 Extension Interpreter Jump Vector
                                                                                     ; D004 Extension Interpreter Jump Vector
                                                                                     ; D006 Extension Command Table and Jump Addresses
                                                                                     ; D0E4 Deal with '('
                                                                                     ; D0EB Deal with '+' and '-'
                                                                                     ; D0F2 Deal with '*' and '/'
                                                                                     ; D0FC Deal with '+' and '-'
                                                                                     ; D103 Deal with '^'
                                                                                     ; D10E Floating Point interpreter
                                                                                     ; D15E Floating Point interpreter
                                                                                     ; D177 Deals with '+'
                                                                                     ; D183 Deals with '-'
                                                                                     ; D18F Deals with '*'
                                                                                     ; D19B Deals with '/'
                                                                                     ; D1A7 Deals with '^'
                                                                                     ; D1BC Deals with '-'
                                                                                     ; D1CB Deals with '+'
                                                                                     ; D215 Execute the Command 'ABS'
                                                                                     ; D21E Execute the Command 'ACS'
                                                                                     ; D224 Execute the Command 'ASN'
                                                                                     ; D265 Execute the Command 'RAD'
                                                                                     ; D273 Execute the Command 'DEG'
                                                                                     ; D27C ??? Table
                                                                                     ; D286 Execute the Command 'TAN'
                                                                                     ; D296 ???
                                                                                     ; D29A Execute the Command 'FLT'
                                                                                     ; D2C3 Execute the Command 'PI'
                                                                                     ; D2CC Execute the Command 'FGET'
                                                                                     ; D2E0 Execute the Command 'VAL'
                                                                                     ; D30B Execute the Command '%'
                                                                                     ; D31F Execute the Command 'STR'
                                                                                     ; D331 Execute the Command 'FPRINT'
                                                                                     ; D339 ???
                                                                                     ; D36A Execute the Command 'FINPUT'
                                                                                     ; D3A8 Execute the Command 'FIF'
                                                                                     ; D3AE Execute the Command 'FUNTIL'
                                                                                     ; D3B4 Execute the Command 'FPUT'
                                                                                     ; D3D3 Execute the Command 'FDIM'
                                                                                     ; D444 ???
                                                                                     ; D494 ???
                                                                                     ; D4AF Pass Control to Utility Interpreter, if it Exists
                                                                                     ; D933 ???
                                                                                     ; D939 ???
                                                                                     ; D9EB ???
                                                                                     ; D9F6 Execute the conditional test '='
                                                                                     ; D9FA Execute the conditional test '<='
                                                                                     ; D9FE Execute the conditional test '<>'
                                                                                     ; DA02 Execute the conditional test '<'
                                                                                     ; DA06 Execute the conditional test '>='
                                                                                     ; DA0A Execute the conditional test '>'
                                                                                     ; DAC4 Execute the command 'TAN'
                                                                                     ; DB6F Execute the command 'SQR'
                                                                                     ; DBF9 ??? Table
                                                                                     ; DC64 Execute the command 'ATN'
                                                                                     ; DCB0 ??? Table
                                                                                     ; DCE3 Execute the command 'COS'
                                                                                     ; DCEE Execute the command 'SIN'
                                                                                     ; DD24 ???
                                                                                     ; DD97 ??? Table
                                                                                     ; DDD4 Execute the command 'EXP'
                                                                                     ; DE23 ??? Table
                                                                                     ; DE72 Execute the command 'HTN'
                                                                                     ; DED4 ??? Table
                                                                                     ; DF02 Execute the command 'COLOUR'
                                                                                     ; DF42 Colour Point Plot routine LSB Address Table
                                                                                     ; DF46 Colour Point Plot routine MSB Address Table
                                                                                     ; DF4A ??? Data Table
                                                                                     ; DF4E Colour Byte Table
                                                                                     ; DF52 Mode 1 Colour Point Plot routine
                                                                                     ; DF70 Mode 2 Colour Point Plot routine
                                                                                     ; DF88 Mode 3 Colour Point Plot routine
                                                                                     ; DFA0 Mode 4 Colour Point Plot routine
                                                                                     ; 
                                                                                     ; DEFINE #D0EB sr_D0EB
                                                                                     ; DEFINE #D0EC sr_D0EC
                                                                                     ; DEFINE #D0F2 sr_D0F2
                                                                                     ; DEFINE #D0F5 sr_D0F5
                                                                                     ; DEFINE #D0FC sr_D0FC
                                                                                     ; DEFINE #D103 sr_D103
                                                                                     ; DEFINE #D106 sr_D106
                                                                                     ; DEFINE #D1BF sr_D1BF
                                                                                     ; DEFINE #D1CB sr_D1CB
                                                                                     ; DEFINE #D1E5 sr_D1E5
                                                                                     ; DEFINE #D224 sr_D224
                                                                                     ; DEFINE #D236 sr_D236
                                                                                     ; DEFINE #D2AC sr_D2AC
                                                                                     ; DEFINE #D2DA sr_D2DA
                                                                                     ; DEFINE #D303 sr_D303
                                                                                     ; DEFINE #D304 sr_D304
                                                                                     ; DEFINE #D444 sr_D444
                                                                                     ; DEFINE #D494 sr_D494
                                                                                     ; DEFINE #D49A sr_D49A
                                                                                     ; DEFINE #D4C3 sr_D4C3
                                                                                     ; DEFINE #D4D0 sr_D4D0
                                                                                     ; DEFINE #D575 sr_D575
                                                                                     ; DEFINE #D587 sr_D587
                                                                                     ; DEFINE #D58B sr_D58B
                                                                                     ; DEFINE #D58D sr_D58D
                                                                                     ; DEFINE #D5A5 sr_D5A5
                                                                                     ; DEFINE #D5B1 sr_D5B1
                                                                                     ; DEFINE #D636 sr_D636
                                                                                     ; DEFINE #D642 sr_D642
                                                                                     ; DEFINE #D64E sr_D64E
                                                                                     ; DEFINE #D67B sr_D67B
                                                                                     ; DEFINE #D686 sr_D686
                                                                                     ; DEFINE #D6A0 sr_D6A0
                                                                                     ; DEFINE #D6B4 sr_D6B4
                                                                                     ; DEFINE #D6C3 sr_D6C3
                                                                                     ; DEFINE #D6CD sr_D6CD
                                                                                     ; DEFINE #D6D8 sr_D6D8
                                                                                     ; DEFINE #D6F8 sr_D6F8
                                                                                     ; DEFINE #D6FB sr_D6FB
                                                                                     ; DEFINE #D71B sr_D71B
                                                                                     ; DEFINE #D772 sr_D772
                                                                                     ; DEFINE #D778 sr_D778
                                                                                     ; DEFINE #D7B2 sr_D7B2
                                                                                     ; DEFINE #D7C8 sr_D7C8
                                                                                     ; DEFINE #D804 sr_D804
                                                                                     ; DEFINE #D827 sr_D827
                                                                                     ; DEFINE #D82C sr_D82C
                                                                                     ; DEFINE #D831 sr_D831
                                                                                     ; DEFINE #D836 sr_D836
                                                                                     ; DEFINE #D83D sr_D83D
                                                                                     ; DEFINE #D85D sr_D85D
                                                                                     ; DEFINE #D870 sr_D870
                                                                                     ; DEFINE #D880 sr_D880
                                                                                     ; DEFINE #D89A sr_D89A
                                                                                     ; DEFINE #D8C7 sr_D8C7
                                                                                     ; DEFINE #D8D5 sr_D8D5
                                                                                     ; DEFINE #D8E2 sr_D8E2
                                                                                     ; DEFINE #D8F9 sr_D8F9
                                                                                     ; DEFINE #D913 sr_D913
                                                                                     ; DEFINE #D923 sr_D923
                                                                                     ; DEFINE #D933 sr_D933
                                                                                     ; DEFINE #D939 sr_D939
                                                                                     ; DEFINE #D93C sr_D93C
                                                                                     ; DEFINE #D941 sr_D941
                                                                                     ; DEFINE #D9EB sr_D9EB
                                                                                     ; DEFINE #DA45 sr_DA45
                                                                                     ; DEFINE #DA9B sr_DA9B
                                                                                     ; DEFINE #DAA4 sr_DAA4
                                                                                     ; DEFINE #DAAE sr_DAAE
                                                                                     ; DEFINE #DAB6 sr_DAB6
                                                                                     ; DEFINE #DADC sr_DADC
                                                                                     ; DEFINE #DB72 sr_DB72
                                                                                     ; DEFINE #DB9E sr_DB9E
                                                                                     ; DEFINE #DBA2 sr_DBA2
                                                                                     ; DEFINE #DBA6 sr_DBA6
                                                                                     ; DEFINE #DBAA sr_DBAA
                                                                                     ; DEFINE #DBB6 sr_DBB6
                                                                                     ; DEFINE #DC27 sr_DC27
                                                                                     ; DEFINE #DC7A sr_DC7A
                                                                                     ; DEFINE #DC86 sr_DC86
                                                                                     ; DEFINE #DC8C sr_DC8C
                                                                                     ; DEFINE #DCE6 sr_DCE6
                                                                                     ; DEFINE #DCF1 sr_DCF1
                                                                                     ; DEFINE #DD05 sr_DD05
                                                                                     ; DEFINE #DD24 sr_DD24
                                                                                     ; DEFINE #DD86 sr_DD86
                                                                                     ; DEFINE #DD8A sr_DD8A
                                                                                     ; DEFINE #DD93 sr_DD93
                                                                                     ; DEFINE #DDD7 sr_DDD7
                                                                                     ; DEFINE #DE1C sr_DE1C
                                                                                     ; DEFINE #DE51 sr_DE51
                                                                                     ; DEFINE #DE83 sr_DE83
                                                                                     ; DEFINE #DE8D sr_DE8D
                                                                                     ; 
                                                                                     ; no rom currently at exxx (this is the disk rom)
                                                                                     ; 
                                                                                     ; os rom is fxxx
                                                                                     ; Subroutines...
                                                                                     ; --------------
                                                                                     ; 
                                                                                     ; F02E Test for Array variable and Fetch Contents if Valid subroutine
                                                                                     ; F08B Interpret an Array Variable Address to the Workspace Stack subroutine
                                                                                     ; F291 Get to the First Non-Space Character subroutine
                                                                                     ; F36B Get the Integer Variable 'P' into the Workspace Stack subroutine
                                                                                     ; F376 Print Accumulator in Hexadecimal followed by a Space subroutine
                                                                                     ; F37E Print Accumulator in Hexadecimal subroutine
                                                                                     ; F668 Decrement the Vector (#5A),X subroutine
                                                                                     ; F671 Increment the Vector (#5A),X subroutine
                                                                                     ; F678 Plot a Point subroutine
                                                                                     ; F720 Point Clear/Set/Invert subroutine
                                                                                     ; F73B Mode 1 Point Plot subroutine
                                                                                     ; F754 Mode 2 Point Plot subroutine
                                                                                     ; F76D Mode 3 Point Plot subroutine
                                                                                     ; F7AA Mode 4 Point Plot subroutine
                                                                                     ; F7D1 Print ASCII String subroutine
                                                                                     ; F7EC Print the (#D4) word in Hexadecimal followed by a Space subroutine
                                                                                     ; F7EE Print a 4 Byte Word in Hexadecimal followed by a Space subroutine
                                                                                     ; F7F1 Print a 2 Byte Vector in Hexadecimal followed by a Space subroutine
                                                                                     ; F7FA Print a Byte in Hexadecimal followed by a Space subroutine
                                                                                     ; F7FD Print a Space subroutine
                                                                                     ; F802 Print a Byte in Hexadecimal subroutine
                                                                                     ; F818 Copy String from #100 Buffer to #140 Buffer subroutine
                                                                                     ; F84F Transfer Tape File Control Block and Test Name subroutine
                                                                                     ; F875 Get Next Non-Space Character from #100 Buffer subroutine
                                                                                     ; F87E Convert ASCII Hexadecimal Digit to Binary subroutine
                                                                                     ; F893 Read 4 Hexadecimal Characters from #100 buffer subroutine
                                                                                     ; F8EF COS Interpreter subroutine
                                                                                     ; F92F Load an Un-Named File subroutine
                                                                                     ; F955 Execute the Command '*FLOAD' subroutine
                                                                                     ; F958 Execute the Command '*LOAD' subroutine
                                                                                     ; F96E OSLOAD Load File subroutine
                                                                                     ; F98E Print Filename subroutine
                                                                                     ; F9A2 Load Current Block subroutine
                                                                                     ; FA08 Increment and Test Vector subroutine
                                                                                     ; FA19 Execute the Command '*NOMON' subroutine
                                                                                     ; FA1A Execute the Command '*MON' subroutine
                                                                                     ; FA65 Read 4 Hex Characters from #100 buffer with Invalid Test subroutine
                                                                                     ; FA76 COS Post Test subroutine
                                                                                     ; FA86 Save an Un-Named File subroutine
                                                                                     ; FAE5 Save File subroutine
                                                                                     ; FB3B Send Header and Data Block to Tape subroutine
                                                                                     ; FB78 Wait 2 Seconds with Tape Tone Off subroutine
                                                                                     ; FB7A Wait 2 Seconds subroutine
                                                                                     ; FB81 Wait 0.5 Second subroutine
                                                                                     ; FB83 Wait up to 4.25 Seconds subroutine
                                                                                     ; FB8A Wait 0.1 second subroutine
                                                                                     ; FB8E Read Header from Tape and Test for Un-Named File subroutine
                                                                                     ; FBC8 Read Name from Tape and Compare Names subroutine
                                                                                     ; FBE2 Get 8 Bytes from Tape into Workspace subroutine
                                                                                     ; FBEE OSBGET Get Byte from Tape subroutine
                                                                                     ; FC23 Add Byte to Checksum subroutine
                                                                                     ; FC2B Set up Block Load Address subroutine
                                                                                     ; FC38 Print "PLAY TAPE" or "RECORD TAPE" subroutine
                                                                                     ; FC63 Print "REWIND TAPE" subroutine
                                                                                     ; FC76 Wait for Keypress and Print <CR><LF> subroutine
                                                                                     ; FC7C OSBPUT Put Byte to Tape subroutine
                                                                                     ; FCBD Count Duration of Tape Pulse subroutine
                                                                                     ; FCCD Test state of #B002 tape input pulse subroutine
                                                                                     ; FCD8 Wait for 1 Falling Edge of the 2.4KHz Clock subroutine
                                                                                     ; FCDA Wait for 1 to 127 Falling Edges of the 2.4KHz Clock subroutine
                                                                                     ; FCEA Send ASCII Character to Screen subroutine
                                                                                     ; FD0B Handle <ESC> subroutine
                                                                                     ; FD11 Handle <ACK> or <NAK> subroutine
                                                                                     ; FD1A Handle <BEL> subroutine
                                                                                     ; FD29 Print an ASCII Character on the Screen subroutine
                                                                                     ; FD40 Reset Cursor to Start of Current Line Without Deletion subroutine
                                                                                     ; FD44 Invert Character at Current Cursor Position subroutine
                                                                                     ; FD50 Handle <DEL> subroutine
                                                                                     ; FD5C Handle <BS> subroutine
                                                                                     ; FD62 Handle <LF> subroutine
                                                                                     ; FD69 Handle <FF> subroutine
                                                                                     ; FD7D Handle <RS> subroutine
                                                                                     ; FD87 Handle <VT> subroutine
                                                                                     ; FD8D Handle <SO> subroutine
                                                                                     ; FD92 Handle <SI> subroutine
                                                                                     ; FD9A Handle <LOCK> subroutine
                                                                                     ; FDA2 Handle Cursor Keys from Keyboard subroutine
                                                                                     ; FDAE Handle <COPY> Key subroutine
                                                                                     ; FDC0 Handle <DEL> key #F (ASCII #7F) subroutine
                                                                                     ; FDC2 Handle '[\]^_' keys #3B-#3F (ASCII #5B-#5F) subroutine
                                                                                     ; FDC6 Handle 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' keys #21-#3A (ASCII #41-#5A) sub
                                                                                     ; FDC8 Handle '@' key #20 (ASCII #40) subroutine
                                                                                     ; FDD2 Handle '!"#$' keys 1-4 (ASCII #21-#24) subroutine
                                                                                     ; FDD6 Handle '<=>?>' keys #1C-#1F (ASCII #3C-#3F) subroutine
                                                                                     ; FDD8 Handle '123456789:;' keys #11-#1B (ASCII #31-#3B) subroutine
                                                                                     ; FDDF Handle <SPACE> key 0 (ASCII #10) subroutine
                                                                                     ; FDEC Handle <LF>, Scrolling if Necessary subroutine
                                                                                     ; FE08 Scroll the Screen subroutine
                                                                                     ; FE0A Scroll Y lines of the Screen subroutine
                                                                                     ; FE22 Delete Current Line subroutine
                                                                                     ; FE2C Add One Line to the Cursor Position subroutine
                                                                                     ; FE35 Move the Cursor Back One Position subroutine
                                                                                     ; FE52 Send Character to VIA and Screen subroutine
                                                                                     ; FE55 Send Character to Screen subroutine
                                                                                     ; FE66 Wait Until Next CRT Field Flyback subroutine
                                                                                     ; FE6B Wait Until Next or Current CRT Field Flyback subroutine
                                                                                     ; FE71 Scan Key Matrix subroutine
                                                                                     ; FE94 OSRDCH Get Key subroutine
                                                                                     ; FEC4 Decode Control Character subroutine
                                                                                     ; FEFB Send Contents of Accumulator to VIA subroutine
                                                                                     ; FF38 Do <EXT> subroutine
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Other routines...
                                                                                     ; -----------------
                                                                                     ; 
                                                                                     ; F04B Interpreter for #F000 Command Words
                                                                                     ; F085 Set Array Variable to an Arbitrarily Complex Expression
                                                                                     ; F0AE Execute the Command 'DIM'
                                                                                     ; F141 Execute the Command 'RUN'
                                                                                     ; F14C Execute the Command 'WAIT'
                                                                                     ; F155 Table of Compressed Assembler Mnemonic (MSB)
                                                                                     ; F195 Table of Compressed Assembler Mnemonic (LSB)
                                                                                     ; F1D5 Table of Bit Masks for Address Modes (LSB)
                                                                                     ; F1E4 Table of Bit Masks for Address Modes (MSB)
                                                                                     ; F1F3 Table of Offset from Base for Address Modes
                                                                                     ; F211 Table of Base Address Value for Mnemonics Modes
                                                                                     ; F251 Table of Base Address Value for Mnemonics
                                                                                     ; F29C Execute the Command ']'
                                                                                     ; F2A1 Execute the Command '['
                                                                                     ; F32E Deal with Assembler Label Definition
                                                                                     ; F360 Deal with Assembler Comments
                                                                                     ; F38E Deal with Assembler Statement
                                                                                     ; F3F2 Get Assembler Addressing Mode Data and Type
                                                                                     ; F440 Act on Assembler ??? Mode
                                                                                     ; F454 Act on Assembler Immediate Mode
                                                                                     ; F462 Act on Assembler Indirect Mode
                                                                                     ; F49B Construct Assembler Opcode and Data
                                                                                     ; F4EC Handle Assembler Relative Addressing
                                                                                     ; F531 Execute the Command 'OLD'
                                                                                     ; F542 Execute the Command 'DRAW'
                                                                                     ; F546 Execute the Command 'MOVE'
                                                                                     ; F54E Execute the Command 'PLOT'
                                                                                     ; F5B5 Draw a Line Routine
                                                                                     ; F5EB Plot a Line with (X change) <= (Y change)
                                                                                     ; F61C Plot a Line with (X change) > (Y change)
                                                                                     ; F67B Execute the Command 'CLEAR'
                                                                                     ; F6C2 Perform 'CLEAR 0'
                                                                                     ; F6CF Graphics Mode Control Data
                                                                                     ; F6D3 Point Plot Routine LSBs for Graphic Modes 0 to 4
                                                                                     ; F6D8 Point Plot Routine MSBs for Graphic Modes 0 to 4
                                                                                     ; F6DD VDG Control Byte for Graphic Modes 0 to 4
                                                                                     ; F6E2 Mode 0 Point PLot Routine
                                                                                     ; F7C9 Graphics Bit Mask Table
                                                                                     ; F8BE COS Interpreter Command Table
                                                                                     ; F926 Default COS Error Handler
                                                                                     ; FA20 Execute the Command '*RUN'
                                                                                     ; FA2A Execute the Command '*CAT'
                                                                                     ; FA6B Get a Hexadecimal Number and Jump There
                                                                                     ; FABB Execute the Command '*SAVE'
                                                                                     ; F926 Default COS Error Handler
                                                                                     ; FECB WRCHAR Control Code Data Lookup Table
                                                                                     ; FED6 RDCHAR Control Code Data Lookup Table
                                                                                     ; FEE3 WRCHAR Control Code Address Lookup Table
                                                                                     ; FEEE RDCHAR Control Code Address Lookup Table
                                                                                     ; FF3F RESET Routine
                                                                                     ; FF9A Vector Data Table
                                                                                     ; FFB2 IRQ/BRK Handler
                                                                                     ; FFC0 Execute BRK
                                                                                     ; FFC7 Execute NMI
                                                                                     ; FFCB Operating System Jump Table
                                                                                     ; 
                                                                                     ; DEFINE #F08B sr_F08B
                                                                                     ; DEFINE #F08E sr_F08E
                                                                                     ; DEFINE #F291 sr_F291
                                                                                     ; DEFINE #F360 sr_F360
                                                                                     ; DEFINE #F376 sr_F376
                                                                                     ; DEFINE #F379 sr_F379
                                                                                     ; DEFINE #F37E sr_F37E
                                                                                     ; DEFINE #F38E sr_F38E
                                                                                     ; 
                                                                                     ; DEFINE #F531 sr_OLD
                                                                                     ; DEFINE #F542 sr_DRAW
                                                                                     ; DEFINE #F546 sr_MOVE
                                                                                     ; DEFINE #F54E sr_PLOT
                                                                                     ; 
                                                                                     ; DEFINE #F644 sr_F644
                                                                                     ; DEFINE #F655 sr_F655
                                                                                     ; DEFINE #F678 sr_F678
                                                                                     ; DEFINE #F7D1 sr_F7D1
                                                                                     ; DEFINE #F7EC sr_F7EC
                                                                                     ; DEFINE #F7F1 sr_F7F1
                                                                                     ; DEFINE #F7FD sr_F7FD
                                                                                     ; DEFINE #F802 sr_F802
                                                                                     ; DEFINE #F80B sr_F80B
                                                                                     ; DEFINE #F818 sr_F818
                                                                                     ; DEFINE #F84F sr_F84F
                                                                                     ; DEFINE #F876 sr_F876
                                                                                     ; DEFINE #F87E sr_F87E
                                                                                     ; DEFINE #F893 sr_F893
                                                                                     ; DEFINE #F958 sr_F958
                                                                                     ; DEFINE #F992 sr_F992
                                                                                     ; DEFINE #F999 sr_F999
                                                                                     ; DEFINE #F9A2 sr_F9A2
                                                                                     ; DEFINE #FA08 sr_FA08
                                                                                     ; DEFINE #FA65 sr_FA65
                                                                                     ; DEFINE #FA76 sr_FA76
                                                                                     ; DEFINE #FB3B sr_FB3B
                                                                                     ; DEFINE #FB7A sr_FB7A
                                                                                     ; DEFINE #FB81 sr_FB81
                                                                                     ; DEFINE #FB8A sr_FB8A
                                                                                     ; DEFINE #FB8E sr_FB8E
                                                                                     ; DEFINE #FBC9 sr_FBC9
                                                                                     ; DEFINE #FBE2 sr_FBE2
                                                                                     ; DEFINE #FBE4 sr_FBE4
                                                                                     ; DEFINE #FC23 sr_FC23
                                                                                     ; DEFINE #FC2B sr_FC2B
                                                                                     ; DEFINE #FC3E sr_FC3E
                                                                                     ; DEFINE #FC40 sr_FC40
                                                                                     ; DEFINE #FCBD sr_FCBD
                                                                                     ; DEFINE #FCCD sr_FCCD
                                                                                     ; DEFINE #FCD8 sr_FCD8
                                                                                     ; DEFINE #FCDA sr_FCDA
                                                                                     ; DEFINE #FCEA sr_FCEA
                                                                                     ; DEFINE #FD13 sr_FD13
                                                                                     ; DEFINE #FD44 sr_FD44
                                                                                     ; DEFINE #FDEC sr_FDEC
                                                                                     ; DEFINE #FE35 sr_FE35
                                                                                     ; DEFINE #FE3A sr_FE3A
                                                                                     ; DEFINE #FE66 sr_FE66
                                                                                     ; DEFINE #FE6B sr_FE6B
                                                                                     ; DEFINE #FE71 sr_FE71
                                                                                     ; DEFINE #FEC5 sr_FEC5
                                                                                     ; DEFINE #FE94 sr_OSRDCH
                                                                                     ; DEFINE #FEFB sr_FEFB
                                                                                     ; DEFINE #FFCB sr_FFCB
                                                                                     ; DEFINE #FFCE sr_FFCE
                                                                                     ; DEFINE #FFD1 sr_FFD1
                                                                                     ; DEFINE #FFD4 sr_FFD4
                                                                                     ; DEFINE #FFD7 sr_FFD7
                                                                                     ; DEFINE #FFDA sr_FFDA
                                                                                     ; DEFINE #FFDD sr_FFDD
                                                                                     ; DEFINE #FFE0 sr_FFE0
                                                                                     ; DEFINE #FFE3 sr_FFE3
                                                                                     ; DEFINE #FFE6 sr_FFE6
                                                                                     ; DEFINE #FFED sr_FFED
                                                                                     ; DEFINE #FFF4 sr_FFF4
                                                                                     ; DEFINE #FFF7 sr_FFF7
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ****************************************
                                                                                     ; * Disassembly of Atom Operating System *
                                                                                     ; *           from #C000 to #CFFF        *
                                                                                     ; ****************************************
                                                                                     ; 
                                                                                     ; 1985-05-06	Version 1.0
                                                                                     ; 1993-08-25	Version 1.1 Minor corrections by KH:
                                                                                     ; C08D:	.BYTE	"*E",	$F0	;  ASTERISK MISSING FROM ORIGINAL DISASSEMBLY!
                                                                                     ; C09C:	.BYTE	"INT",	$C3	;; error in original disassembly
                                                                                     ; C09C:	.BYTE	"INK",	$C3	;; more likely end of LINK command
                                                                                     ; Noted conflict between original disassembly and some ROM binaries at:
                                                                                     ; CBB6  99 62 02  STA #262,Y	; 62 not 61
                                                                                     ; CBBB  99 6d 02  STA #26D,Y	; 6D not 6C
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Interpreter Command Lookup Table
                                                                                     ; --------------------------------
                                                                                     ; 
                                                                                     ; - Each sub table is terminated by a negative byte.
                                                                                     ; - A termination byte of #FF causes BRK to be executed on failure.
                                                                                     ; 
49152 04 | C000 3C 3D 3E FE                                                          ; <=>.
49156 16 | C004 2D 2B C8 23 28 21 3F 52 54 4C 43 41 50 45 47 42                      ; -+.#(!?RTLCAPEGB
49172 02 | C014 46 F0                                                                ; F.
49174 02 | C016 54 FF                                                                ; T.
49176 02 | C018 4F CB                                                                ; O.
49178 02 | C01A 53 CB                                                                ; S.
49180 04 | C01C 54 45 50 CB                                                          ; TEP.
49184 02 | C020 54 C3                                                                ; T.
49186 04 | C022 48 45 4E C3                                                          ; HEN.
49190 05 | C026 22 24 CE CE CC                                                       ; "$...
49195 03 | C02B 24 2C C5                                                             ; $.,
49198 08 | C02E 24 26 3B 0D 2C C3 C5 C2                                              ; $&;.,...
49206 02 | C036 3E C7                                                                ; >.
49208 04 | C038 3D C7 C7 C7                                                          ; =...
49212 04 | C03C 3D C7 C7 C8                                                          ; =...
49216 03 | C040 52 C7 C7                                                             ; R..
49219 03 | C043 4F 41 FE                                                             ; OA.
49222 02 | C046 24 C7                                                                ; $.
49224 02 | C048 48 C9                                                                ; H.
49226 03 | C04A 45 4E C9                                                             ; EN.
49229 07 | C04D 4E 44 C7 C9 C9 C9 C9                                                 ; ND.....
49236 03 | C054 4E 44 C9                                                             ; ND.
49239 03 | C057 4F 50 C9                                                             ; OP.
49242 05 | C05A 4F 55 4E 54 C9                                                       ; OUNT.
49247 03 | C05F 42 53 C9                                                             ; BS.
49250 03 | C062 54 52 CF                                                             ; TR.
49253 03 | C065 58 54 CF                                                             ; XT.
49256 03 | C068 45 54 CF                                                             ; ET.
49259 04 | C06B 47 45 54 CF                                                          ; GET.
49263 03 | C06F 49 4E CF                                                             ; IN.
49266 06 | C072 4F 55 54 CF C3 C3                                                    ; OUT...
49272 05 | C078 52 49 4E 54 C3                                                       ; RINT.
49277 16 | C07D 4E 4C 55 4E 49 47 52 46 21 3F 24 50 44 4C 53 42                      ; NLUNIGRF!?$PDLSB
49293 03 | C08D 2A 45 F0                                                             ; *E.
                                                                                     ; 
49296 04 | C090 41 56 45 CF                                                          ; AVE.
49300 03 | C094 45 57 C2                                                             ; EW.
49303 02 | C097 4F CC                                                                ; O.
49305 03 | C099 45 54 C3                                                             ; ET.
49308 04 | C09C 49 4E 4B C3                                                          ; INK.
                                                                                     ; 
49312 04 | C0A0 49 53 54 CA                                                          ; IST.
49316 04 | C0A4 4F 41 44 CE                                                          ; OAD.
49320 05 | C0A8 4E 54 49 4C CC                                                       ; NTIL.
49325 04 | C0AD 45 58 54 CA                                                          ; EXT.
49329 02 | C0B1 46 C5                                                                ; F.
49331 05 | C0B3 4E 50 55 54 CC                                                       ; NPUT.
49336 05 | C0B8 4F 53 55 42 CB                                                       ; OSUB.
49341 04 | C0BD 4F 54 4F CC                                                          ; OTO.
49345 06 | C0C1 45 54 55 52 4E CB                                                    ; ETURN.
49351 03 | C0C7 45 4D C5                                                             ; EM.
49354 03 | C0CA 55 4E F1                                                             ; UN.
49357 03 | C0CD 4F 52 CB                                                             ; OR.
49360 03 | C0D0 4E 44 CD                                                             ; ND.
;;ERR missing data curr: 49362 should be next: 49363
49362 04 | C0D2 47 45 54 CF                                                          ; GET.
49366 04 | C0D6 50 55 54 CF                                                          ; PUT.
49370 04 | C0DA 48 55 54 CF                                                          ; HUT.
;;ERR missing data curr: 49375 should be next: 49374
49375 04 | C0DF 50 55 54 CF                                                          ; PUT.
49379 03 | C0E3 54 52 CF                                                             ; TR.
49382 07 | C0E6 55 54 CF C3 C4 CD C4                                                 ; UT.....
49389 02 | C0ED 2C FE                                                                ; ,.
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Jump Address and Return Branch Table
                                                                                     ; ------------------------------------
                                                                                     ; 
49391 01 | C0EF 36                                                                   ; 6
49392 16 | C0F0 3B 3C C0 3F 06 DC 50 51 52 53 54 57 4A 5A 5F 62                      ; ;<.?..PQRSTWJZ_b
49408 16 | C100 65 68 6B 6F 2E 18 AC 17 81 1C BE 17 17 17 A2 22                      ; ehko..........."
49424 16 | C110 1B 17 17 17 1B 29 28 B6 BF B6 2A B7 58 76 77 34                      ; .....)(...*.Xvw4
49440 16 | C120 34 7C 3F 4A 78 38 6D 3A 64 74 5B 3E 7B 82 C1 45                      ; 4|?Jx8m:dt[>{..E
49456 16 | C130 22 31 40 4D 4D 42 53 15 D2 15 15 BD 45 45 14 0A                      ; "1@MMBS.....EE..
49472 16 | C140 44 5F 4C 15 15 86 15 15 73 48 15 15 15 7A 15 15                      ; D_L.....sH...z..
49488 16 | C150 02 15 15 29 15 15 28 15 15 66 15 15 15 5B 72 15                      ; ...)..(..f...[r.
49504 16 | C160 A6 15 15 15 A7 90 35 E3 8F 8F 8F 34 94 A0 A8 AD                      ; ......5....4....
49520 16 | C170 B1 BD C1 CD E9 EA EB 78 97 99 D3 DF EC D0 4B 8F                      ; .......x......K.
49536 16 | C180 8F 8F 0A 8F AD AD 8F F0 9C 8F 25 8F 8F 8F B2 A4                      ; ..........%.....
49552 16 | C190 9C 8F 51 99 8F 8F ED 8F 8F 8F 8F D2 8F 8F 8F CD                      ; ..Q.............
49568 16 | C1A0 B3 66 8F 8F 8F 8F 81 8F 8F 8F 8F D2 8F B8 8F 05                      ; .f..............
49584 16 | C1B0 CA C7 8F 8F 8F EC 8F 8F 75 8F 8F 41 8F 8F 57 8F                      ; ........u..A..W.
49600 16 | C1C0 8F 98 D7 8F 8F E3 DB 8F 8F C5 90 8F 8F B6 8F 8F                      ; ................
49616 13 | C1D0 8F 8F E6 8F 47 8F 8F 95 EE 06 5C 0F 35                               ; ....G.....\.5
                                                                                     ; Interpreter Single Byte Command Lookup Table
                                                                                     ; --------------------------------------------
49629 05 | C1DD 2D 2B 7C 3A FE                                                       ; -+|:.
49634 07 | C1E2 2A 2F 25 21 3F 26 FE                                                 ; */%!?&.
49641 02 | C1E9 29 FF                                                                ; ).
49643 02 | C1EB 3D FF                                                                ; =.
49645 04 | C1ED 21 3F 24 FF                                                          ; !?$.
49649 04 | C1F1 3D 21 3F FF                                                          ; =!?.
49653 03 | C1F5 27 22 FE                                                             ; '".
                                                                                     ; LSB Execution Address Table for Single Byte Commands
                                                                                     ; ----------------------------------------------------
49656 08 | C1F8 B7 9A D3 EF EF 13 5E 70                                              ; 
49664 16 | C200 B3 9C 7B 7B 78 78 78 78 EE 06 5C 5C E5 75 7B 7B                      ; 
49680 02 | C210 6F 7A                                                                ; 
                                                                                     ; MSB Execution Address Table for Single Byte Commands
                                                                                     ; ----------------------------------------------------
49682 14 | C212 C7 C7 C7 C7 C7 C8 C8 C8 C8 C8 C8 C8 C2 C2                            ; 
49696 12 | C220 C2 C2 C3 C4 CD CD C3 CD CD CD C3 C3                                  ; ............
                                                                                     ; Function Interpreter subroutine
                                                                                     ; -------------------------------
                                                                                     ; - Evaluates an arbitrarily complex function pointed to by (5),Y where Y=?3
                                                                                     ; and stores the result on the Workspace Stack pointed to by ?4.
49708 03 | C22C 20 3E CF   | JSR #CF3E                                               ; Get <factor> into Y register
49711 02 | C22F 84 0F      | STY #F                                                  ; Hex print flag, updated by comma
                                                                                     ; Search for ',' subroutine
                                                                                     ; -------------------------
49713 02 | C231 A2 ED      | LDX @#ED                                                ; Set table pointer to #C0ED to search for ',' only
                                                                                     ; Interpreter subroutine
                                                                                     ; ----------------------
                                                                                     ; - Interprets the command word at #C0EE,X against text at (#5),?3
49715 02 | C233 A4 03      | LDY #3                                                  ; Get the interpreter pointer
                                                                                     ; 
                                                                                     ; SKIP ANY PRECEDING SPACES
49717 01 | C235 88         | DEY                                                     ; 
49718 01 | C236 C8         | INY                                                     ; Point to the next character in text
49719 02 | C237 B1 05      | LDA (#5),Y                                              ; ..and fetch it
49721 02 | C239 C9 20      | CMP @#20                                                ; Is it <SPC> ?
49723 02 | C23B F0 F9      | BEQ #C236                                               ; ..yes, skip to next character
                                                                                     ; GET FIRST CHARACTER MATCH
49725 02 | C23D 84 5E      | STY #5E                                                 ; Save current interpreter index
49727 02 | C23F 85 52      | STA #52                                                 ; Save character under interpretation
49729 01 | C241 E8         | INX                                                     ; Point to next character in command table
49730 03 | C242 BD FF BF   | LDA #BFFF,X                                             ; ..and fetch it
49733 02 | C245 30 24      | BMI #C26B                                               ; ..a negative byte indicates the end of the initial letter table
49735 02 | C247 C5 52      | CMP #52                                                 ; Same as character under interpretation ?
49737 02 | C249 D0 F6      | BNE #C241                                               ; ..no, try next initial letter
                                                                                     ; MATCH THE REST OF THE COMMAND WORD
49739 03 | C24B BD EE C0   | LDA #C0EE,X                                             ; Get index to rest-of-command-word table
49742 01 | C24E AA         | TAX                                                     ; This is now the new table pointer
49743 01 | C24F E8         | INX                                                     ; Point to the next character in the table
49744 01 | C250 C8         | INY                                                     ; Point to the next character under analysis
49745 03 | C251 BD FF BF   | LDA #BFFF,X                                             ; Fetch the next command table character
49748 02 | C254 30 15      | BMI #C26B                                               ; ..a negative byte means either a successful match of end of command table
49750 02 | C256 D1 05      | CMP (#5),Y                                              ; Same as character under interpretation ?
49752 02 | C258 F0 F5      | BEQ #C24F                                               ; ..yes, now try to match the next character
49754 02 | C25A B1 05      | LDA (#5),Y                                              ; ..no, get the failed character under interpretation
49756 02 | C25C C9 2E      | CMP @#2E                                                ; Is it '.' indicating an abbreviation ?
49758 02 | C25E F0 04      | BEQ #C264                                               ; ..yes, so it's a successful match
49760 02 | C260 A4 5E      | LDY #5E                                                 ; ..no, so reset the interpreter pointer
49762 02 | C262 10 E7      | BPL #C24B                                               ; ..and try to match the next word in the command table
                                                                                     ; SUCCESSFUL ABREVIATED MATCH - SKIP TO THE END OF THE COMMAND WORD IN THE TABLE
49764 01 | C264 E8         | INX                                                     ; Point to the next character in the table
49765 03 | C265 BD FF BF   | LDA #BFFF,X                                             ; ..and fetch it
49768 02 | C268 10 FA      | BPL #C264                                               ; Keep incrementing to reach the command word's negative termination byte
49770 01 | C26A C8         | INY                                                     ; Point to the next character under analysis
                                                                                     ; Test for success or failure
49771 02 | C26B C9 FE      | CMP @#FE                                                ; reached the end of the command table ?
49773 02 | C26D B0 3B      | BCS #C2AA                                               ; ..yes, return or execute BRK as required
                                                                                     ; GET THE COMMAND WORD'S JUMP ADDRESS INTO ZERO PAGE AND JUMP TO IT
49775 02 | C26F 85 53      | STA #53                                                 ; Termination byte is the MSB jump address
49777 03 | C271 BD EE C0   | LDA #C0EE,X                                             ; Get the LSB jump address from the table
49780 02 | C274 90 29      | BCC #C29F                                               ; Dump it to #52, update #3 and #4 and jump to the command address ow in (#52)
49782 02 | C276 A6 04      | LDX #4                                                  ; 
49784 01 | C278 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Search for '=' subroutine
                                                                                     ; -------------------------
                                                                                     ; - Looks for '=', skipping leading spaces, in text pointed to by (5),Y where Y=?3.
                                                                                     ; - Executes BRK if the first non space character is not '='.
                                                                                     ; - Returns with Y register pointing to the next character.
                                                                                     ; - Returns with the interpreter pointer ?3 updated.
                                                                                     ; - Returns with X register loaded with the w/s pointer ?4.
                                                                                     ; 
49785 02 | C279 A2 0E      | LDX @#E                                                 ; Point to '=' at #C1EB
                                                                                     ; 
                                                                                     ; Single Byte Command Interpreter
                                                                                     ; -------------------------------
                                                                                     ; - Interpretes the single byte symbols at #C1DD.
                                                                                     ; - Enter with X register pointing to the symbol table to be used.
49787 02 | C27B A4 03      | LDY #3                                                  ; Get the interpreter pointer
49789 01 | C27D 88         | DEY                                                     ; 
49790 01 | C27E C8         | INY                                                     ; 
49791 02 | C27F B1 05      | LDA (#5),Y                                              ; Get the next character from text
49793 02 | C281 C9 20      | CMP @#20                                                ; Is it <spc> ?
49795 02 | C283 F0 F9      | BEQ #C27E                                               ; ..yes, skip preceding spaces
49797 03 | C285 DD DD C1   | CMP #C1DD,X                                             ; Is it this single byte symbol ?
49800 02 | C288 F0 0C      | BEQ #C296                                               ; ..yes, go fetch its jump address
49802 02 | C28A 85 52      | STA #52                                                 ; ..no, save the character under analysis
49804 01 | C28C E8         | INX                                                     ; Point to the next table symbol
49805 03 | C28D BD DD C1   | LDA #C1DD,X                                             ; ..and fetch it
49808 02 | C290 30 16      | BMI #C2A8                                               ; ..a negative byte means the end of table
                                                                                     ; termination byte has been reached
49810 02 | C292 C5 52      | CMP #52                                                 ; Does this symbol match the text ?
49812 02 | C294 D0 F6      | BNE #C28C                                               ; ..no, try the next symbol
                                                                                     ; 
                                                                                     ; MATCHED SYMBOL - FETCH JUMP ADDRESS
                                                                                     ; 
49814 03 | C296 BD 12 C2   | LDA #C212,X                                             ; Get the MSB jump address
49817 02 | C299 85 53      | STA #53                                                 ; ..into workspace
49819 03 | C29B BD F8 C1   | LDA #C1F8,X                                             ; Get the LSB jump address
49822 01 | C29E C8         | INY                                                     ; Increment the text pointer past the                                 character just successfully interpreted
49823 02 | C29F 85 52      | STA #52                                                 ; Dump the MSB jump address to workspace
49825 02 | C2A1 84 03      | STY #3                                                  ; Update the interpreter pointer
49827 02 | C2A3 A6 04      | LDX #4                                                  ; Get the current workspace pointer
49829 03 | C2A5 6C 52 00   | JMP (#52)                                               ; ..and jump
                                                                                     ; 
                                                                                     ; END OF TABLE ACTION
                                                                                     ; 
49832 02 | C2A8 C9 FE      | CMP @#FE                                                ; Non-destructive failure ?
49834 02 | C2AA F0 CA      | BEQ #C276                                               ; ..yes, load workspace pointer and return
49836 01 | C2AC 00         | BRK                                                     ; ..no, error 174
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'NEW'
                                                                                     ; -------------------------
                                                                                     ; 
                                                                                     ; - Resets the print field length LSB variable '@' to the default of 8.
                                                                                     ; - Exits back to direct mode.
                                                                                     ; 
49837 03 | C2AD 20 E4 C4   | JSR #C4E4                                               ; Perform the interpreter post test
49840 02 | C2B0 D0 04      | BNE #C2B6                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 'Cold Start' routine - Text at #2900
                                                                                     ; ------------------------------------
                                                                                     ; 
                                                                                     ; - Comes from BREAK routine  at #FF94.
                                                                                     ; - Points the text pointer ?#12 at #2900 and performs a 'NEW'.
                                                                                     ; 
49842 02 | C2B2 A9 29      | LDA @#29                                                ; 
49844 02 | C2B4 85 12      | STA #12                                                 ; Set text pointer to page #29
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 'Cold Start' routine - unspecified text Space
                                                                                     ; ---------------------------------------------
                                                                                     ; 
                                                                                     ; - If coming from the BREAK routine at #FF97, the text space is #8200.
                                                                                     ; - Performs an 'NEW' at the current text space.
                                                                                     ; 
49846 02 | C2B6 A9 0D      | LDA @#D                                                 ; 
49848 02 | C2B8 A4 12      | LDY #12                                                 ; Get the text page
49850 02 | C2BA 84 0E      | STY #E                                                  ; Set MSB TOP to the start of text
49852 02 | C2BC A0 00      | LDY @#0                                                 ; 
49854 02 | C2BE 84 0D      | STY #D                                                  ; Set LSB TOP to the start of text
49856 02 | C2C0 91 0D      | STA (#D),Y                                              ; First byte of text is #D
49858 02 | C2C2 A9 FF      | LDA @#FF                                                ; Get a text terminator
49860 01 | C2C4 C8         | INY                                                     ; Point to the second byte of text
49861 02 | C2C5 91 0D      | STA (#D),Y                                              ; ..and dump the terminator
49863 01 | C2C7 C8         | INY                                                     ; Point to the third byte of text
49864 02 | C2C8 84 0D      | STY #D                                                  ; ..and set LSB TOP
49866 02 | C2CA A9 08      | LDA @#8                                                 ; Get the default print length
49868 03 | C2CC 8D 21 03   | STA #321                                                ; ..and set LSB integer variable '@'
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Direct Command Handler
                                                                                     ; ----------------------
                                                                                     ; 
                                                                                     ; - Entered after a command execution or at the end of a program.
                                                                                     ; 
49871 02 | C2CF A9 3E      | LDA @#3E                                                ; Get '>'
49873 01 | C2D1 D8         | CLD                                                     ; 
49874 03 | C2D2 20 0F CD   | JSR #CD0F                                               ; Print the contents of the accumulator and get a line of text terminated by <CR> from the keyboard into the #100 buffer
                                                                                     ; 
                                                                                     ; INITIALISE THE (5),Y TEXT POINTER TO THE START OF THE #100 BUFFER
                                                                                     ; 
49877 02 | C2D5 A2 01      | LDX @#1                                                 ; 
49879 02 | C2D7 86 06      | STX #6                                                  ; 
49881 01 | C2D9 CA         | DEX                                                     ; 
49882 02 | C2DA 86 05      | STX #5                                                  ; 
                                                                                     ; CLEAR LINE NUMBER TO ZERO - DIRECT MODE
                                                                                     ; 
49884 02 | C2DC 86 01      | STX #1                                                  ; Clear the MSB line number
49886 02 | C2DE 86 02      | STX #2                                                  ; Clear the LSB line number
                                                                                     ; 
                                                                                     ; SET BRKVEC TO THE DEFAULT ROUTINE AT #C9D8
                                                                                     ; 
49888 02 | C2E0 A9 D8      | LDA @#D8                                                ; 
49890 03 | C2E2 8D 02 02   | STA #202                                                ; 
49893 02 | C2E5 A9 C9      | LDA @#C9                                                ; 
49895 03 | C2E7 8D 03 02   | STA #203                                                ; 
                                                                                     ; 
                                                                                     ; SET THE BASIC ERROR HANDLER TO THE
;;ERR missing data curr: 57082 should be next: 49898
57082 00 | DEFA                                                                      ; ULT TEXT AT #C9E7
                                                                                     ; 
;;ERR missing data curr: 49898 should be next: 57082
49898 02 | C2EA A9 E7      | LDA @#E7                                                ; 
49900 02 | C2EC 85 10      | STA #10                                                 ; 
49902 02 | C2EE A9 C9      | LDA @#C9                                                ; 
49904 02 | C2F0 85 11      | STA #11                                                 ; 
                                                                                     ; 
                                                                                     ; EXECUTE THE TEXT POINTED BTO BY (5),Y
                                                                                     ; 
49906 02 | C2F2 A2 FF      | LDX @#FF                                                ; 
49908 01 | C2F4 9A         | TXS                                                     ; Reset the stack poimter
49909 02 | C2F5 A9 00      | LDA @#0                                                 ; 
49911 02 | C2F7 85 04      | STA #4                                                  ; Reset the workspace stack poimter
49913 02 | C2F9 85 03      | STA #3                                                  ; Reset the interpreter index
49915 02 | C2FB 85 15      | STA #15                                                 ; Reset the FOR..NEXT stack poimter
49917 02 | C2FD 85 13      | STA #13                                                 ; Reset the GOSUB..RETURN stack poimter
49919 02 | C2FF 85 14      | STA #14                                                 ; Reset the DO..UNTIL stack poimter
49921 02 | C301 A2 34      | LDX @#34                                                ; 
                                                                                     ; 
                                                                                     ; CLEAR THE LABEL (@ to z) ADDRESS STACK
                                                                                     ; 
49923 03 | C303 9D 8C 03   | STA #38C,X                                              ; 
49926 01 | C306 CA         | DEX                                                     ; 
49927 02 | C307 D0 FA      | BNE #C303                                               ; 
                                                                                     ; 
49929 03 | C309 20 34 C4   | JSR #C434                                               ; If the first non space character is                                 alphabetic and the the subsequent                                 is not (but is not '.')
49932 02 | C30C B0 21      | BCS #C32F                                               ; ..then interpret a simple integer variable                                 definition
                                                                                     ; 
                                                                                     ; CHECK FOR TEXT LINE ENTRY OR DELETION
                                                                                     ; 
49934 03 | C30E 20 6A C4   | JSR #C46A                                               ; interpret a decimal string as a number                                 into the w/s stack, and increment ?4
49937 02 | C311 90 03      | BCC #C316                                               ; ..invalid number
49939 03 | C313 4C C9 CD   | JMP #CDC9                                               ; Deal with line insertion and removal
                                                                                     ; 
                                                                                     ; EXECUTE A DIRECT COMMAND AT #100
                                                                                     ; 
49942 02 | C316 A2 7D      | LDX @#7D                                                ; Set the interpreter table pointer to #C???
49944 03 | C318 4C 33 C2   | JMP #C233                                               ; ..and interpret & execute the command
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'THEN'
                                                                                     ; --------------------------
                                                                                     ; 
49947 03 | C31B 20 34 C4   | JSR #C434                                               ; If the first non space character is                                 alphabetic and the the subsequent                                 is not (but is not '.')
49950 02 | C31E B0 0F      | BCS #C32F                                               ; ..then treat this as an integer variable                                 assignment
49952 02 | C320 A2 7F      | LDX @#7F                                                ; Set the interpreter table pointer to #C???
49954 03 | C322 4C 33 C2   | JMP #C233                                               ; ..and interpret & execute the command
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'LET'
                                                                                     ; -------------------------
                                                                                     ; 
49957 03 | C325 20 34 C4   | JSR #C434                                               ; If the first non space character is                                 alphabetic and the the subsequent                                 is not (but is not '.')
49960 02 | C328 B0 05      | BCS #C32F                                               ; ..then interpret a simple integer variable
49962 02 | C32A A2 10      | LDX @#10                                                ; Otherwise set the table pointer
49964 03 | C32C 4C 7B C2   | JMP #C27B                                               ; ..and interpret a ?, ! or $ definition
                                                                                     ; 
                                                                                     ; EXECUTE {simple integer variable} =, ? OR
                                                                                     ; ! ASSIGNMENT
                                                                                     ; 
49967 02 | C32F A2 14      | LDX @#14                                                ; Set table pointer to
49969 03 | C331 4C 7B C2   | JMP #C27B                                               ; Search for & execute '=', '?' or '!'
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'PRINT'
                                                                                     ; ---------------------------
                                                                                     ; 
49972 01 | C334 38         | SEC                                                     ; 
49973 02 | C335 66 0F      | ROR #F                                                  ; Set bit 7 of the hex print flag to get
                                                                                     ; the default decimal print mode
49975 03 | C337 20 72 C3   | JSR #C372                                               ; 
49978 02 | C33A A2 2E      | LDX @#2E                                                ; Set the interpreter table pointer to #C???
49980 03 | C33C 4C 33 C2   | JMP #C233                                               ; ..and interpret & execute '=', '?' or '!'
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute and Print an Arbitrarily Complex Expression
                                                                                     ; ---------------------------------------------------
                                                                                     ; 
49983 03 | C33F 20 8B C7   | JSR #C78B                                               ; Evaluate an arbitrarily complex expression, followed by a single byte symbol, followed by '<', '=' or '>'
49986 03 | C342 20 CB C3   | JSR #C3CB                                               ; Copy the last level of the w/s stack to #52(LSB)..#55(MSB) & increment w/s pointer
49989 02 | C345 A5 0F      | LDA #F                                                  ; Print in decimal ?
49991 02 | C347 30 21      | BMI #C36A                                               ; ..yes, branch to decimal print routine
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print the 4 byte Word at #52..#55 in Hexadecimal subroutine
                                                                                     ; -----------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Prints the word #52(LSB) to #55(MSB) as a 4 byte hex word in field
                                                                                     ; size @ suppressing any leading zeros.
                                                                                     ; - Destroys A,X,Y registers.
                                                                                     ; 
49993 02 | C349 A2 00      | LDX @#0                                                 ; 
49995 02 | C34B 86 27      | STX #27                                                 ; Clear the negative flag used by the print routine at #C5C8
49997 02 | C34D A0 00      | LDY @#0                                                 ; Clear index to the 4-byte word
49999 03 | C34F B9 52 00   | LDA #52,Y                                               ; Get the current byte of the word
50002 01 | C352 48         | PHA                                                     ; Save a copy for upper nibble conversion
50003 02 | C353 29 0F      | AND @#F                                                 ; Mask off the upper nibble
50005 02 | C355 95 45      | STA #45,X                                               ; ..and dump the lower nibble to w/s
50007 01 | C357 68         | PLA                                                     ; Restore the copy
50008 01 | C358 4A         | LSR A                                                   ; )
50009 01 | C359 4A         | LSR A                                                   ; )
50010 01 | C35A 4A         | LSR A                                                   ; )
50011 01 | C35B 4A         | LSR A                                                   ; ) Bring the upper nibble down to the lower nibble
50012 01 | C35C E8         | INX                                                     ; Increment the w/s pointer
50013 02 | C35D 95 45      | STA #45,X                                               ; ..and dump the converted upper nibble
50015 01 | C35F E8         | INX                                                     ; Increment the w/s pointe for the next byte
50016 01 | C360 C8         | INY                                                     ; Point to the next byte of theword
50017 02 | C361 C0 04      | CPY @#4                                                 ; Done all $ bytes ?
50019 02 | C363 90 EA      | BCC #C34F                                               ; ..no, go for the next one
50021 03 | C365 20 C8 C5   | JSR #C5C8                                               ; Print the digit stream suppressing leading zeros
50024 02 | C368 30 CD      | BMI #C337                                               ; Branch ALWAYS to interpret the next item in the print stream
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Decimal print routine
                                                                                     ; ---------------------
                                                                                     ; 
50026 03 | C36A 20 89 C5   | JSR #C589                                               ; Print the lowest level of the w/s stack as                                 a signed decimal number in field size @
50029 02 | C36D 30 C8      | BMI #C337                                               ; Branch ALWAYS to interpret the next item                                 in the print stream
                                                                                     ; 
                                                                                     ; 
50031 03 | C36F 20 54 CD   | JSR #CD54                                               ; Send <CR><LF> to OSWRCH
50034 02 | C372 A2 18      | LDX @#18                                                ; Set the interpreter table pointer to #C???
50036 03 | C374 4C 7B C2   | JMP #C27B                                               ; ..and interpret 'O' ??
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? Print routine ???
                                                                                     ; ---------------------
                                                                                     ; 
50039 03 | C377 20 4C CA   | JSR #CA4C                                               ; Increment COUNT and send the contents of
                                                                                     ; the accumulator to OSWRCH
50042 02 | C37A B1 05      | LDA (#5),Y                                              ; 
50044 01 | C37C C8         | INY                                                     ; 
50045 02 | C37D C9 0D      | CMP @#D                                                 ; 
50047 02 | C37F F0 1C      | BEQ #C39D                                               ; 
50049 02 | C381 84 03      | STY #3                                                  ; 
50051 02 | C383 C9 22      | CMP @#22                                                ; 
50053 02 | C385 D0 F0      | BNE #C377                                               ; 
50055 02 | C387 B1 05      | LDA (#5),Y                                              ; 
50057 02 | C389 C9 22      | CMP @#22                                                ; 
50059 02 | C38B D0 E5      | BNE #C372                                               ; 
50061 01 | C38D C8         | INY                                                     ; 
50062 02 | C38E B0 E7      | BCS #C377                                               ; 
50064 03 | C390 20 8B C7   | JSR #C78B                                               ; 
50067 03 | C393 20 CB C3   | JSR #C3CB                                               ; 
50070 02 | C396 05 54      | ORA #54                                                 ; 
50072 02 | C398 05 53      | ORA #53                                                 ; 
50074 02 | C39A F0 0E      | BEQ #C3AA                                               ; 
50076 02 | C39C A0 00      | LDY @#0                                                 ; 
50078 02 | C39E B1 52      | LDA (#52),Y                                             ; 
50080 02 | C3A0 C9 0D      | CMP @#D                                                 ; 
50082 02 | C3A2 F0 93      | BEQ #C337                                               ; 
50084 03 | C3A4 20 4C CA   | JSR #CA4C                                               ; 
50087 01 | C3A7 C8         | INY                                                     ; 
50088 02 | C3A8 D0 F4      | BNE #C39E                                               ; 
50090 02 | C3AA A5 52      | LDA #52                                                 ; 
50092 03 | C3AC 20 4C CA   | JSR #CA4C                                               ; 
50095 03 | C3AF 4C 37 C3   | JMP #C337                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'LINK'
                                                                                     ; --------------------------
                                                                                     ; 
50098 03 | C3B2 20 C8 C3   | JSR #C3C8                                               ; Evaluate an arbitrarily complex function                                 to #52(LSB)..#55(MSB)
50101 03 | C3B5 20 E4 C4   | JSR #C4E4                                               ; Do interpreter post-test
50104 03 | C3B8 AD 22 03   | LDA #322                                                ; Load accumulator with LSB integer 'A'
50107 03 | C3BB AE 39 03   | LDX #339                                                ; Load X register with LSB integer 'X'
50110 03 | C3BE AC 3A 03   | LDY #33A                                                ; Load Y register with LSB integer 'Y'
50113 03 | C3C1 20 A5 C2   | JSR #C2A5                                               ; Indirect jump to (#52)
50116 01 | C3C4 D8         | CLD                                                     ; Ensure binary mode after nasty user's prog
50117 03 | C3C5 4C 5B C5   | JMP #C55B                                               ; Return to execute the next command whether                                 by program execution or in direct mode
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Function Interpreter subroutine
                                                                                     ; -------------------------------
                                                                                     ; 
                                                                                     ; - Evaluates an arbitrarily complex function pointed to by (5),Y where y=?3
                                                                                     ; and stores the result on the Workspace Stack pointed to by ?4 and also
                                                                                     ; on the arithmetic workspace stack at #52(LSB)..#55(MSB).
                                                                                     ; - The (5),Y pointer is consolidated before return, so that (5),0 points to
                                                                                     ; the last character in the string interpreted.
                                                                                     ; - The workspace stack pointer ?4 is NOT incremented.
                                                                                     ; 
50120 03 | C3C8 20 BC C8   | JSR #C8BC                                               ; Evaluate an arbitrarily complex numeric                                 expression pointed to by (5),Y
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Copy Current Level of the Workspace Stack to #52..#55 subroutine
                                                                                     ; ----------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Enter with the X register pointing to the current level of the workspace
                                                                                     ; stack, so that level (X-1) is copied to #52(LSB)..#55(MSB).
                                                                                     ; - The workspace stack pointer ?4 is updated and decremented.
                                                                                     ; 
50123 02 | C3CB A0 52      | LDY @#52                                                ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Copy Current Level of the Workspace Stack to zero page subroutine
                                                                                     ; -----------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Enter with the X register pointing to the current level of the workspace
                                                                                     ; stack, so that level (X-1) is copied to #52(LSB)..#55(MSB).
                                                                                     ; - Enter with the Y register pointing to the LSB of the four consecutive
                                                                                     ; bytes that are the zero page destination.
                                                                                     ; - The workspace stack pointer ?4 is updated and decremented.
                                                                                     ; 
50125 01 | C3CD CA         | DEX                                                     ; 
50126 02 | C3CE 86 04      | STX #4                                                  ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Copy Current Level of the Workspace Stack to zero page subroutine
                                                                                     ; -----------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Enter with the X register pointing to the level of the workspace stack
                                                                                     ; required to be copied to #52(LSB)..#55(MSB).
                                                                                     ; - Enter with the Y register pointing to the LSB of the four consecutive
                                                                                     ; bytes that are the zero page destination.
                                                                                     ; - The workspace stack pointer ?4 is NOT TOUCHED !
                                                                                     ; 
50128 02 | C3D0 B5 16      | LDA #16,X                                               ; 
50130 03 | C3D2 99 00 00   | STA #0,Y                                                ; 
50133 02 | C3D5 B5 25      | LDA #25,X                                               ; 
50135 03 | C3D7 99 01 00   | STA #1,Y                                                ; 
50138 02 | C3DA B5 34      | LDA #34,X                                               ; 
50140 03 | C3DC 99 02 00   | STA #2,Y                                                ; 
50143 02 | C3DF B5 43      | LDA #43,X                                               ; 
50145 03 | C3E1 99 03 00   | STA #3,Y                                                ; 
50148 01 | C3E4 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deals with Numerical Assignments
                                                                                     ; --------------------------------
                                                                                     ; 
                                                                                     ; - Sets pre-interpreted variable to an arbitrarily complex expression.
                                                                                     ; - Enter with the variable number (0=@, 1=A, etc TO 26=Z) in the LSB of
                                                                                     ; the workspace stack at level (?4-1).
                                                                                     ; 
50149 03 | C3E5 20 E1 C4   | JSR #C4E1                                               ; Evaluate a numerical expression onto the   w/s stack and do post-test.
50152 03 | C3E8 20 2F CA   | JSR #CA2F                                               ; Assign value on the w/s stack to a variable  number on the w/s stack
50155 03 | C3EB 4C 5B C5   | JMP #C55B                                               ; Return to execute the next command whether   by program execution or in direct mode
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command '!'
                                                                                     ; -----------------------
                                                                                     ; 
                                                                                     ; - Sets pre-interpreted vector to an arbitrarily complex expression.
                                                                                     ; 
50158 03 | C3EE 20 BC C8   | JSR #C8BC                                               ; Evaluate an arbitrarily complex numeric expression pointed to by (5),Y which is the ! base address
50161 03 | C3F1 20 93 CE   | JSR #CE93                                               ; Interpret an '=' sign and a numerical expression following, and copy the LSB to the base address on stack
50164 02 | C3F4 B5 26      | LDA #26,X                                               ; Get the second LSB from stack
50166 01 | C3F6 C8         | INY                                                     ; Point to the second address
50167 02 | C3F7 91 52      | STA (#52),Y                                             ; ..and dump the second LSB
50169 01 | C3F9 C8         | INY                                                     ; Point to the third address
50170 02 | C3FA B5 35      | LDA #35,X                                               ; Get the third LSB from stack
50172 02 | C3FC 91 52      | STA (#52),Y                                             ; ..and dump the third LSB
50174 01 | C3FE C8         | INY                                                     ; Point to the fourth address
50175 02 | C3FF B5 44      | LDA #44,X                                               ; Get the fourth LSB from stack
50177 02 | C401 91 52      | STA (#52),Y                                             ; ..and dump the fourth LSB
50179 03 | C403 4C 5B C5   | JMP #C55B                                               ; Return to execute the next command whether
                                                                                     ; by program execution or in direct mode
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command '?'
                                                                                     ; -----------------------
                                                                                     ; 
                                                                                     ; - Sets pre-interpreted byte to an arbitrarily complex expression.
                                                                                     ; 
50182 03 | C406 20 BC C8   | JSR #C8BC                                               ; Evaluate an arbitrarily complex numeric                                 expression pointed to by (5),Y
50185 03 | C409 20 93 CE   | JSR #CE93                                               ; Interpret an '=' sign and a numerical                                 expression following, and copy the LSB                                 to the base address on stack
50188 03 | C40C 4C 5B C5   | JMP #C55B                                               ; Return to execute the next command whether                                 by program execution or in direct mode
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute COS commands
                                                                                     ; --------------------
                                                                                     ; 
                                                                                     ; - Deals with * prefixed commands.
                                                                                     ; - Copies the string after the '*' prefix pointed to by (5),Y where Y=?3
                                                                                     ; to the Direct Mode buffer at #100 and then calls OSCLI indirected
                                                                                     ; by vector (#206,#207).
                                                                                     ; 
50191 02 | C40F A2 00      | LDX @#0                                                 ; Initialise the Direct Mode buffer pointer
50193 02 | C411 B1 05      | LDA (#5),Y                                              ; Get character under analysis from text
50195 03 | C413 9D 00 01   | STA #100,X                                              ; ..and copy to the direct mode buffer
50198 02 | C416 84 03      | STY #3                                                  ; Update the interpreter pointer
50200 01 | C418 C8         | INY                                                     ; Point to the next character of text
50201 01 | C419 E8         | INX                                                     ; Point to the next slot in the buffer
50202 02 | C41A C9 0D      | CMP @#D                                                 ; Was the last character <CR> ?
50204 02 | C41C D0 F3      | BNE #C411                                               ; ..no, keep copying                                 (defaults to #F8EF)
50206 03 | C41E 20 F7 FF   | JSR #FFF7                                               ; ..yes, finished, so call OSCLI
50209 03 | C421 4C 58 C5   | JMP #C558                                               ; Perform post test, check for <ESC> etc and return to execute the next command whether by program execution or in direct mode
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Floating Point ROM Check subroutine
                                                                                     ; -----------------------------------
                                                                                     ; 
                                                                                     ; - Returns with Carry set if the FP ROM at #D000 exists.
                                                                                     ; 
50212 03 | C424 AD 00 D0   | LDA #D000                                               ; 
50215 02 | C427 C9 AA      | CMP @#AA                                                ; 
50217 02 | C429 D0 38      | BNE #C463                                               ; 
50219 01 | C42B 4A         | LSR A                                                   ; 
50220 03 | C42C CD 01 D0   | CMP #D001                                               ; 
50223 02 | C42F D0 32      | BNE #C463                                               ; 
50225 02 | C431 A4 5E      | LDY #5E                                                 ; 
50227 01 | C433 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Interpreter Alphabetic Pre-Test subroutine
                                                                                     ; ------------------------------------------
                                                                                     ; 
                                                                                     ; - Reads the first non-space character pointed to by (5),Y where y=?3
                                                                                     ; and tests it and the following character.
                                                                                     ; 1st character: If it is alphabetic (@ to Z), the character number
                                                                                     ; (where @=0, A=1 to Z=26) is stored in the LSB of the
                                                                                     ; current level of the workspace stack, pointed to by ?4,
                                                                                     ; and the second character is tested.
                                                                                     ; However if it is not alphabetic, the routine is exited
                                                                                     ; with Carry clear and the interpreter pointer Y=?3
                                                                                     ; pointing to the second character.
                                                                                     ; 2nd character: If it is not alphabetic and also not '.', the workspace
                                                                                     ; pointer X=?4 is incremented before return with Carry set
                                                                                     ; and the interpreter pointer Y=?3 pointing to this
                                                                                     ; second character.
                                                                                     ; Otherwise return with pointers as above but with Carry clear.
                                                                                     ; 
50228 02 | C434 A4 03      | LDY #3                                                  ; Get the interpreter pointer
50230 02 | C436 10 03      | BPL #C43B                                               ; ..branch always
                                                                                     ; 
50232 01 | C438 C8         | INY                                                     ; 
50233 02 | C439 84 03      | STY #3                                                  ; 
50235 02 | C43B B1 05      | LDA (#5),Y                                              ; Get the character under interpretation
50237 02 | C43D C9 20      | CMP @#20                                                ; If it's a space..
50239 02 | C43F F0 F7      | BEQ #C438                                               ; ..then skip to the next character
50241 02 | C441 C9 5B      | CMP @#5B                                                ; Test for valid alphabetic character
50243 02 | C443 B0 1E      | BCS #C463                                               ; ..invalid
50245 02 | C445 E9 3F      | SBC @#3F                                                ; Convert to @=0, A=1,...to  Z=26
50247 02 | C447 90 1B      | BCC #C464                                               ; ..invalid alphabetic character
50249 02 | C449 A6 04      | LDX #4                                                  ; Get the workspace pointer
50251 02 | C44B 95 16      | STA #16,X                                               ; Dump the first character on the LSB of                                 the current workspace slot
50253 01 | C44D C8         | INY                                                     ; Point to the next character
50254 02 | C44E B1 05      | LDA (#5),Y                                              ; ..and fetch it
50256 02 | C450 C9 2E      | CMP @#2E                                                ; Is it '.' ?
50258 02 | C452 F0 0F      | BEQ #C463                                               ; ..yes, clear Carry and quit
50260 02 | C454 C9 5B      | CMP @#5B                                                ; Is it >='[' ?
50262 02 | C456 B0 04      | BCS #C45C                                               ; ..yes, set Carry and quit
50264 02 | C458 C9 40      | CMP @#40                                                ; Is it <='@' ?
50266 02 | C45A B0 07      | BCS #C463                                               ; ..yes, clear Carry and quit
50268 01 | C45C E8         | INX                                                     ; Increment workspace stack pointer
50269 02 | C45D 86 04      | STX #4                                                  ; Update workspace stack pointer
50271 01 | C45F 38         | SEC                                                     ; 
50272 02 | C460 84 03      | STY #3                                                  ; Interpreter points to second character
50274 01 | C462 60         | RTS                                                     ; 
50275 01 | C463 18         | CLC                                                     ; 
50276 01 | C464 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; Read Decimal String subroutine
                                                                                     ; ------------------------------
                                                                                     ; 
                                                                                     ; - Reads string pointed to by (5),Y where Y=?3 as ASCII decimal characters,
                                                                                     ; stores the binary result in the Workspace Stack at 16,X where X=?4
                                                                                     ; and increments the Workspace Stack pointer ?4.
                                                                                     ; - If the first non-space character is not a number, BRK is executed.
                                                                                     ; - Destroys A,X,Y registers.
                                                                                     ; 
50277 03 | C465 20 34 C4   | JSR #C434                                               ; If next symbol is a <variable>, BRK
50280 02 | C468 B0 BB      | BCS #C425                                               ; 
                                                                                     ; GET POSITIVE NUMBER                                 (return with Carry clear if no number)
50282 02 | C46A A2 00      | LDX @#0                                                 ; 
50284 02 | C46C A4 03      | LDY #3                                                  ; 
50286 02 | C46E 86 52      | STX #52                                                 ; 
50288 02 | C470 86 53      | STX #53                                                 ; 
50290 02 | C472 86 54      | STX #54                                                 ; 
50292 02 | C474 86 55      | STX #55                                                 ; 
50294 01 | C476 88         | DEY                                                     ; 
50295 01 | C477 C8         | INY                                                     ; 
50296 02 | C478 B1 05      | LDA (#5),Y                                              ; 
50298 01 | C47A 38         | SEC                                                     ; 
50299 02 | C47B E9 30      | SBC @#30                                                ; 
50301 02 | C47D 30 54      | BMI #C4D3                                               ; 
50303 02 | C47F C9 0A      | CMP @#A                                                 ; 
50305 02 | C481 B0 50      | BCS #C4D3                                               ; 
50307 02 | C483 A6 53      | LDX #53                                                 ; 
50309 01 | C485 48         | PHA                                                     ; 
50310 02 | C486 A5 55      | LDA #55                                                 ; 
50312 01 | C488 48         | PHA                                                     ; 
50313 02 | C489 A5 54      | LDA #54                                                 ; 
50315 01 | C48B 48         | PHA                                                     ; 
50316 02 | C48C A5 52      | LDA #52                                                 ; 
50318 01 | C48E 0A         | ASL A                                                   ; 
50319 02 | C48F 26 53      | ROL #53                                                 ; 
50321 02 | C491 26 54      | ROL #54                                                 ; 
50323 02 | C493 26 55      | ROL #55                                                 ; 
50325 02 | C495 30 D4      | BMI #C46B                                               ; 
50327 01 | C497 0A         | ASL A                                                   ; 
50328 02 | C498 26 53      | ROL #53                                                 ; 
50330 02 | C49A 26 54      | ROL #54                                                 ; 
50332 02 | C49C 26 55      | ROL #55                                                 ; 
50334 02 | C49E 30 CB      | BMI #C46B                                               ; 
50336 02 | C4A0 65 52      | ADC #52                                                 ; 
50338 02 | C4A2 85 52      | STA #52                                                 ; 
50340 01 | C4A4 8A         | TXA                                                     ; 
50341 02 | C4A5 65 53      | ADC #53                                                 ; 
50343 02 | C4A7 85 53      | STA #53                                                 ; 
50345 01 | C4A9 68         | PLA                                                     ; 
50346 02 | C4AA 65 54      | ADC #54                                                 ; 
50348 02 | C4AC 85 54      | STA #54                                                 ; 
50350 01 | C4AE 68         | PLA                                                     ; 
50351 02 | C4AF 65 55      | ADC #55                                                 ; 
50353 02 | C4B1 06 52      | ASL #52                                                 ; 
50355 02 | C4B3 26 53      | ROL #53                                                 ; 
50357 02 | C4B5 26 54      | ROL #54                                                 ; 
50359 01 | C4B7 2A         | ROL A                                                   ; 
50360 02 | C4B8 30 B1      | BMI #C46B                                               ; 
50362 02 | C4BA 85 55      | STA #55                                                 ; 
50364 01 | C4BC 68         | PLA                                                     ; 
50365 02 | C4BD 65 52      | ADC #52                                                 ; 
50367 02 | C4BF 85 52      | STA #52                                                 ; 
50369 02 | C4C1 90 0C      | BCC #C4CF                                               ; 
50371 02 | C4C3 E6 53      | INC #53                                                 ; 
50373 02 | C4C5 D0 08      | BNE #C4CF                                               ; 
50375 02 | C4C7 E6 54      | INC #54                                                 ; 
50377 02 | C4C9 D0 04      | BNE #C4CF                                               ; 
50379 02 | C4CB E6 55      | INC #55                                                 ; 
50381 02 | C4CD 30 9C      | BMI #C46B                                               ; 
50383 02 | C4CF A2 FF      | LDX @#FF                                                ; 
50385 02 | C4D1 D0 A4      | BNE #C477                                               ; 
50387 01 | C4D3 8A         | TXA                                                     ; 
50388 02 | C4D4 F0 8D      | BEQ #C463                                               ; 
50390 01 | C4D6 38         | SEC                                                     ; 
50391 02 | C4D7 84 03      | STY #3                                                  ; 
50393 02 | C4D9 A0 52      | LDY @#52                                                ; 
50395 03 | C4DB 4C 9F C9   | JMP #C99F                                               ; 
                                                                                     ; 
50398 03 | C4DE 20 79 C2   | JSR #C279                                               ; Test for '=', BRK if failure
50401 03 | C4E1 20 8B C7   | JSR #C78B                                               ; Evaluate numerical expression
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Interpreter Post-Test subroutine
                                                                                     ; --------------------------------
                                                                                     ; 
                                                                                     ; - Checks that (5),Y where y=?3 points to a statement delimiter ';' or <CR>
                                                                                     ; or spaces leading thereto.
                                                                                     ; - If successful, consolidates the (5),Y pointer.
                                                                                     ; - If unsuccessful, BRK if failure.
                                                                                     ; 
50404 02 | C4E4 A4 03      | LDY #3                                                  ; 
50406 01 | C4E6 88         | DEY                                                     ; 
50407 01 | C4E7 C8         | INY                                                     ; 
50408 02 | C4E8 B1 05      | LDA (#5),Y                                              ; 
50410 02 | C4EA C9 20      | CMP @#20                                                ; 
50412 02 | C4EC F0 F9      | BEQ #C4E7                                               ; 
50414 02 | C4EE C9 3B      | CMP @#3B                                                ; 
50416 02 | C4F0 F0 04      | BEQ #C4F6                                               ; 
50418 02 | C4F2 C9 0D      | CMP @#D                                                 ; 
50420 02 | C4F4 D0 66      | BNE #C55C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Consolidate (5),Y Pointer subroutine
                                                                                     ; ------------------------------------
                                                                                     ; 
                                                                                     ; - Resets the text pointer by setting (5)=(5)+Y and Y=1 where Y=?3.
                                                                                     ; 
50422 01 | C4F6 18         | CLC                                                     ; 
50423 01 | C4F7 98         | TYA                                                     ; 
50424 02 | C4F8 65 05      | ADC #5                                                  ; 
50426 02 | C4FA 85 05      | STA #5                                                  ; 
50428 02 | C4FC 90 02      | BCC #C500                                               ; 
50430 02 | C4FE E6 06      | INC #6                                                  ; 
50432 02 | C500 A0 01      | LDY @#1                                                 ; 
50434 02 | C502 84 03      | STY #3                                                  ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Check for <ESC> key subroutine
                                                                                     ; ------------------------------
                                                                                     ; 
                                                                                     ; - If <ESC> pressed then RTS, otherwise jumps to the Direct Mode.
                                                                                     ; 
50436 03 | C504 AD 01 B0   | LDA #B001                                               ; 
50439 02 | C507 29 20      | AND @#20                                                ; 
50441 02 | C509 F0 3C      | BEQ #C547                                               ; 
50443 01 | C50B 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Get Current Text Line Number subroutine
                                                                                     ; ---------------------------------------
                                                                                     ; 
                                                                                     ; - Copies the new line number to 1,2 and updates the label address if the
                                                                                     ; line is labelled.
                                                                                     ; - Sets up the (5),Y text pointer to the start of the statement.
                                                                                     ; 
50444 03 | C50C 20 E4 C4   | JSR #C4E4                                               ; 
50447 01 | C50F 88         | DEY                                                     ; 
50448 02 | C510 B1 05      | LDA (#5),Y                                              ; 
50450 02 | C512 C9 3B      | CMP @#3B                                                ; 
50452 02 | C514 F0 F5      | BEQ #C50B                                               ; 
50454 02 | C516 A5 06      | LDA #6                                                  ; 
50456 02 | C518 C9 01      | CMP @#1                                                 ; 
50458 02 | C51A F0 7A      | BEQ #C596                                               ; 
50460 01 | C51C C8         | INY                                                     ; 
50461 02 | C51D B1 05      | LDA (#5),Y                                              ; 
50463 02 | C51F 30 3B      | BMI #C55C                                               ; 
50465 02 | C521 85 02      | STA #2                                                  ; 
50467 01 | C523 C8         | INY                                                     ; 
50468 02 | C524 B1 05      | LDA (#5),Y                                              ; 
50470 02 | C526 85 01      | STA #1                                                  ; 
50472 01 | C528 C8         | INY                                                     ; 
50473 02 | C529 B1 05      | LDA (#5),Y                                              ; 
50475 01 | C52B 88         | DEY                                                     ; 
50476 02 | C52C C9 61      | CMP @#61                                                ; 
50478 02 | C52E 90 C7      | BCC #C4F7                                               ; 
50480 02 | C530 E9 61      | SBC @#61                                                ; 
50482 02 | C532 C9 1B      | CMP @#1B                                                ; 
50484 02 | C534 B0 C0      | BCS #C4F6                                               ; 
50486 01 | C536 C8         | INY                                                     ; 
50487 01 | C537 0A         | ASL A                                                   ; 
50488 01 | C538 AA         | TAX                                                     ; 
50489 03 | C539 20 F6 C4   | JSR #C4F6                                               ; 
50492 02 | C53C A5 05      | LDA #5                                                  ; 
50494 03 | C53E 9D 8D 03   | STA #38D,X                                              ; 
50497 02 | C541 A5 06      | LDA #6                                                  ; 
50499 03 | C543 9D 8E 03   | STA #38E,X                                              ; 
50502 01 | C546 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
50503 03 | C547 4C CF C2   | JMP #C2CF                                               ; 
                                                                                     ; -- missing data
;;ERR missing data curr: 50613 should be next: 50506
50613 03 | C5B5 20 E4 C4   | JSR #C4E4                                               ; 
;;ERR missing data curr: 50104 should be next: 50616
50104 03 | C3B8 AD 22 03   | LDA #322                                                ; 
50107 03 | C3BB AE 39 03   | LDX #339                                                ; 
50110 03 | C3BE AC 3A 03   | LDY #33A                                                ; 
50113 03 | C3C1 20 A5 C2   | JSR #C2A5                                               ; 
50116 01 | C3C4 D8         | CLD                                                     ; 
50117 03 | C3C5 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Function Interpreter subroutine
                                                                                     ; -------------------------------
                                                                                     ; 
                                                                                     ; - Evaluates an arbitrarily complex function pointed to by (5),Y where y=?3
                                                                                     ; and stores the result on the Workspace Stack pointed to by ?5 and also
                                                                                     ; on the arithmetic Workspace Stack at #52 (LSB),#53,#54,#55 (MSB).
                                                                                     ; - The (5),Y pointer is consolidated before return, so that (5),0 points to
                                                                                     ; the last character in the string interpreted.
                                                                                     ; 
50120 03 | C3C8 20 BC C8   | JSR #C8BC                                               ; 
50123 02 | C3CB A0 52      | LDY @#52                                                ; 
50125 01 | C3CD CA         | DEX                                                     ; 
50126 02 | C3CE 86 04      | STX #4                                                  ; 
50128 02 | C3D0 B5 16      | LDA #16,X                                               ; 
50130 03 | C3D2 99 00 00   | STA #0,Y                                                ; 
50133 02 | C3D5 B5 25      | LDA #25,X                                               ; 
50135 03 | C3D7 99 01 00   | STA #1,Y                                                ; 
50138 02 | C3DA B5 34      | LDA #34,X                                               ; 
50140 03 | C3DC 99 02 00   | STA #2,Y                                                ; 
50143 02 | C3DF B5 43      | LDA #43,X                                               ; 
50145 03 | C3E1 99 03 00   | STA #3,Y                                                ; 
50148 01 | C3E4 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deals with Numerical Assignments
                                                                                     ; --------------------------------
                                                                                     ; 
                                                                                     ; - Sets pre-interpreted variable to an arbitrarily complex expression.
                                                                                     ; 
50149 03 | C3E5 20 E1 C4   | JSR #C4E1                                               ; 
50152 03 | C3E8 20 2F CA   | JSR #CA2F                                               ; 
50155 03 | C3EB 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command '!'
                                                                                     ; -----------------------
                                                                                     ; 
                                                                                     ; - Sets pre-interpreted vector to an arbitrarily complex expression.
                                                                                     ; 
50158 03 | C3EE 20 BC C8   | JSR #C8BC                                               ; 
50161 03 | C3F1 20 93 CE   | JSR #CE93                                               ; 
50164 02 | C3F4 B5 26      | LDA #26,X                                               ; 
50166 01 | C3F6 C8         | INY                                                     ; 
50167 02 | C3F7 91 52      | STA (#52),Y                                             ; 
50169 01 | C3F9 C8         | INY                                                     ; 
50170 02 | C3FA B5 35      | LDA #35,X                                               ; 
50172 02 | C3FC 91 52      | STA (#52),Y                                             ; 
50174 01 | C3FE C8         | INY                                                     ; 
50175 02 | C3FF B5 44      | LDA #44,X                                               ; 
50177 02 | C401 91 52      | STA (#52),Y                                             ; 
50179 03 | C403 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command '?'
                                                                                     ; -----------------------
                                                                                     ; 
                                                                                     ; - Sets pre-interpreted byte to an arbitrarily complex expression.
                                                                                     ; 
50182 03 | C406 20 BC C8   | JSR #C8BC                                               ; 
50185 03 | C409 20 93 CE   | JSR #CE93                                               ; 
50188 03 | C40C 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute COS commands
                                                                                     ; --------------------
                                                                                     ; 
                                                                                     ; - Deals with * prefixed commands.
                                                                                     ; - Copies the string after the '*' prefix pointed to by (5),Y where Y=?3
                                                                                     ; to the Direct Mode buffer at #100 and then calls OSCLI indirected
                                                                                     ; by vector (#206,#207).
                                                                                     ; 
50191 02 | C40F A2 00      | LDX @#0                                                 ; 
50193 02 | C411 B1 05      | LDA (#5),Y                                              ; 
50195 03 | C413 9D 00 01   | STA #100,X                                              ; 
50198 02 | C416 84 03      | STY #3                                                  ; 
50200 01 | C418 C8         | INY                                                     ; 
50201 01 | C419 E8         | INX                                                     ; 
50202 02 | C41A C9 0D      | CMP @#D                                                 ; 
50204 02 | C41C D0 F3      | BNE #C411                                               ; 
50206 03 | C41E 20 F7 FF   | JSR #FFF7                                               ; 
50209 03 | C421 4C 58 C5   | JMP #C558                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Floating Point ROM Check subroutine
                                                                                     ; -----------------------------------
                                                                                     ; 
                                                                                     ; - Returns with Carry set if the FP ROM at #D000 exists.
                                                                                     ; 
50212 03 | C424 AD 00 D0   | LDA #D000                                               ; 
50215 02 | C427 C9 AA      | CMP @#AA                                                ; 
50217 02 | C429 D0 38      | BNE #C463                                               ; 
50219 01 | C42B 4A         | LSR A                                                   ; 
50220 03 | C42C CD 01 D0   | CMP #D001                                               ; 
50223 02 | C42F D0 32      | BNE #C463                                               ; 
50225 02 | C431 A4 5E      | LDY #5E                                                 ; 
50227 01 | C433 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Interpreter Pre-Test subroutine
                                                                                     ; -------------------------------
                                                                                     ; 
                                                                                     ; - Reads the character pointed to by (5),Y where y=?3 and returns a
                                                                                     ; - character number where @=0, A=1 etc up to Z=26.
                                                                                     ; - Returns with Carry set if the following character is alphanumeric too.
                                                                                     ; 
50228 02 | C434 A4 03      | LDY #3                                                  ; 
50230 02 | C436 10 03      | BPL #C43B                                               ; 
50232 01 | C438 C8         | INY                                                     ; 
50233 02 | C439 84 03      | STY #3                                                  ; 
50235 02 | C43B B1 05      | LDA (#5),Y                                              ; 
50237 02 | C43D C9 20      | CMP @#20                                                ; 
50239 02 | C43F F0 F7      | BEQ #C438                                               ; 
50241 02 | C441 C9 5B      | CMP @#5B                                                ; 
50243 02 | C443 B0 1E      | BCS #C463                                               ; 
50245 02 | C445 E9 3F      | SBC @#3F                                                ; 
50247 02 | C447 90 1B      | BCC #C464                                               ; 
50249 02 | C449 A6 04      | LDX #4                                                  ; 
50251 02 | C44B 95 16      | STA #16,X                                               ; 
50253 01 | C44D C8         | INY                                                     ; 
50254 02 | C44E B1 05      | LDA (#5),Y                                              ; 
50256 02 | C450 C9 2E      | CMP @#2E                                                ; 
50258 02 | C452 F0 0F      | BEQ #C463                                               ; 
50260 02 | C454 C9 5B      | CMP @#5B                                                ; 
50262 02 | C456 B0 04      | BCS #C45C                                               ; 
50264 02 | C458 C9 40      | CMP @#40                                                ; 
50266 02 | C45A B0 07      | BCS #C463                                               ; 
50268 01 | C45C E8         | INX                                                     ; 
50269 02 | C45D 86 04      | STX #4                                                  ; 
50271 01 | C45F 38         | SEC                                                     ; 
50272 02 | C460 84 03      | STY #3                                                  ; 
50274 01 | C462 60         | RTS                                                     ; 
50275 01 | C463 18         | CLC                                                     ; 
50276 01 | C464 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Read Decimal String subroutine
                                                                                     ; ------------------------------
                                                                                     ; 
                                                                                     ; - Reads string pointed to by (5),Y where Y=?3 as ASCII decimal characters,
                                                                                     ; stores the binary result in the Workspace Stack at 16,X where X=?4
                                                                                     ; and increments the Workspace Stack pointer ?4.
                                                                                     ; - If the first non-space character is not a number, BRK is executed.
                                                                                     ; - Destroys A,X,Y registers.
                                                                                     ; 
50277 03 | C465 20 34 C4   | JSR #C434                                               ; If next symbol is a <variable>, BRK
50280 02 | C468 B0 BB      | BCS #C425                                               ; 
                                                                                     ; GET POSITIVE NUMBER
                                                                                     ; (return with Carry clear if no number)
50282 02 | C46A A2 00      | LDX @#0                                                 ; 
50284 02 | C46C A4 03      | LDY #3                                                  ; 
50286 02 | C46E 86 52      | STX #52                                                 ; 
50288 02 | C470 86 53      | STX #53                                                 ; 
50290 02 | C472 86 54      | STX #54                                                 ; 
50292 02 | C474 86 55      | STX #55                                                 ; 
50294 01 | C476 88         | DEY                                                     ; 
50295 01 | C477 C8         | INY                                                     ; 
50296 02 | C478 B1 05      | LDA (#5),Y                                              ; 
50298 01 | C47A 38         | SEC                                                     ; 
50299 02 | C47B E9 30      | SBC @#30                                                ; 
50301 02 | C47D 30 54      | BMI #C4D3                                               ; 
50303 02 | C47F C9 0A      | CMP @#A                                                 ; 
50305 02 | C481 B0 50      | BCS #C4D3                                               ; 
50307 02 | C483 A6 53      | LDX #53                                                 ; 
50309 01 | C485 48         | PHA                                                     ; 
50310 02 | C486 A5 55      | LDA #55                                                 ; 
50312 01 | C488 48         | PHA                                                     ; 
50313 02 | C489 A5 54      | LDA #54                                                 ; 
50315 01 | C48B 48         | PHA                                                     ; 
50316 02 | C48C A5 52      | LDA #52                                                 ; 
50318 01 | C48E 0A         | ASL A                                                   ; 
50319 02 | C48F 26 53      | ROL #53                                                 ; 
50321 02 | C491 26 54      | ROL #54                                                 ; 
50323 02 | C493 26 55      | ROL #55                                                 ; 
50325 02 | C495 30 D4      | BMI #C46B                                               ; 
50327 01 | C497 0A         | ASL A                                                   ; 
50328 02 | C498 26 53      | ROL #53                                                 ; 
50330 02 | C49A 26 54      | ROL #54                                                 ; 
50332 02 | C49C 26 55      | ROL #55                                                 ; 
50334 02 | C49E 30 CB      | BMI #C46B                                               ; 
50336 02 | C4A0 65 52      | ADC #52                                                 ; 
50338 02 | C4A2 85 52      | STA #52                                                 ; 
50340 01 | C4A4 8A         | TXA                                                     ; 
50341 02 | C4A5 65 53      | ADC #53                                                 ; 
50343 02 | C4A7 85 53      | STA #53                                                 ; 
50345 01 | C4A9 68         | PLA                                                     ; 
50346 02 | C4AA 65 54      | ADC #54                                                 ; 
50348 02 | C4AC 85 54      | STA #54                                                 ; 
50350 01 | C4AE 68         | PLA                                                     ; 
50351 02 | C4AF 65 55      | ADC #55                                                 ; 
50353 02 | C4B1 06 52      | ASL #52                                                 ; 
50355 02 | C4B3 26 53      | ROL #53                                                 ; 
50357 02 | C4B5 26 54      | ROL #54                                                 ; 
50359 01 | C4B7 2A         | ROL A                                                   ; 
50360 02 | C4B8 30 B1      | BMI #C46B                                               ; 
50362 02 | C4BA 85 55      | STA #55                                                 ; 
50364 01 | C4BC 68         | PLA                                                     ; 
50365 02 | C4BD 65 52      | ADC #52                                                 ; 
50367 02 | C4BF 85 52      | STA #52                                                 ; 
50369 02 | C4C1 90 0C      | BCC #C4CF                                               ; 
50371 02 | C4C3 E6 53      | INC #53                                                 ; 
50373 02 | C4C5 D0 08      | BNE #C4CF                                               ; 
50375 02 | C4C7 E6 54      | INC #54                                                 ; 
50377 02 | C4C9 D0 04      | BNE #C4CF                                               ; 
50379 02 | C4CB E6 55      | INC #55                                                 ; 
50381 02 | C4CD 30 9C      | BMI #C46B                                               ; 
50383 02 | C4CF A2 FF      | LDX @#FF                                                ; 
50385 02 | C4D1 D0 A4      | BNE #C477                                               ; 
50387 01 | C4D3 8A         | TXA                                                     ; 
50388 02 | C4D4 F0 8D      | BEQ #C463                                               ; 
50390 01 | C4D6 38         | SEC                                                     ; 
50391 02 | C4D7 84 03      | STY #3                                                  ; 
50393 02 | C4D9 A0 52      | LDY @#52                                                ; 
50395 03 | C4DB 4C 9F C9   | JMP #C99F                                               ; 
                                                                                     ; 
                                                                                     ; 
50398 03 | C4DE 20 79 C2   | JSR #C279                                               ; Test for '=', BRK if failure
50401 03 | C4E1 20 8B C7   | JSR #C78B                                               ; Evaluate numerical expression
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Interpreter Post-Test subroutine
                                                                                     ; --------------------------------
                                                                                     ; 
                                                                                     ; - Checks that (5),Y where y=?3 points to a statement delimiter ';' or <CR>
                                                                                     ; or spaces leading thereto.
                                                                                     ; - If successful, consolidates the (5),Y pointer.
                                                                                     ; - If unsuccessful, BRK if failure.
                                                                                     ; 
50404 02 | C4E4 A4 03      | LDY #3                                                  ; 
50406 01 | C4E6 88         | DEY                                                     ; 
50407 01 | C4E7 C8         | INY                                                     ; 
50408 02 | C4E8 B1 05      | LDA (#5),Y                                              ; 
50410 02 | C4EA C9 20      | CMP @#20                                                ; 
50412 02 | C4EC F0 F9      | BEQ #C4E7                                               ; 
50414 02 | C4EE C9 3B      | CMP @#3B                                                ; 
50416 02 | C4F0 F0 04      | BEQ #C4F6                                               ; 
50418 02 | C4F2 C9 0D      | CMP @#D                                                 ; 
50420 02 | C4F4 D0 66      | BNE #C55C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Consolidate (5),Y Pointer subroutine
                                                                                     ; ------------------------------------
                                                                                     ; 
                                                                                     ; - Resets the text pointer by setting (5)=(5)+Y and Y=1 where Y=?3.
                                                                                     ; 
50422 01 | C4F6 18         | CLC                                                     ; 
50423 01 | C4F7 98         | TYA                                                     ; 
50424 02 | C4F8 65 05      | ADC #5                                                  ; 
50426 02 | C4FA 85 05      | STA #5                                                  ; 
50428 02 | C4FC 90 02      | BCC #C500                                               ; 
50430 02 | C4FE E6 06      | INC #6                                                  ; 
50432 02 | C500 A0 01      | LDY @#1                                                 ; 
50434 02 | C502 84 03      | STY #3                                                  ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Check for <ESC> key subroutine
                                                                                     ; ------------------------------
                                                                                     ; 
                                                                                     ; - If <ESC> pressed then RTS, otherwise jumps to the Direct Mode.
                                                                                     ; 
50436 03 | C504 AD 01 B0   | LDA #B001                                               ; 
50439 02 | C507 29 20      | AND @#20                                                ; 
50441 02 | C509 F0 3C      | BEQ #C547                                               ; 
50443 01 | C50B 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Get Current Text Line Number subroutine
                                                                                     ; ---------------------------------------
                                                                                     ; 
                                                                                     ; - Copies the new line number to 1,2 and updates the label address if the
                                                                                     ; line is labelled.
                                                                                     ; - Sets up the (5),Y text pointer to the start of the statement.
                                                                                     ; 
50444 03 | C50C 20 E4 C4   | JSR #C4E4                                               ; 
50447 01 | C50F 88         | DEY                                                     ; 
50448 02 | C510 B1 05      | LDA (#5),Y                                              ; 
50450 02 | C512 C9 3B      | CMP @#3B                                                ; 
50452 02 | C514 F0 F5      | BEQ #C50B                                               ; 
50454 02 | C516 A5 06      | LDA #6                                                  ; 
50456 02 | C518 C9 01      | CMP @#1                                                 ; 
50458 02 | C51A F0 7A      | BEQ #C596                                               ; 
50460 01 | C51C C8         | INY                                                     ; 
50461 02 | C51D B1 05      | LDA (#5),Y                                              ; 
50463 02 | C51F 30 3B      | BMI #C55C                                               ; 
50465 02 | C521 85 02      | STA #2                                                  ; 
50467 01 | C523 C8         | INY                                                     ; 
50468 02 | C524 B1 05      | LDA (#5),Y                                              ; 
50470 02 | C526 85 01      | STA #1                                                  ; 
50472 01 | C528 C8         | INY                                                     ; 
50473 02 | C529 B1 05      | LDA (#5),Y                                              ; 
50475 01 | C52B 88         | DEY                                                     ; 
50476 02 | C52C C9 61      | CMP @#61                                                ; 
50478 02 | C52E 90 C7      | BCC #C4F7                                               ; 
50480 02 | C530 E9 61      | SBC @#61                                                ; 
50482 02 | C532 C9 1B      | CMP @#1B                                                ; 
50484 02 | C534 B0 C0      | BCS #C4F6                                               ; 
50486 01 | C536 C8         | INY                                                     ; 
50487 01 | C537 0A         | ASL A                                                   ; 
50488 01 | C538 AA         | TAX                                                     ; 
50489 03 | C539 20 F6 C4   | JSR #C4F6                                               ; 
50492 02 | C53C A5 05      | LDA #5                                                  ; 
50494 03 | C53E 9D 8D 03   | STA #38D,X                                              ; 
50497 02 | C541 A5 06      | LDA #6                                                  ; 
50499 03 | C543 9D 8E 03   | STA #38E,X                                              ; 
50502 01 | C546 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
50503 03 | C547 4C CF C2   | JMP #C2CF                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Statement Executer
                                                                                     ; ------------------
                                                                                     ; 
                                                                                     ; - Executes a statement pointed to by (5),Y.
                                                                                     ; - Jumps indirectly to the FP ROM via (#D002) if the command cannot be
                                                                                     ; interpreted.
                                                                                     ; 
50506 01 | C54A 88         | DEY                                                     ; 
50507 03 | C54B 20 F6 C4   | JSR #C4F6                                               ; 
50510 02 | C54E D0 0B      | BNE #C55B                                               ; 
50512 03 | C550 20 24 C4   | JSR #C424                                               ; Handle unrecognised statement
50515 02 | C553 90 03      | BCC #C558                                               ; 
50517 03 | C555 6C 02 D0   | JMP (#D002)                                             ; 
50520 03 | C558 20 E4 C4   | JSR #C4E4                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Return Routine
                                                                                     ; --------------
                                                                                     ; 
                                                                                     ; - All routines generally return to BASIC here.
                                                                                     ; - Goes on to interpret the next statement.
                                                                                     ; 
50523 02 | C55B A0 00      | LDY @#0                                                 ; 
50525 02 | C55D B1 05      | LDA (#5),Y                                              ; 
50527 02 | C55F C9 3B      | CMP @#3B                                                ; 
50529 02 | C561 D0 1A      | BNE #C57D                                               ; 
50531 03 | C563 4C 1B C3   | JMP #C31B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'IF'
                                                                                     ; ------------------------
                                                                                     ; 
                                                                                     ; - Puts a zero on the Workspace Stack at #16,X where X=?4 if false.
                                                                                     ; 
50534 03 | C566 20 0C C7   | JSR #C70C                                               ; 
50537 01 | C569 CA         | DEX                                                     ; 
50538 02 | C56A 86 04      | STX #4                                                  ; 
50540 02 | C56C B5 16      | LDA #16,X                                               ; 
50542 02 | C56E F0 05      | BEQ #C575                                               ; 
50544 02 | C570 A2 20      | LDX @#20                                                ; 
50546 03 | C572 4C 33 C2   | JMP #C233                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'REM'
                                                                                     ; -------------------------
                                                                                     ; 
                                                                                     ; - Increments (5),Y until a <CR> is found.
                                                                                     ; 
50549 02 | C575 A9 0D      | LDA @#D                                                 ; 
50551 01 | C577 88         | DEY                                                     ; 
50552 01 | C578 C8         | INY                                                     ; 
50553 02 | C579 D1 05      | CMP (#5),Y                                              ; 
50555 02 | C57B D0 FB      | BNE #C578                                               ; 
50557 02 | C57D A5 06      | LDA #6                                                  ; 
50559 02 | C57F C9 01      | CMP @#1                                                 ; 
50561 02 | C581 F0 C4      | BEQ #C547                                               ; 
50563 03 | C583 20 1C C5   | JSR #C51C                                               ; 
50566 03 | C586 4C 1B C3   | JMP #C31B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print Decimal subroutine
                                                                                     ; ------------------------
                                                                                     ; 
                                                                                     ; - Prints the lowest level of the Workspace Stack #16,#25,#34,#43 as a
                                                                                     ; signed decimal number in field size set by the LSB of the integer
                                                                                     ; variable '@' #321.
                                                                                     ; - Destroys A,X,Y registers.
                                                                                     ; 
50569 02 | C589 A5 43      | LDA #43                                                 ; 
50571 02 | C58B 85 27      | STA #27                                                 ; 
50573 02 | C58D 10 04      | BPL #C593                                               ; 
50575 01 | C58F E8         | INX                                                     ; 
50576 03 | C590 20 C4 C8   | JSR #C8C4                                               ; 
50579 02 | C593 A2 09      | LDX @#9                                                 ; 
50581 02 | C595 A9 00      | LDA @#0                                                 ; 
50583 02 | C597 95 45      | STA #45,X                                               ; 
50585 01 | C599 38         | SEC                                                     ; 
50586 02 | C59A A5 16      | LDA #16                                                 ; 
50588 03 | C59C FD 08 C6   | SBC #C608,X                                             ; 
50591 01 | C59F 48         | PHA                                                     ; 
50592 02 | C5A0 A5 25      | LDA #25                                                 ; 
50594 03 | C5A2 FD 10 C6   | SBC #C610,X                                             ; 
50597 01 | C5A5 48         | PHA                                                     ; 
50598 02 | C5A6 A5 34      | LDA #34                                                 ; 
50600 03 | C5A8 FD 1A C6   | SBC #C61A,X                                             ; 
50603 01 | C5AB A8         | TAY                                                     ; 
50604 02 | C5AC A5 43      | LDA #43                                                 ; 
50606 03 | C5AE FD 24 C6   | SBC #C624,X                                             ; 
50609 02 | C5B1 90 0E      | BCC #C5C1                                               ; 
50611 02 | C5B3 85 43      | STA #43                                                 ; 
50613 02 | C5B5 84 34      | STY #34                                                 ; 
50615 01 | C5B7 68         | PLA                                                     ; 
50616 02 | C5B8 85 25      | STA #25                                                 ; 
50618 01 | C5BA 68         | PLA                                                     ; 
50619 02 | C5BB 85 16      | STA #16                                                 ; 
50621 02 | C5BD F6 45      | INC #45,X                                               ; 
50623 02 | C5BF D0 D8      | BNE #C599                                               ; 
50625 01 | C5C1 68         | PLA                                                     ; 
50626 01 | C5C2 68         | PLA                                                     ; 
50627 01 | C5C3 CA         | DEX                                                     ; 
50628 02 | C5C4 10 CF      | BPL #C595                                               ; 
50630 02 | C5C6 A2 0A      | LDX @#A                                                 ; 
50632 01 | C5C8 CA         | DEX                                                     ; 
50633 02 | C5C9 F0 04      | BEQ #C5CF                                               ; 
50635 02 | C5CB B5 45      | LDA #45,X                                               ; 
50637 02 | C5CD F0 F9      | BEQ #C5C8                                               ; 
50639 02 | C5CF 86 52      | STX #52                                                 ; 
50641 02 | C5D1 24 27      | BIT #27                                                 ; 
50643 02 | C5D3 10 02      | BPL #C5D7                                               ; 
50645 02 | C5D5 E6 52      | INC #52                                                 ; 
50647 01 | C5D7 38         | SEC                                                     ; 
50648 03 | C5D8 AD 21 03   | LDA #321                                                ; 
50651 02 | C5DB F0 02      | BEQ #C5DF                                               ; 
50653 02 | C5DD E9 01      | SBC @#1                                                 ; 
50655 02 | C5DF E5 52      | SBC #52                                                 ; 
50657 02 | C5E1 F0 0B      | BEQ #C5EE                                               ; 
50659 02 | C5E3 90 09      | BCC #C5EE                                               ; 
50661 01 | C5E5 A8         | TAY                                                     ; 
50662 02 | C5E6 A9 20      | LDA @#20                                                ; 
50664 03 | C5E8 20 4C CA   | JSR #CA4C                                               ; 
50667 01 | C5EB 88         | DEY                                                     ; 
50668 02 | C5EC D0 F8      | BNE #C5E6                                               ; 
50670 02 | C5EE 24 27      | BIT #27                                                 ; 
50672 02 | C5F0 10 05      | BPL #C5F7                                               ; 
50674 02 | C5F2 A9 2D      | LDA @#2D                                                ; 
50676 03 | C5F4 20 4C CA   | JSR #CA4C                                               ; 
50679 02 | C5F7 B5 45      | LDA #45,X                                               ; 
50681 02 | C5F9 C9 0A      | CMP @#A                                                 ; 
50683 02 | C5FB 90 02      | BCC #C5FF                                               ; 
50685 02 | C5FD 69 06      | ADC @#6                                                 ; 
50687 02 | C5FF 69 30      | ADC @#30                                                ; 
50689 03 | C601 20 4C CA   | JSR #CA4C                                               ; 
50692 01 | C604 CA         | DEX                                                     ; 
50693 02 | C605 10 F0      | BPL #C5F7                                               ; 
50695 01 | C607 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Decimal Print Data Table
                                                                                     ; ------------------------
                                                                                     ; 
50696 08 | C608 01 0A 64 E8 10 A0 40 80                                              ; 
50704 16 | C610 00 00 00 03 27 86 42 96 E1 CA 00 00 00 00 00 01                      ; 
50720 14 | C620 0F 98 F5 9A 00 00 00 00 00 00 00 00 05 3B                            ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Line Number Search subroutine
                                                                                     ; -----------------------------
                                                                                     ; 
                                                                                     ; - Searches text looking for a line number match.
                                                                                     ; - Line number searched for is assumed to be on the 16,X Workspace Stack
                                                                                     ; where X=?4-1.
                                                                                     ; - Returns with (58),Y pointing to the character following the line number
                                                                                     ; and Carry clear.
                                                                                     ; - Failure indicated by Carry set.
                                                                                     ; 
50734 02 | C62E C6 04      | DEC #4                                                  ; 
50736 02 | C630 A6 04      | LDX #4                                                  ; 
50738 02 | C632 A0 00      | LDY @#0                                                 ; 
50740 02 | C634 84 58      | STY #58                                                 ; 
50742 02 | C636 A5 12      | LDA #12                                                 ; 
50744 02 | C638 85 59      | STA #59                                                 ; 
50746 01 | C63A 88         | DEY                                                     ; 
50747 02 | C63B A9 0D      | LDA @#D                                                 ; 
50749 01 | C63D C8         | INY                                                     ; 
50750 02 | C63E D1 58      | CMP (#58),Y                                             ; 
50752 02 | C640 D0 FB      | BNE #C63D                                               ; 
50754 03 | C642 20 A1 CE   | JSR #CEA1                                               ; 
50757 02 | C645 B1 58      | LDA (#58),Y                                             ; 
50759 01 | C647 C8         | INY                                                     ; 
50760 02 | C648 D5 25      | CMP #25,X                                               ; 
50762 02 | C64A 90 EF      | BCC #C63B                                               ; 
50764 02 | C64C D0 12      | BNE #C660                                               ; 
50766 02 | C64E B1 58      | LDA (#58),Y                                             ; 
50768 02 | C650 D5 16      | CMP #16,X                                               ; 
50770 02 | C652 90 E7      | BCC #C63B                                               ; 
50772 02 | C654 D0 0A      | BNE #C660                                               ; 
50774 02 | C656 85 01      | STA #1                                                  ; 
50776 02 | C658 B5 25      | LDA #25,X                                               ; 
50778 02 | C65A 85 02      | STA #2                                                  ; 
50780 03 | C65C 20 A1 CE   | JSR #CEA1                                               ; 
50783 01 | C65F 18         | CLC                                                     ; 
50784 01 | C660 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Set up Miscellaneous Workspace for Multiply or Divide subroutine
                                                                                     ; ----------------------------------------------------------------
                                                                                     ; 
50785 03 | C661 20 BC C8   | JSR #C8BC                                               ; 
50788 02 | C664 B5 42      | LDA #42,X                                               ; 
50790 02 | C666 55 41      | EOR #41,X                                               ; 
50792 02 | C668 85 52      | STA #52                                                 ; 
50794 03 | C66A 20 05 C9   | JSR #C905                                               ; 
50797 02 | C66D A0 53      | LDY @#53                                                ; 
50799 03 | C66F 20 CD C3   | JSR #C3CD                                               ; 
50802 02 | C672 B5 42      | LDA #42,X                                               ; 
50804 02 | C674 95 43      | STA #43,X                                               ; 
50806 03 | C676 20 07 C9   | JSR #C907                                               ; 
50809 02 | C679 A0 57      | LDY @#57                                                ; 
50811 03 | C67B 20 CD C3   | JSR #C3CD                                               ; 
50814 02 | C67E A0 00      | LDY @#0                                                 ; 
50816 02 | C680 84 5B      | STY #5B                                                 ; 
50818 02 | C682 84 5C      | STY #5C                                                 ; 
50820 02 | C684 84 5D      | STY #5D                                                 ; 
50822 02 | C686 84 5E      | STY #5E                                                 ; 
50824 01 | C688 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Division subroutine
                                                                                     ; -------------------
                                                                                     ; 
                                                                                     ; - Do division in miscellaneous workspace.
                                                                                     ; 
50825 03 | C689 20 61 C6   | JSR #C661                                               ; 
50828 02 | C68C A5 54      | LDA #54                                                 ; 
50830 03 | C68E 20 05 C7   | JSR #C705                                               ; 
50833 02 | C691 F0 EC      | BEQ #C67F                                               ; 
50835 02 | C693 A0 20      | LDY @#20                                                ; 
50837 01 | C695 88         | DEY                                                     ; 
50838 02 | C696 F0 41      | BEQ #C6D9                                               ; 
50840 02 | C698 06 57      | ASL #57                                                 ; 
50842 02 | C69A 26 58      | ROL #58                                                 ; 
50844 02 | C69C 26 59      | ROL #59                                                 ; 
50846 02 | C69E 26 5A      | ROL #5A                                                 ; 
50848 02 | C6A0 10 F3      | BPL #C695                                               ; 
50850 02 | C6A2 26 57      | ROL #57                                                 ; 
50852 02 | C6A4 26 58      | ROL #58                                                 ; 
50854 02 | C6A6 26 59      | ROL #59                                                 ; 
50856 02 | C6A8 26 5A      | ROL #5A                                                 ; 
50858 02 | C6AA 26 5B      | ROL #5B                                                 ; 
50860 02 | C6AC 26 5C      | ROL #5C                                                 ; 
50862 02 | C6AE 26 5D      | ROL #5D                                                 ; 
50864 02 | C6B0 26 5E      | ROL #5E                                                 ; 
50866 01 | C6B2 38         | SEC                                                     ; 
50867 02 | C6B3 A5 5B      | LDA #5B                                                 ; 
50869 02 | C6B5 E5 53      | SBC #53                                                 ; 
50871 01 | C6B7 48         | PHA                                                     ; 
50872 02 | C6B8 A5 5C      | LDA #5C                                                 ; 
50874 02 | C6BA E5 54      | SBC #54                                                 ; 
50876 01 | C6BC 48         | PHA                                                     ; 
50877 02 | C6BD A5 5D      | LDA #5D                                                 ; 
50879 02 | C6BF E5 55      | SBC #55                                                 ; 
50881 01 | C6C1 AA         | TAX                                                     ; 
50882 02 | C6C2 A5 5E      | LDA #5E                                                 ; 
50884 02 | C6C4 E5 56      | SBC #56                                                 ; 
50886 02 | C6C6 90 0C      | BCC #C6D4                                               ; 
50888 02 | C6C8 85 5E      | STA #5E                                                 ; 
50890 02 | C6CA 86 5D      | STX #5D                                                 ; 
50892 01 | C6CC 68         | PLA                                                     ; 
50893 02 | C6CD 85 5C      | STA #5C                                                 ; 
50895 01 | C6CF 68         | PLA                                                     ; 
50896 02 | C6D0 85 5B      | STA #5B                                                 ; 
50898 02 | C6D2 B0 02      | BCS #C6D6                                               ; 
50900 01 | C6D4 68         | PLA                                                     ; 
50901 01 | C6D5 68         | PLA                                                     ; 
50902 01 | C6D6 88         | DEY                                                     ; 
50903 02 | C6D7 D0 C9      | BNE #C6A2                                               ; 
50905 01 | C6D9 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Relational Test subroutine
                                                                                     ; --------------------------
                                                                                     ; 
50906 03 | C6DA 20 8B C7   | JSR #C78B                                               ; 
50909 01 | C6DD CA         | DEX                                                     ; 
50910 02 | C6DE 86 04      | STX #4                                                  ; 
50912 02 | C6E0 B5 42      | LDA #42,X                                               ; 
50914 02 | C6E2 49 80      | EOR @#80                                                ; 
50916 02 | C6E4 85 52      | STA #52                                                 ; 
50918 02 | C6E6 B5 43      | LDA #43,X                                               ; 
50920 02 | C6E8 49 80      | EOR @#80                                                ; 
50922 02 | C6EA 85 54      | STA #54                                                 ; 
50924 02 | C6EC A0 00      | LDY @#0                                                 ; 
50926 01 | C6EE 38         | SEC                                                     ; 
50927 02 | C6EF B5 15      | LDA #15,X                                               ; 
50929 02 | C6F1 F5 16      | SBC #16,X                                               ; 
50931 02 | C6F3 85 53      | STA #53                                                 ; 
50933 02 | C6F5 B5 24      | LDA #24,X                                               ; 
50935 02 | C6F7 F5 25      | SBC #25,X                                               ; 
50937 02 | C6F9 85 55      | STA #55                                                 ; 
50939 02 | C6FB B5 33      | LDA #33,X                                               ; 
50941 02 | C6FD F5 34      | SBC #34,X                                               ; 
50943 02 | C6FF 85 56      | STA #56                                                 ; 
50945 02 | C701 A5 52      | LDA #52                                                 ; 
50947 02 | C703 E5 54      | SBC #54                                                 ; 
50949 02 | C705 05 53      | ORA #53                                                 ; 
50951 02 | C707 05 55      | ORA #55                                                 ; 
50953 02 | C709 05 56      | ORA #56                                                 ; 
50955 01 | C70B 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Truth Test subroutine
                                                                                     ; ---------------------
                                                                                     ; 
                                                                                     ; - Evaluates an arbitrarily complex expression pointed to by (5),Y where
                                                                                     ; Y=?3 and places a zero on the Workspace Stack at 16,X where X=?4.
                                                                                     ; - Used by IF and UNTIL commands.
                                                                                     ; 
50956 03 | C70C 20 2C C7   | JSR #C72C                                               ; 
50959 02 | C70F A2 43      | LDX @#43                                                ; 
50961 03 | C711 4C 33 C2   | JMP #C233                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Logical AND Truth Test
                                                                                     ; ----------------------
                                                                                     ; 
50964 03 | C714 20 2C C7   | JSR #C72C                                               ; 
50967 02 | C717 B5 14      | LDA #14,X                                               ; 
50969 02 | C719 35 15      | AND #15,X                                               ; 
50971 02 | C71B 95 14      | STA #14,X                                               ; 
50973 02 | C71D C6 04      | DEC #4                                                  ; 
50975 03 | C71F 4C 0F C7   | JMP #C70F                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Logical OR Truth Test
                                                                                     ; ---------------------
                                                                                     ; 
50978 03 | C722 20 2C C7   | JSR #C72C                                               ; 
50981 02 | C725 B5 14      | LDA #14,X                                               ; 
50983 02 | C727 15 15      | ORA #15,X                                               ; 
50985 03 | C729 4C 1B C7   | JMP #C71B                                               ; 
                                                                                     ; 
                                                                                     ; 
50988 02 | C72C A2 46      | LDX @#46                                                ; 
50990 03 | C72E 4C 33 C2   | JMP #C233                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; '$' String Comparison Test
                                                                                     ; --------------------------
                                                                                     ; 
50993 03 | C731 20 8B C7   | JSR #C78B                                               ; 
50996 03 | C734 20 AE CE   | JSR #CEAE                                               ; 
50999 02 | C737 B5 15      | LDA #15,X                                               ; 
51001 02 | C739 85 54      | STA #54                                                 ; 
51003 02 | C73B B5 24      | LDA #24,X                                               ; 
51005 02 | C73D 85 55      | STA #55                                                 ; 
51007 02 | C73F A0 FF      | LDY @#FF                                                ; 
51009 01 | C741 C8         | INY                                                     ; 
51010 02 | C742 B1 54      | LDA (#54),Y                                             ; 
51012 02 | C744 D1 52      | CMP (#52),Y                                             ; 
51014 02 | C746 D0 07      | BNE #C74F                                               ; 
51016 02 | C748 49 0D      | EOR @#D                                                 ; 
51018 02 | C74A D0 F5      | BNE #C741                                               ; 
51020 01 | C74C A8         | TAY                                                     ; 
51021 02 | C74D F0 11      | BEQ #C760                                               ; 
51023 02 | C74F A0 00      | LDY @#0                                                 ; 
51025 02 | C751 F0 0E      | BEQ #C761                                               ; 
                                                                                     ; 
                                                                                     ; 
51027 03 | C753 20 8B C7   | JSR #C78B                                               ; 
51030 02 | C756 A2 00      | LDX @#0                                                 ; 
51032 03 | C758 4C 33 C2   | JMP #C233                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Test <expression> = <expression>
                                                                                     ; --------------------------------
                                                                                     ; 
51035 03 | C75B 20 DA C6   | JSR #C6DA                                               ; 
51038 02 | C75E D0 01      | BNE #C761                                               ; 
51040 01 | C760 C8         | INY                                                     ; 
51041 02 | C761 94 15      | STY #15,X                                               ; 
51043 01 | C763 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Test <expression> <= <expression>
                                                                                     ; ---------------------------------
                                                                                     ; 
51044 03 | C764 20 DA C6   | JSR #C6DA                                               ; 
51047 02 | C767 F0 F7      | BEQ #C760                                               ; 
51049 02 | C769 90 F5      | BCC #C760                                               ; 
51051 02 | C76B B0 F4      | BCS #C761                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Test <expression> <> <expression>
                                                                                     ; ---------------------------------
                                                                                     ; 
51053 03 | C76D 20 DA C6   | JSR #C6DA                                               ; 
51056 02 | C770 D0 EE      | BNE #C760                                               ; 
51058 02 | C772 F0 ED      | BEQ #C761                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Test <expression> < <expression>
                                                                                     ; --------------------------------
                                                                                     ; 
51060 03 | C774 20 DA C6   | JSR #C6DA                                               ; 
51063 02 | C777 90 E7      | BCC #C760                                               ; 
51065 02 | C779 B0 E6      | BCS #C761                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Test <expression> >= <expression>
                                                                                     ; ---------------------------------
                                                                                     ; 
51067 03 | C77B 20 DA C6   | JSR #C6DA                                               ; 
51070 02 | C77E B0 E0      | BCS #C760                                               ; 
51072 02 | C780 90 DF      | BCC #C761                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Test <expression> > <expression>
                                                                                     ; --------------------------------
                                                                                     ; 
51074 03 | C782 20 DA C6   | JSR #C6DA                                               ; 
51077 02 | C785 F0 DA      | BEQ #C761                                               ; 
51079 02 | C787 B0 D7      | BCS #C760                                               ; 
51081 02 | C789 90 D6      | BCC #C761                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; <expression>
                                                                                     ; ------------
                                                                                     ; 
51083 03 | C78B 20 0B C8   | JSR #C80B                                               ; 
51086 03 | C78E 4C 95 C7   | JMP #C795                                               ; 
                                                                                     ; 
51089 02 | C791 95 41      | STA #41,X                                               ; 
51091 02 | C793 C6 04      | DEC #4                                                  ; 
51093 02 | C795 A2 00      | LDX @#0                                                 ; 
51095 03 | C797 4C 7B C2   | JMP #C27B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Add 2 Numbers on the Workspace Stack
                                                                                     ; ------------------------------------
                                                                                     ; 
                                                                                     ; - {14,X 23,X 32,X 41,X} = {14,X 23,X 32,X 41,X} + {15,X 24,X 33,X 42,X}
                                                                                     ; 
51098 03 | C79A 20 0B C8   | JSR #C80B                                               ; 
51101 01 | C79D 18         | CLC                                                     ; 
51102 02 | C79E B5 14      | LDA #14,X                                               ; 
51104 02 | C7A0 75 15      | ADC #15,X                                               ; 
51106 02 | C7A2 95 14      | STA #14,X                                               ; 
51108 02 | C7A4 B5 23      | LDA #23,X                                               ; 
51110 02 | C7A6 75 24      | ADC #24,X                                               ; 
51112 02 | C7A8 95 23      | STA #23,X                                               ; 
51114 02 | C7AA B5 32      | LDA #32,X                                               ; 
51116 02 | C7AC 75 33      | ADC #33,X                                               ; 
51118 02 | C7AE 95 32      | STA #32,X                                               ; 
51120 02 | C7B0 B5 41      | LDA #41,X                                               ; 
51122 02 | C7B2 75 42      | ADC #42,X                                               ; 
51124 03 | C7B4 4C 91 C7   | JMP #C791                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Subtract 2 Numbers on the Workspace Stack
                                                                                     ; -----------------------------------------
                                                                                     ; 
                                                                                     ; - {14,X 23,X 32,X 41,X} = {14,X 23,X 32,X 41,X} - {15,X 24,X 33,X 42,X}
                                                                                     ; 
51127 03 | C7B7 20 0B C8   | JSR #C80B                                               ; 
51130 02 | C7BA B5 14      | LDA #14,X                                               ; 
51132 02 | C7BC F5 15      | SBC #15,X                                               ; 
51134 02 | C7BE 95 14      | STA #14,X                                               ; 
51136 02 | C7C0 B5 23      | LDA #23,X                                               ; 
51138 02 | C7C2 F5 24      | SBC #24,X                                               ; 
51140 02 | C7C4 95 23      | STA #23,X                                               ; 
51142 02 | C7C6 B5 32      | LDA #32,X                                               ; 
51144 02 | C7C8 F5 33      | SBC #33,X                                               ; 
51146 02 | C7CA 95 32      | STA #32,X                                               ; 
51148 02 | C7CC B5 41      | LDA #41,X                                               ; 
51150 02 | C7CE F5 42      | SBC #42,X                                               ; 
51152 03 | C7D0 4C 91 C7   | JMP #C791                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Logically OR 2 Numbers on the Workspace Stack
                                                                                     ; ---------------------------------------------
                                                                                     ; 
                                                                                     ; - {14,X 23,X 32,X 41,X} = {14,X 23,X 32,X 41,X} OR {15,X 24,X 33,X 42,X}
                                                                                     ; 
51155 03 | C7D3 20 0B C8   | JSR #C80B                                               ; 
51158 02 | C7D6 B5 14      | LDA #14,X                                               ; 
51160 02 | C7D8 15 15      | ORA #15,X                                               ; 
51162 02 | C7DA 95 14      | STA #14,X                                               ; 
51164 02 | C7DC B5 23      | LDA #23,X                                               ; 
51166 02 | C7DE 15 24      | ORA #24,X                                               ; 
51168 02 | C7E0 95 23      | STA #23,X                                               ; 
51170 02 | C7E2 B5 32      | LDA #32,X                                               ; 
51172 02 | C7E4 15 33      | ORA #33,X                                               ; 
51174 02 | C7E6 95 32      | STA #32,X                                               ; 
51176 02 | C7E8 B5 41      | LDA                                                     ; A#41,X
51178 02 | C7EA 15 42      | ORA #42,X                                               ; 
51180 03 | C7EC 4C 91 C7   | JMP #C791                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Logically EOR 2 Numbers on the Workspace Stack
                                                                                     ; ----------------------------------------------
                                                                                     ; 
                                                                                     ; - {14,X 23,X 32,X 41,X} = {14,X 23,X 32,X 41,X} EOR {15,X 24,X 33,X 42,X}
                                                                                     ; 
51183 03 | C7EF 20 0B C8   | JSR #C80B                                               ; 
51186 02 | C7F2 B5 14      | LDA #14,X                                               ; 
51188 02 | C7F4 55 15      | EOR #15,X                                               ; 
51190 02 | C7F6 95 14      | STA #14,X                                               ; 
51192 02 | C7F8 B5 23      | LDA #23,X                                               ; 
51194 02 | C7FA 55 24      | EOR #24,X                                               ; 
51196 02 | C7FC 95 23      | STA #23,X                                               ; 
51198 02 | C7FE B5 32      | LDA #32,X                                               ; 
51200 02 | C800 55 33      | EOR #33,X                                               ; 
51202 02 | C802 95 32      | STA #32,X                                               ; 
51204 02 | C804 B5 41      | LDA #41,X                                               ; 
51206 02 | C806 55 42      | EOR #42,X                                               ; 
51208 03 | C808 4C 91 C7   | JMP #C791                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; <term>
                                                                                     ; ------
                                                                                     ; 
51211 03 | C80B 20 BC C8   | JSR #C8BC                                               ; 
51214 02 | C80E A2 05      | LDX @#5                                                 ; 
51216 03 | C810 4C 7B C2   | JMP #C27B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; <factor> * <factor>
                                                                                     ; -------------------
                                                                                     ; 
51219 03 | C813 20 61 C6   | JSR #C661                                               ; 
51222 02 | C816 46 5A      | LSR #5A                                                 ; 
51224 02 | C818 66 59      | ROR #59                                                 ; 
51226 02 | C81A 66 58      | ROR #58                                                 ; 
51228 02 | C81C 66 57      | ROR #57                                                 ; 
51230 02 | C81E 90 19      | BCC #C839                                               ; 
51232 01 | C820 18         | CLC                                                     ; 
51233 01 | C821 98         | TYA                                                     ; 
51234 02 | C822 65 53      | ADC #53                                                 ; 
51236 01 | C824 A8         | TAY                                                     ; 
51237 02 | C825 A5 5C      | LDA #5C                                                 ; 
51239 02 | C827 65 54      | ADC #54                                                 ; 
51241 02 | C829 85 5C      | STA #5C                                                 ; 
51243 02 | C82B A5 5D      | LDA #5D                                                 ; 
51245 02 | C82D 65 55      | ADC #55                                                 ; 
51247 02 | C82F 85 5D      | STA #5D                                                 ; 
51249 02 | C831 A5 5E      | LDA #5E                                                 ; 
51251 02 | C833 65 56      | ADC #56                                                 ; 
51253 02 | C835 29 7F      | AND @#7F                                                ; 
51255 02 | C837 85 5E      | STA #5E                                                 ; 
51257 02 | C839 06 53      | ASL #53                                                 ; 
51259 02 | C83B 26 54      | ROL #54                                                 ; 
51261 02 | C83D 26 55      | ROL #55                                                 ; 
51263 02 | C83F 26 56      | ROL #56                                                 ; 
51265 02 | C841 A5 57      | LDA #57                                                 ; 
51267 02 | C843 05 58      | ORA #58                                                 ; 
51269 02 | C845 05 59      | ORA #59                                                 ; 
51271 02 | C847 05 5A      | ORA #5A                                                 ; 
51273 02 | C849 D0 CB      | BNE #C816                                               ; 
51275 02 | C84B 84 5B      | STY #5B                                                 ; 
51277 02 | C84D A5 52      | LDA #52                                                 ; 
51279 01 | C84F 08         | PHP                                                     ; 
51280 02 | C850 A0 5B      | LDY @#5B                                                ; 
51282 03 | C852 20 9F C9   | JSR #C99F                                               ; 
51285 01 | C855 28         | PLP                                                     ; 
51286 02 | C856 10 03      | BPL #C85B                                               ; 
51288 03 | C858 20 C4 C8   | JSR #C8C4                                               ; 
51291 03 | C85B 4C 0E C8   | JMP #C80E                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; <factor> / <factor>
                                                                                     ; -------------------
                                                                                     ; 
51294 03 | C85E 20 89 C6   | JSR #C689                                               ; 
51297 02 | C861 26 57      | ROL #57                                                 ; 
51299 02 | C863 26 58      | ROL #58                                                 ; 
51301 02 | C865 26 59      | ROL #59                                                 ; 
51303 02 | C867 26 5A      | ROL #5A                                                 ; 
51305 02 | C869 24 52      | BIT #52                                                 ; 
51307 01 | C86B 08         | PHP                                                     ; 
51308 02 | C86C A0 57      | LDY @#57                                                ; 
51310 02 | C86E D0 E2      | BNE #C852                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; <factor> % <factor>
                                                                                     ; -------------------
                                                                                     ; 
51312 03 | C870 20 89 C6   | JSR #C689                                               ; 
51315 02 | C873 A6 04      | LDX #4                                                  ; 
51317 02 | C875 B5 44      | LDA #44,X                                               ; 
51319 01 | C877 08         | PHP                                                     ; 
51320 03 | C878 4C 50 C8   | JMP #C850                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; <factor> & <factor>
                                                                                     ; -------------------
                                                                                     ; 
51323 03 | C87B 20 BC C8   | JSR #C8BC                                               ; 
51326 01 | C87E CA         | DEX                                                     ; 
51327 02 | C87F 86 04      | STX #4                                                  ; 
51329 02 | C881 B5 15      | LDA #15,X                                               ; 
51331 02 | C883 35 16      | AND #16,X                                               ; 
51333 02 | C885 95 15      | STA #15,X                                               ; 
51335 02 | C887 B5 24      | LDA #24,X                                               ; 
51337 02 | C889 35 25      | AND #25,X                                               ; 
51339 02 | C88B 95 24      | STA #24,X                                               ; 
51341 02 | C88D B5 33      | LDA #33,X                                               ; 
51343 02 | C88F 35 34      | AND #34,X                                               ; 
51345 02 | C891 95 33      | STA #33,X                                               ; 
51347 02 | C893 B5 42      | LDA #42,X                                               ; 
51349 02 | C895 35 43      | AND #43,X                                               ; 
51351 02 | C897 95 42      | STA #42,X                                               ; 
51353 03 | C899 4C 0E C8   | JMP #C80E                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; <factor> ? <factor>
                                                                                     ; -------------------
                                                                                     ; 
51356 03 | C89C 20 A2 C8   | JSR #C8A2                                               ; 
51359 03 | C89F 4C 0E C8   | JMP #C80E                                               ; 
51362 03 | C8A2 20 BC C8   | JSR #C8BC                                               ; 
51365 01 | C8A5 18         | CLC                                                     ; 
51366 02 | C8A6 B5 15      | LDA #15,X                                               ; 
51368 02 | C8A8 75 14      | ADC #14,X                                               ; 
51370 01 | C8AA A8         | TAY                                                     ; 
51371 02 | C8AB B5 24      | LDA #24,X                                               ; 
51373 02 | C8AD 75 23      | ADC #23,X                                               ; 
51375 01 | C8AF CA         | DEX                                                     ; 
51376 03 | C8B0 4C 53 C9   | JMP #C953                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; <factor> ! <factor>
                                                                                     ; -------------------
                                                                                     ; 
51379 03 | C8B3 20 A2 C8   | JSR #C8A2                                               ; 
51382 03 | C8B6 20 62 C9   | JSR #C962                                               ; 
51385 03 | C8B9 4C 0E C8   | JMP #C80E                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Function Interpreter subroutine
                                                                                     ; -------------------------------
                                                                                     ; 
                                                                                     ; - Evaluates an arbitrarily complex function pointed to by (5),Y where Y=?3
                                                                                     ; and stores the result on the Workspace Stack pointed to by ?4.
                                                                                     ; - The (5),Y pointer is consolidated before return, so that (5),0 points to
                                                                                     ; the last character in the string interpreted.
                                                                                     ; - The Workspace Stack pointer ?4 is incremented.
                                                                                     ; 
51388 02 | C8BC A2 04      | LDX @#4                                                 ; 
51390 03 | C8BE 4C 33 C2   | JMP #C233                                               ; 
                                                                                     ; 
                                                                                     ; Negate Current Slot of Workspace Stack
                                                                                     ; --------------------------------------
                                                                                     ; 
                                                                                     ; - {15,X 24,X 33,X 42,X} = 0 - {15,X 24,X 33,X 42,X}
                                                                                     ; 
51393 03 | C8C1 20 DC C8   | JSR #C8DC                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Negate Current Slot of Workspace Stack subroutine
                                                                                     ; ------------------------------------------------
                                                                                     ; 
                                                                                     ; - {15,X 24,X 33,X 42,X} = 0 - {15,X 24,X 33,X 42,X}
                                                                                     ; - Destroys accumulator.
                                                                                     ; 
51396 01 | C8C4 38         | SEC                                                     ; 
51397 02 | C8C5 A9 00      | LDA @#0                                                 ; 
51399 01 | C8C7 A8         | TAY                                                     ; 
51400 02 | C8C8 F5 15      | SBC #15,X                                               ; 
51402 02 | C8CA 95 15      | STA #15,X                                               ; 
51404 01 | C8CC 98         | TYA                                                     ; 
51405 02 | C8CD F5 24      | SBC #24,X                                               ; 
51407 02 | C8CF 95 24      | STA #24,X                                               ; 
51409 01 | C8D1 98         | TYA                                                     ; 
51410 02 | C8D2 F5 33      | SBC #33,X                                               ; 
51412 02 | C8D4 95 33      | STA #33,X                                               ; 
51414 01 | C8D6 98         | TYA                                                     ; 
51415 02 | C8D7 F5 42      | SBC #42,X                                               ; 
51417 02 | C8D9 95 42      | STA #42,X                                               ; 
51419 01 | C8DB 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Variable Assignment to Workspace
                                                                                     ; --------------------------------
                                                                                     ; 
51420 03 | C8DC 20 34 C4   | JSR #C434                                               ; 
51423 02 | C8DF 90 17      | BCC #C8F8                                               ; 
51425 02 | C8E1 B4 15      | LDY #15,X                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Variable Assignment to Workspace Stack subroutine
                                                                                     ; -------------------------------------------------
                                                                                     ; 
                                                                                     ; - Copies the simple variable pointed to by Y (where 0=@, 1=A, etc to 26=Z)
                                                                                     ; to the current slot of the Workspace Stack pointed to by ?4.
                                                                                     ; - Destroys accumulator.
                                                                                     ; 
51427 03 | C8E3 B9 21 03   | LDA #321,Y                                              ; 
51430 02 | C8E6 95 15      | STA #15,X                                               ; 
51432 03 | C8E8 B9 57 03   | LDA #357,Y                                              ; 
51435 02 | C8EB 95 33      | STA #33,X                                               ; 
51437 03 | C8ED B9 3C 03   | LDA #33C,Y                                              ; 
51440 02 | C8F0 95 24      | STA #24,X                                               ; 
51442 03 | C8F2 B9 72 03   | LDA #372,Y                                              ; 
51445 02 | C8F5 95 42      | STA #42,X                                               ; 
51447 01 | C8F7 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Do Numerical Assignments
                                                                                     ; ------------------------
                                                                                     ; 
                                                                                     ; 
51448 03 | C8F8 20 6A C4   | JSR #C46A                                               ; 
51451 02 | C8FB B0 FA      | BCS #C8F7                                               ; 
51453 02 | C8FD A2 07      | LDX @#7                                                 ; 
51455 03 | C8FF 4C 33 C2   | JMP #C233                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Function 'ABS'
                                                                                     ; --------------------------
                                                                                     ; 
                                                                                     ; - Performs ABS of function pointed to by (5),Y and places the result on
                                                                                     ; the Workspace Stack.
                                                                                     ; 
51458 03 | C902 20 BC C8   | JSR #C8BC                                               ; 
51461 02 | C905 B5 42      | LDA #42,X                                               ; 
51463 02 | C907 30 BB      | BMI #C8C4                                               ; 
51465 01 | C909 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with '#'
                                                                                     ; -------------
                                                                                     ; 
51466 02 | C90A A2 00      | LDX @#0                                                 ; 
51468 02 | C90C 86 52      | STX #52                                                 ; 
51470 02 | C90E 86 53      | STX #53                                                 ; 
51472 02 | C910 86 54      | STX #54                                                 ; 
51474 02 | C912 86 55      | STX #55                                                 ; 
51476 01 | C914 88         | DEY                                                     ; 
51477 01 | C915 C8         | INY                                                     ; 
51478 02 | C916 B1 05      | LDA (#5),Y                                              ; 
51480 02 | C918 C9 30      | CMP @#30                                                ; 
51482 02 | C91A 90 22      | BCC #C93E                                               ; 
51484 02 | C91C C9 3A      | CMP @#3A                                                ; 
51486 02 | C91E 90 0A      | BCC #C92A                                               ; 
51488 02 | C920 E9 37      | SBC @#37                                                ; 
51490 02 | C922 C9 0A      | CMP @#A                                                 ; 
51492 02 | C924 90 18      | BCC #C93E                                               ; 
51494 02 | C926 C9 10      | CMP @#10                                                ; 
51496 02 | C928 B0 14      | BCS #C93E                                               ; 
51498 01 | C92A 0A         | ASL A                                                   ; 
51499 01 | C92B 0A         | ASL A                                                   ; 
51500 01 | C92C 0A         | ASL A                                                   ; 
51501 01 | C92D 0A         | ASL A                                                   ; 
51502 02 | C92E A2 03      | LDX @#3                                                 ; 
51504 01 | C930 0A         | ASL A                                                   ; 
51505 02 | C931 26 52      | ROL #52                                                 ; 
51507 02 | C933 26 53      | ROL #53                                                 ; 
51509 02 | C935 26 54      | ROL #54                                                 ; 
51511 02 | C937 26 55      | ROL #55                                                 ; 
51513 01 | C939 CA         | DEX                                                     ; 
51514 02 | C93A 10 F4      | BPL #C930                                               ; 
51516 02 | C93C 30 D7      | BMI #C915                                               ; 
51518 01 | C93E 8A         | TXA                                                     ; 
51519 02 | C93F 10 18      | BPL #C959                                               ; 
51521 03 | C941 4C D6 C4   | JMP #C4D6                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with '('
                                                                                     ; -------------
                                                                                     ; 
51524 03 | C944 20 0C C7   | JSR #C70C                                               ; 
51527 02 | C947 A2 0C      | LDX @#C                                                 ; 
51529 03 | C949 4C 7B C2   | JMP #C27B                                               ; 
51532 03 | C94C 20 BC C8   | JSR #C8BC                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with '?'
                                                                                     ; -------------
                                                                                     ; 
51535 02 | C94F B4 15      | LDY #15,X                                               ; 
51537 02 | C951 B5 24      | LDA #24,X                                               ; 
51539 02 | C953 85 53      | STA #53                                                 ; 
51541 02 | C955 84 52      | STY #52                                                 ; 
51543 01 | C957 CA         | DEX                                                     ; 
51544 02 | C958 A0 00      | LDY @#0                                                 ; 
51546 02 | C95A B1 52      | LDA (#52),Y                                             ; 
51548 03 | C95C 4C 7C C9   | JMP #C97C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with '!'
                                                                                     ; -------------
                                                                                     ; 
51551 03 | C95F 20 4C C9   | JSR #C94C                                               ; 
51554 02 | C962 A0 01      | LDY @#1                                                 ; 
51556 02 | C964 B1 52      | LDA (#52),Y                                             ; 
51558 02 | C966 95 24      | STA #24,X                                               ; 
51560 01 | C968 C8         | INY                                                     ; 
51561 02 | C969 B1 52      | LDA (#52),Y                                             ; 
51563 02 | C96B 95 33      | STA #33,X                                               ; 
51565 01 | C96D C8         | INY                                                     ; 
51566 02 | C96E B1 52      | LDA (#52),Y                                             ; 
51568 02 | C970 95 42      | STA #42,X                                               ; 
51570 01 | C972 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Read TOP onto Workspace Stack subroutine
                                                                                     ; ----------------------------------------
                                                                                     ; 
                                                                                     ; - Reads the TOP value at #D,#E onto the current workspace slot.
                                                                                     ; - The Workspace Stack pointer ?4 is incremented.
                                                                                     ; 
51571 02 | C973 A0 0D      | LDY @#D                                                 ; 
51573 03 | C975 20 A1 C9   | JSR #C9A1                                               ; 
51576 02 | C978 F0 07      | BEQ #C981                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Read COUNT onto Workspace Stack subroutine
                                                                                     ; ------------------------------------------
                                                                                     ; 
                                                                                     ; - Reads the COUNT value at ?7 onto the current workspace slot
                                                                                     ; 
51578 02 | C97A A5 07      | LDA #7                                                  ; 
51580 03 | C97C 20 B3 C9   | JSR #C9B3                                               ; 
51583 02 | C97F 95 24      | STA #24,X                                               ; 
51585 02 | C981 95 33      | STA #33,X                                               ; 
51587 02 | C983 95 42      | STA #42,X                                               ; 
51589 01 | C985 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Function 'RND' subroutine
                                                                                     ; -------------------------------------
                                                                                     ; 
                                                                                     ; - Generates a new random number at #8,#9,#A,#B,#C and copies it to the   current slot of the Workspace Stack pointed to by ?4.
                                                                                     ; - The Workspace Stack pointer ?4 is incremented.
                                                                                     ; 
51590 02 | C986 A0 20      | LDY @#20                                                ; 
51592 02 | C988 A5 0A      | LDA #A                                                  ; 
51594 01 | C98A 4A         | LSR A                                                   ; 
51595 01 | C98B 4A         | LSR A                                                   ; 
51596 01 | C98C 4A         | LSR A                                                   ; 
51597 02 | C98D 45 0C      | EOR #C                                                  ; 
51599 01 | C98F 6A         | ROR A                                                   ; 
51600 02 | C990 26 08      | ROL #8                                                  ; 
51602 02 | C992 26 09      | ROL #9                                                  ; 
51604 02 | C994 26 0A      | ROL #A                                                  ; 
51606 02 | C996 26 0B      | ROL #B                                                  ; 
51608 02 | C998 26 0C      | ROL #C                                                  ; 
51610 01 | C99A 88         | DEY                                                     ; 
51611 02 | C99B D0 EB      | BNE #C988                                               ; 
51613 02 | C99D A0 08      | LDY @#8                                                 ; 
51615 02 | C99F A6 04      | LDX #4                                                  ; 
51617 03 | C9A1 B9 01 00   | LDA #1,Y                                                ; 
51620 02 | C9A4 95 25      | STA #25,X                                               ; 
51622 03 | C9A6 B9 02 00   | LDA #2,Y                                                ; 
51625 02 | C9A9 95 34      | STA #34,X                                               ; 
51627 03 | C9AB B9 03 00   | LDA #3,Y                                                ; 
51630 02 | C9AE 95 43      | STA #43,X                                               ; 
51632 03 | C9B0 B9 00 00   | LDA #0,Y                                                ; 
51635 02 | C9B3 95 16      | STA #16,X                                               ; 
51637 01 | C9B5 E8         | INX                                                     ; 
51638 02 | C9B6 86 04      | STX #4                                                  ; 
51640 02 | C9B8 A4 03      | LDY #3                                                  ; 
51642 02 | C9BA A9 00      | LDA @#0                                                 ; 
51644 01 | C9BC 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Function 'LEN'
                                                                                     ; --------------------------
                                                                                     ; 
51645 03 | C9BD 20 BC C8   | JSR #C8BC                                               ; 
51648 03 | C9C0 20 CB C3   | JSR #C3CB                                               ; 
51651 02 | C9C3 A0 00      | LDY @#0                                                 ; 
51653 02 | C9C5 A9 0D      | LDA @#D                                                 ; 
51655 02 | C9C7 D1 52      | CMP (#52),Y                                             ; 
51657 02 | C9C9 F0 03      | BEQ #C9CE                                               ; 
51659 01 | C9CB C8         | INY                                                     ; 
51660 02 | C9CC D0 F9      | BNE #C9C7                                               ; 
51662 01 | C9CE 98         | TYA                                                     ; 
51663 03 | C9CF 4C 7C C9   | JMP #C97C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with the 'CH' operator
                                                                                     ; ---------------------------
51666 03 | C9D2 20 B1 CE   | JSR #CEB1                                               ; 
51669 03 | C9D5 4C 58 C9   | JMP #C958                                               ; 
                                                                                     ; 
                                                                                     ; BRK Handler
                                                                                     ; -----------
                                                                                     ; - Points the BASIC interpreter at the vector (#10,#11) which is normally  set to point to #C9E7.
                                                                                     ; - Exits to the Diect Mode.
51672 01 | C9D8 68         | PLA                                                     ; 
51673 01 | C9D9 68         | PLA                                                     ; 
51674 02 | C9DA 85 00      | STA #0                                                  ; 
51676 02 | C9DC A5 10      | LDA #10                                                 ; 
51678 02 | C9DE 85 05      | STA #5                                                  ; 
51680 02 | C9E0 A5 11      | LDA #11                                                 ; 
51682 02 | C9E2 85 06      | STA #6                                                  ; 
51684 03 | C9E4 4C F2 C2   | JMP #C2F2                                               ; 
                                                                                     ; 
51687 09 | C9E7 40 3D 31 3B 50 2E 24 36 24                                           ; .......@=1;P.$6$
51696 16 | C9F0 37 27 22 45 52 52 4F 52 20 22 3F 30 3B 40 3D 38                      ; 7'"ERROR "?0;@=8
51712 16 | CA00 3B 49 46 3F 31 7C 3F 32 50 2E 22 20 4C 49 4E 45                      ; ;IF?1|?2P." LINE
51728 16 | CA10 22 21 31 26 20 23 46 46 46 46 0D 00 00 50 2E 27                      ; "!1& #FFFF...P.'
51744 04 | CA20 3B 45 2E 0D                                                          ; ;E..
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle Unrecognised Command
                                                                                     ; ---------------------------
                                                                                     ; - Jumps indirectly to (#D002) if the FP ROM exists, otherwise executes BRK.
51748 03 | CA24 20 24 C4   | JSR #C424                                               ; 
51751 02 | CA27 90 F2      | BCC #CA1B                                               ; 
51753 03 | CA29 6C 04 D0   | JMP (#D004)                                             ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Assign Integer Variable
                                                                                     ; -----------------------
                                                                                     ; 
                                                                                     ; - Copies the last value on the Workspace Stack to the integer variable
                                                                                     ; pointed to by Y (where 0=@, 1=A, etc to 26=Z).
                                                                                     ; - Workspace Stack pointer is decremented TWICE.
                                                                                     ; 
51756 03 | CA2C 20 8B C7   | JSR #C78B                                               ; 
51759 02 | CA2F A6 04      | LDX #4                                                  ; 
51761 01 | CA31 CA         | DEX                                                     ; 
51762 01 | CA32 CA         | DEX                                                     ; 
51763 02 | CA33 86 04      | STX #4                                                  ; 
51765 02 | CA35 B4 16      | LDY #16,X                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Assign Integer Variable subroutine
                                                                                     ; ----------------------------------
                                                                                     ; 
                                                                                     ; - Copies the value on the Workspace Stack pointed to by X to the integer
                                                                                     ; variable pointed to by Y (where 0=@, 1=A, etc to 26=Z).
                                                                                     ; - Destroys accumulator.
                                                                                     ; 
51767 02 | CA37 B5 17      | LDA #17,X                                               ; 
51769 03 | CA39 99 21 03   | STA #321,Y                                              ; 
51772 02 | CA3C B5 26      | LDA #26,X                                               ; 
51774 03 | CA3E 99 3C 03   | STA #33C,Y                                              ; 
51777 02 | CA41 B5 35      | LDA #35,X                                               ; 
51779 03 | CA43 99 57 03   | STA #357,Y                                              ; 
51782 02 | CA46 B5 44      | LDA #44,X                                               ; 
51784 03 | CA48 99 72 03   | STA #372,Y                                              ; 
51787 01 | CA4B 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Increment 'COUNT' and Print Character subroutine
                                                                                     ; ------------------------------------------------
                                                                                     ; 
                                                                                     ; - Increments COUNT at ?7 and the prints the contents of the accumulator.
                                                                                     ; 
51788 02 | CA4C E6 07      | INC #7                                                  ; 
51790 03 | CA4E 6C 08 02   | JMP (#208)                                              ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'LIST'
                                                                                     ; --------------------------
                                                                                     ; 
                                                                                     ; - X register must be zero on entry.
                                                                                     ; - Exits to the Direct Mode.
                                                                                     ; 
51793 02 | CA51 A9 00      | LDA @#0                                                 ; 
51795 03 | CA53 20 7C C9   | JSR #C97C                                               ; 
51798 02 | CA56 A9 FF      | LDA @#FF                                                ; 
51800 03 | CA58 20 7C C9   | JSR #C97C                                               ; 
51803 02 | CA5B 85 04      | STA #4                                                  ; 
51805 02 | CA5D A0 7F      | LDY @#7F                                                ; 
51807 02 | CA5F 84 26      | STY #26                                                 ; 
51809 03 | CA61 20 65 C4   | JSR #C465                                               ; 
51812 02 | CA64 90 52      | BCC #CAB8                                               ; 
51814 03 | CA66 20 31 C2   | JSR #C231                                               ; 
51817 02 | CA69 B0 58      | BCS #CAC3                                               ; 
51819 03 | CA6B 20 65 C4   | JSR #C465                                               ; 
51822 02 | CA6E A2 01      | LDX @#1                                                 ; 
51824 02 | CA70 86 04      | STX #4                                                  ; 
51826 03 | CA72 20 E4 C4   | JSR #C4E4                                               ; 
51829 03 | CA75 20 2E C6   | JSR #C62E                                               ; 
51832 02 | CA78 90 30      | BCC #CAAA                                               ; 
51834 01 | CA7A 88         | DEY                                                     ; 
51835 02 | CA7B B0 21      | BCS #CA9E                                               ; 
51837 02 | CA7D A9 05      | LDA @#5                                                 ; 
51839 03 | CA7F 8D 21 03   | STA #321                                                ; 
51842 03 | CA82 20 89 C5   | JSR #C589                                               ; 
51845 02 | CA85 A9 08      | LDA @#8                                                 ; 
51847 03 | CA87 8D 21 03   | STA #321                                                ; 
51850 02 | CA8A A4 03      | LDY #3                                                  ; 
51852 02 | CA8C B1 58      | LDA (#58),Y                                             ; 
51854 02 | CA8E C9 0D      | CMP @#D                                                 ; 
51856 02 | CA90 F0 06      | BEQ #CA98                                               ; 
51858 03 | CA92 20 4C CA   | JSR #CA4C                                               ; 
51861 01 | CA95 C8         | INY                                                     ; 
51862 02 | CA96 D0 F4      | BNE #CA8C                                               ; 
51864 03 | CA98 20 54 CD   | JSR #CD54                                               ; 
51867 03 | CA9B 20 A1 CE   | JSR #CEA1                                               ; 
51870 02 | CA9E B1 58      | LDA (#58),Y                                             ; 
51872 02 | CAA0 85 25      | STA #25                                                 ; 
51874 01 | CAA2 C8         | INY                                                     ; 
51875 02 | CAA3 B1 58      | LDA (#58),Y                                             ; 
51877 02 | CAA5 85 16      | STA #16                                                 ; 
51879 01 | CAA7 C8         | INY                                                     ; 
51880 02 | CAA8 84 03      | STY #3                                                  ; 
51882 02 | CAAA A5 16      | LDA #16                                                 ; 
51884 01 | CAAC 18         | CLC                                                     ; 
51885 02 | CAAD E5 17      | SBC #17                                                 ; 
51887 02 | CAAF A5 25      | LDA #25                                                 ; 
51889 02 | CAB1 E5 26      | SBC #26                                                 ; 
51891 02 | CAB3 90 C8      | BCC #CA7D                                               ; 
51893 03 | CAB5 4C CF C2   | JMP #C2CF                                               ; 
51896 03 | CAB8 20 31 C2   | JSR #C231                                               ; 
51899 02 | CABB E6 04      | INC #4                                                  ; 
51901 03 | CABD 20 65 C4   | JSR #C465                                               ; 
51904 03 | CAC0 4C 6E CA   | JMP #CA6E                                               ; 
51907 02 | CAC3 A5 16      | LDA #16                                                 ; 
51909 02 | CAC5 A4 25      | LDY #25                                                 ; 
51911 02 | CAC7 85 17      | STA #17                                                 ; 
51913 02 | CAC9 84 26      | STY #26                                                 ; 
51915 02 | CACB B0 A1      | BCS #CA6E                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'NEXT'
                                                                                     ; --------------------------
                                                                                     ; 
51917 03 | CACD 20 34 C4   | JSR #C434                                               ; 
51920 02 | CAD0 A4 15      | LDY #15                                                 ; 
51922 02 | CAD2 F0 10      | BEQ #CAE4                                               ; 
51924 02 | CAD4 90 0F      | BCC #CAE5                                               ; 
51926 02 | CAD6 C6 04      | DEC #4                                                  ; 
51928 02 | CAD8 B5 15      | LDA #15,X                                               ; 
51930 03 | CADA D9 3F 02   | CMP #23F,Y                                              ; 
51933 02 | CADD F0 06      | BEQ #CAE5                                               ; 
51935 01 | CADF 88         | DEY                                                     ; 
51936 02 | CAE0 84 15      | STY #15                                                 ; 
51938 02 | CAE2 D0 F6      | BNE #CADA                                               ; 
51940 01 | CAE4 00         | BRK                                                     ; 
51941 03 | CAE5 BE 3F 02   | LDX #23F,Y                                              ; 
51944 01 | CAE8 18         | CLC                                                     ; 
51945 03 | CAE9 BD 21 03   | LDA #321,X                                              ; 
51948 03 | CAEC 79 4A 02   | ADC #24A,Y                                              ; 
51951 03 | CAEF 9D 21 03   | STA #321,X                                              ; 
51954 02 | CAF2 85 52      | STA #52                                                 ; 
51956 03 | CAF4 BD 3C 03   | LDA #33C,X                                              ; 
51959 03 | CAF7 79 55 02   | ADC #255,Y                                              ; 
51962 03 | CAFA 9D 3C 03   | STA #33C,X                                              ; 
51965 02 | CAFD 85 53      | STA #53                                                 ; 
51967 03 | CAFF BD 57 03   | LDA #357,X                                              ; 
51970 03 | CB02 79 60 02   | ADC #260,Y                                              ; 
51973 03 | CB05 9D 57 03   | STA #357,X                                              ; 
51976 02 | CB08 85 54      | STA #54                                                 ; 
51978 03 | CB0A BD 72 03   | LDA #372,X                                              ; 
51981 03 | CB0D 79 6B 02   | ADC #26B,Y                                              ; 
51984 03 | CB10 9D 72 03   | STA #372,X                                              ; 
51987 01 | CB13 AA         | TAX                                                     ; 
51988 02 | CB14 A5 52      | LDA #52                                                 ; 
51990 01 | CB16 38         | SEC                                                     ; 
51991 03 | CB17 F9 76 02   | SBC #276,Y                                              ; 
51994 02 | CB1A 85 52      | STA #52                                                 ; 
51996 02 | CB1C A5 53      | LDA #53                                                 ; 
51998 03 | CB1E F9 81 02   | SBC #281,Y                                              ; 
52001 02 | CB21 85 53      | STA #53                                                 ; 
52003 02 | CB23 A5 54      | LDA #54                                                 ; 
52005 03 | CB25 F9 8C 02   | SBC #28C,Y                                              ; 
52008 02 | CB28 85 54      | STA #54                                                 ; 
52010 01 | CB2A 8A         | TXA                                                     ; 
52011 03 | CB2B F9 97 02   | SBC #297,Y                                              ; 
52014 02 | CB2E 05 52      | ORA #52                                                 ; 
52016 02 | CB30 05 53      | ORA #53                                                 ; 
52018 02 | CB32 05 54      | ORA #54                                                 ; 
52020 02 | CB34 F0 0F      | BEQ #CB45                                               ; 
52022 01 | CB36 8A         | TXA                                                     ; 
52023 03 | CB37 59 6B 02   | EOR #26B,Y                                              ; 
52026 03 | CB3A 59 97 02   | EOR #297,Y                                              ; 
52029 02 | CB3D 10 04      | BPL #CB43                                               ; 
52031 02 | CB3F B0 04      | BCS #CB45                                               ; 
52033 02 | CB41 90 0F      | BCC #CB52                                               ; 
52035 02 | CB43 B0 0D      | BCS #CB52                                               ; 
52037 03 | CB45 B9 A2 02   | LDA #2A2,Y                                              ; 
52040 02 | CB48 85 05      | STA #5                                                  ; 
52042 03 | CB4A B9 AD 02   | LDA #2AD,Y                                              ; 
52045 02 | CB4D 85 06      | STA #6                                                  ; 
52047 03 | CB4F 4C FF CB   | JMP #CBFF                                               ; 
                                                                                     ; 
52050 02 | CB52 C6 15      | DEC #15                                                 ; 
52052 03 | CB54 4C 58 C5   | JMP #C558                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'FOR'
                                                                                     ; -------------------------
                                                                                     ; 
52055 03 | CB57 20 34 C4   | JSR #C434                                               ; 
52058 02 | CB5A 90 11      | BCC #CB6D                                               ; 
52060 03 | CB5C 20 79 C2   | JSR #C279                                               ; 
52063 03 | CB5F 20 2C CA   | JSR #CA2C                                               ; 
52066 01 | CB62 98         | TYA                                                     ; 
52067 02 | CB63 A4 15      | LDY #15                                                 ; 
52069 02 | CB65 C0 0B      | CPY @#B                                                 ; 
52071 02 | CB67 B0 04      | BCS #CB6D                                               ; 
52073 03 | CB69 99 40 02   | STA #240,Y                                              ; 
52076 02 | CB6C A9 00      | LDA @#0                                                 ; 
52078 03 | CB6E 99 6C 02   | STA #26C,Y                                              ; 
52081 03 | CB71 99 61 02   | STA #261,Y                                              ; 
52084 03 | CB74 99 56 02   | STA #256,Y                                              ; 
52087 02 | CB77 A9 01      | LDA @#1                                                 ; 
52089 03 | CB79 99 4B 02   | STA #24B,Y                                              ; 
52092 02 | CB7C A2 16      | LDX @#16                                                ; 
52094 03 | CB7E 4C 33 C2   | JMP #C233                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'TO'
                                                                                     ; ------------------------
                                                                                     ; 
52097 03 | CB81 20 8B C7   | JSR #C78B                                               ; 
52100 02 | CB84 A4 15      | LDY #15                                                 ; 
52102 01 | CB86 CA         | DEX                                                     ; 
52103 02 | CB87 86 04      | STX #4                                                  ; 
52105 02 | CB89 B5 16      | LDA #16,X                                               ; 
52107 03 | CB8B 99 77 02   | STA #277,Y                                              ; 
52110 02 | CB8E B5 25      | LDA #25,X                                               ; 
52112 03 | CB90 99 82 02   | STA #282,Y                                              ; 
52115 02 | CB93 B5 34      | LDA #34,X                                               ; 
52117 03 | CB95 99 8D 02   | STA #28D,Y                                              ; 
52120 02 | CB98 B5 43      | LDA #43,X                                               ; 
52122 03 | CB9A 99 98 02   | STA #298,Y                                              ; 
52125 02 | CB9D A2 1A      | LDX @#1A                                                ; 
52127 03 | CB9F 4C 33 C2   | JMP #C233                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'STEP'
                                                                                     ; --------------------------
                                                                                     ; 
52130 03 | CBA2 20 8B C7   | JSR #C78B                                               ; 
52133 02 | CBA5 A4 15      | LDY #15                                                 ; 
52135 01 | CBA7 CA         | DEX                                                     ; 
52136 02 | CBA8 86 04      | STX #4                                                  ; 
52138 02 | CBAA B5 16      | LDA #16,X                                               ; 
52140 03 | CBAC 99 4B 02   | STA #24B,Y                                              ; 
52143 02 | CBAF B5 25      | LDA #25,X                                               ; 
52145 03 | CBB1 99 56 02   | STA #256,Y                                              ; 
52148 02 | CBB4 B5 34      | LDA #34,X                                               ; 
                                                                                     ; 
52150 03 | CBB6 99 61 02   | STA #261,Y                                              ; 
52153 02 | CBB9 B5 43      | LDA #43,X                                               ; 
52155 03 | CBBB 99 6C 02   | STA #26C,Y                                              ; 
                                                                                     ; 
                                                                                     ; CONFLICT: some ROM binaries say:
                                                                                     ; CBB6  99 62 02  STA #262,Y	; 62 not 61
                                                                                     ; CBB9  B5 43     LDA #43,X
                                                                                     ; CBBB  99 6d 02  STA #26D,Y	; 6D not 6C
                                                                                     ; 
                                                                                     ; 
52158 03 | CBBE 20 0C C5   | JSR #C50C                                               ; 
52161 02 | CBC1 A4 15      | LDY #15                                                 ; 
52163 02 | CBC3 A5 05      | LDA #5                                                  ; 
52165 03 | CBC5 99 A3 02   | STA #2A3,Y                                              ; 
52168 02 | CBC8 A5 06      | LDA #6                                                  ; 
52170 03 | CBCA 99 AE 02   | STA #2AE,Y                                              ; 
52173 02 | CBCD E6 15      | INC #15                                                 ; 
52175 03 | CBCF 4C 1B C3   | JMP #C31B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'GOSUB'
                                                                                     ; ---------------------------
                                                                                     ; 
52178 03 | CBD2 20 1F CC   | JSR #CC1F                                               ; 
52181 03 | CBD5 20 0C C5   | JSR #C50C                                               ; 
52184 02 | CBD8 A4 14      | LDY #14                                                 ; 
52186 02 | CBDA C0 0E      | CPY @#E                                                 ; 
52188 02 | CBDC B0 22      | BCS #CC00                                               ; 
52190 02 | CBDE A5 05      | LDA #5                                                  ; 
52192 03 | CBE0 99 CF 02   | STA #2CF,Y                                              ; 
52195 02 | CBE3 A5 06      | LDA #6                                                  ; 
52197 03 | CBE5 99 DD 02   | STA #2DD,Y                                              ; 
52200 02 | CBE8 E6 14      | INC #14                                                 ; 
52202 02 | CBEA 90 1F      | BCC #CC0B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'RETURN'
                                                                                     ; ----------------------------
                                                                                     ; 
52204 03 | CBEC 20 E4 C4   | JSR #C4E4                                               ; 
52207 02 | CBEF A4 14      | LDY #14                                                 ; 
52209 02 | CBF1 F0 2A      | BEQ #CC1D                                               ; 
52211 02 | CBF3 C6 14      | DEC #14                                                 ; 
52213 03 | CBF5 B9 CE 02   | LDA #2CE,Y                                              ; 
52216 02 | CBF8 85 05      | STA #5                                                  ; 
52218 03 | CBFA B9 DC 02   | LDA #2DC,Y                                              ; 
52221 02 | CBFD 85 06      | STA #6                                                  ; 
52223 03 | CBFF 20 00 C5   | JSR #C500                                               ; 
52226 03 | CC02 4C 1B C3   | JMP #C31B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'GOTO'
                                                                                     ; --------------------------
                                                                                     ; 
52229 03 | CC05 20 1F CC   | JSR #CC1F                                               ; 
52232 03 | CC08 20 E4 C4   | JSR #C4E4                                               ; 
52235 02 | CC0B A5 57      | LDA #57                                                 ; 
52237 02 | CC0D D0 05      | BNE #CC14                                               ; 
52239 03 | CC0F 20 2E C6   | JSR #C62E                                               ; 
52242 02 | CC12 B0 69      | BCS #CC7D                                               ; 
52244 02 | CC14 A4 58      | LDY #58                                                 ; 
52246 02 | CC16 A5 59      | LDA #59                                                 ; 
52248 02 | CC18 84 05      | STY #5                                                  ; 
52250 03 | CC1A 4C FD CB   | JMP #CBFD                                               ; 
                                                                                     ; 
52253 01 | CC1D 00         | BRK                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Line Number/Label Text Search subroutine
                                                                                     ; ----------------------------------------
                                                                                     ; 
                                                                                     ; - Used by 'GOTO' and 'GOSUB' routines.
                                                                                     ; - Line number copied to #1,#2 if the search is successful.
                                                                                     ; - If the label address is known, it is copied to #58,#59.
                                                                                     ; - If the label address is not known, it is searched for and copied to the
                                                                                     ; label store as well as to #58,#59.
                                                                                     ; 
52254 01 | CC1E C8         | INY                                                     ; 
52255 02 | CC1F B1 05      | LDA (#5),Y                                              ; 
52257 02 | CC21 C9 20      | CMP @#20                                                ; 
52259 02 | CC23 F0 F9      | BEQ #CC1E                                               ; 
52261 02 | CC25 C9 61      | CMP @#61                                                ; 
52263 02 | CC27 90 50      | BCC #CC79                                               ; 
52265 02 | CC29 85 57      | STA #57                                                 ; 
52267 02 | CC2B E9 61      | SBC @#61                                                ; 
52269 02 | CC2D C9 1B      | CMP @#1B                                                ; 
52271 02 | CC2F B0 48      | BCS #CC79                                               ; 
52273 01 | CC31 0A         | ASL A                                                   ; 
52274 01 | CC32 AA         | TAX                                                     ; 
52275 03 | CC33 BD 8D 03   | LDA #38D,X                                              ; 
52278 02 | CC36 85 58      | STA #58                                                 ; 
52280 03 | CC38 20 F6 C4   | JSR #C4F6                                               ; 
52283 03 | CC3B BD 8E 03   | LDA #38E,X                                              ; 
52286 02 | CC3E 85 59      | STA #59                                                 ; 
52288 02 | CC40 05 58      | ORA #58                                                 ; 
52290 02 | CC42 D0 34      | BNE #CC78                                               ; 
52292 01 | CC44 A8         | TAY                                                     ; 
52293 02 | CC45 A5 12      | LDA #12                                                 ; 
52295 02 | CC47 85 59      | STA #59                                                 ; 
52297 01 | CC49 88         | DEY                                                     ; 
52298 02 | CC4A A9 0D      | LDA @#D                                                 ; 
52300 01 | CC4C C8         | INY                                                     ; 
52301 02 | CC4D D1 58      | CMP (#58),Y                                             ; 
52303 02 | CC4F D0 FB      | BNE #CC4C                                               ; 
52305 01 | CC51 C8         | INY                                                     ; 
52306 02 | CC52 B1 58      | LDA (#58),Y                                             ; 
52308 02 | CC54 30 45      | BMI #CC9B                                               ; 
52310 02 | CC56 85 02      | STA #2                                                  ; 
52312 01 | CC58 C8         | INY                                                     ; 
52313 02 | CC59 B1 58      | LDA (#58),Y                                             ; 
52315 02 | CC5B 85 01      | STA #1                                                  ; 
52317 01 | CC5D C8         | INY                                                     ; 
52318 02 | CC5E B1 58      | LDA (#58),Y                                             ; 
52320 01 | CC60 88         | DEY                                                     ; 
52321 02 | CC61 C5 57      | CMP #57                                                 ; 
52323 02 | CC63 F0 06      | BEQ #CC6B                                               ; 
52325 03 | CC65 20 A1 CE   | JSR #CEA1                                               ; 
52328 03 | CC68 4C 4A CC   | JMP #CC4A                                               ; 
                                                                                     ; 
52331 03 | CC6B 20 A2 CE   | JSR #CEA2                                               ; 
52334 02 | CC6E A5 58      | LDA #58                                                 ; 
52336 03 | CC70 9D 8D 03   | STA #38D,X                                              ; 
52339 02 | CC73 A5 59      | LDA #59                                                 ; 
52341 03 | CC75 9D 8E 03   | STA #38E,X                                              ; 
52344 01 | CC78 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
52345 03 | CC79 20 BC C8   | JSR #C8BC                                               ; 
52348 02 | CC7C A9 00      | LDA @#0                                                 ; 
52350 02 | CC7E 85 57      | STA #57                                                 ; 
52352 01 | CC80 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'INPUT'
                                                                                     ; ---------------------------
                                                                                     ; 
52353 03 | CC81 20 72 C3   | JSR #C372                                               ; 
52356 03 | CC84 20 34 C4   | JSR #C434                                               ; 
52359 02 | CC87 B0 05      | BCS #CC8E                                               ; 
52361 02 | CC89 A2 2B      | LDX @#2B                                                ; 
52363 03 | CC8B 4C 33 C2   | JMP #C233                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Numerical Variable Input
                                                                                     ; ------------------------
                                                                                     ; 
52366 03 | CC8E 20 09 CD   | JSR #CD09                                               ; 
52369 02 | CC91 A5 05      | LDA #5                                                  ; 
52371 01 | CC93 48         | PHA                                                     ; 
52372 02 | CC94 A5 06      | LDA #6                                                  ; 
52374 01 | CC96 48         | PHA                                                     ; 
52375 02 | CC97 A5 03      | LDA #3                                                  ; 
52377 01 | CC99 48         | PHA                                                     ; 
52378 02 | CC9A A0 00      | LDY @#0                                                 ; 
52380 02 | CC9C 84 03      | STY #3                                                  ; 
52382 01 | CC9E C8         | INY                                                     ; 
52383 02 | CC9F 84 06      | STY #6                                                  ; 
52385 02 | CCA1 A0 40      | LDY @#40                                                ; 
52387 02 | CCA3 84 05      | STY #5                                                  ; 
52389 03 | CCA5 20 2C CA   | JSR #CA2C                                               ; 
52392 01 | CCA8 68         | PLA                                                     ; 
52393 02 | CCA9 85 03      | STA #3                                                  ; 
52395 01 | CCAB 68         | PLA                                                     ; 
52396 02 | CCAC 85 06      | STA #6                                                  ; 
52398 01 | CCAE 68         | PLA                                                     ; 
52399 02 | CCAF 85 05      | STA #5                                                  ; 
52401 02 | CCB1 A2 2C      | LDX @#2C                                                ; 
52403 03 | CCB3 4C 33 C2   | JMP #C233                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; String Variable Input
                                                                                     ; ---------------------
                                                                                     ; 
52406 03 | CCB6 20 8B C7   | JSR #C78B                                               ; 
52409 02 | CCB9 A0 54      | LDY @#54                                                ; 
52411 03 | CCBB 20 CD C3   | JSR #C3CD                                               ; 
52414 03 | CCBE 20 09 CD   | JSR #CD09                                               ; 
52417 02 | CCC1 A2 40      | LDX @#40                                                ; 
52419 02 | CCC3 A0 00      | LDY @#0                                                 ; 
52421 03 | CCC5 BD 00 01   | LDA #100,X                                              ; 
52424 02 | CCC8 91 54      | STA (#54),Y                                             ; 
52426 02 | CCCA C9 0D      | CMP @#D                                                 ; 
52428 02 | CCCC F0 B3      | BEQ #CC81                                               ; 
52430 01 | CCCE E8         | INX                                                     ; 
52431 01 | CCCF C8         | INY                                                     ; 
52432 02 | CCD0 D0 F3      | BNE #CCC5                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'UNTIL'
                                                                                     ; ---------------------------
                                                                                     ; 
52434 03 | CCD2 20 0C C7   | JSR #C70C                                               ; 
52437 02 | CCD5 A4 13      | LDY #13                                                 ; 
52439 02 | CCD7 F0 EB      | BEQ #CCC4                                               ; 
52441 01 | CCD9 CA         | DEX                                                     ; 
52442 02 | CCDA 86 04      | STX #4                                                  ; 
52444 02 | CCDC B5 16      | LDA #16,X                                               ; 
52446 02 | CCDE F0 05      | BEQ #CCE5                                               ; 
52448 02 | CCE0 C6 13      | DEC #13                                                 ; 
52450 03 | CCE2 4C 58 C5                                                             ; 9JMP #C558
                                                                                     ; 
52453 03 | CCE5 B9 B8 02   | LDA #2B8,Y                                              ; 
52456 02 | CCE8 85 05      | STA #5                                                  ; 
52458 03 | CCEA B9 C3 02   | LDA #2C3,Y                                              ; 
52461 03 | CCED 4C FD CB   | JMP #CBFD                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'DO'
                                                                                     ; ------------------------
                                                                                     ; 
52464 02 | CCF0 A6 13      | LDX #13                                                 ; 
52466 02 | CCF2 E0 0B      | CPX @#B                                                 ; 
52468 02 | CCF4 B0 1A      | BCS #CD10                                               ; 
52470 01 | CCF6 88         | DEY                                                     ; 
52471 03 | CCF7 20 F6 C4   | JSR #C4F6                                               ; 
52474 02 | CCFA A5 05      | LDA #5                                                  ; 
52476 03 | CCFC 9D B9 02   | STA #2B9,X                                              ; 
52479 02 | CCFF A5 06      | LDA #6                                                  ; 
52481 03 | CD01 9D C4 02   | STA #2C4,X                                              ; 
52484 02 | CD04 E6 13      | INC #13                                                 ; 
52486 03 | CD06 4C 1B C3   | JMP #C31B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Input to String Input Buffer subroutine
                                                                                     ; ---------------------------------------
                                                                                     ; 
                                                                                     ; - Prints a '?' prompt and stores subsequent keypresses in the #140 string
                                                                                     ; input buffer.
                                                                                     ; - Returns when <CR> pressed with Y register pointing to the last character
                                                                                     ; entered.
                                                                                     ; - COUNT is set to zero on return.
                                                                                     ; 
52489 02 | CD09 A9 3F      | LDA @#3F                                                ; 
52491 02 | CD0B A0 40      | LDY @#40                                                ; 
52493 02 | CD0D D0 02      | BNE #CD11                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Input a Line to Direct Mode Input Buffer subroutine
                                                                                     ; ---------------------------------------------------
                                                                                     ; 
                                                                                     ; - Prints the contents of the accumulator and stores subsequent keypresses
                                                                                     ; in the #100 Direct Mode input buffer.
                                                                                     ; - Returns when <CR> pressed with Y register pointing to the last character
                                                                                     ; entered.
                                                                                     ; - COUNT is set to zero on return.
                                                                                     ; 
52495 02 | CD0F A0 00      | LDY @#0                                                 ; 
52497 03 | CD11 20 4C CA   | JSR #CA4C                                               ; 
52500 02 | CD14 84 52      | STY #52                                                 ; 
52502 02 | CD16 A4 52      | LDY #52                                                 ; 
52504 03 | CD18 20 E6 FF   | JSR #FFE6                                               ; 
52507 02 | CD1B C9 7F      | CMP @#7F                                                ; 
52509 02 | CD1D D0 07      | BNE #CD26                                               ; 
52511 01 | CD1F 88         | DEY                                                     ; 
52512 02 | CD20 C4 52      | CPY #52                                                 ; 
52514 02 | CD22 10 F4      | BPL #CD18                                               ; 
52516 02 | CD24 30 F0      | BMI #CD16                                               ; 
52518 02 | CD26 C9 18      | CMP @#18                                                ; 
52520 02 | CD28 D0 06      | BNE #CD30                                               ; 
52522 03 | CD2A 20 54 CD   | JSR #CD54                                               ; 
52525 03 | CD2D 4C 16 CD   | JMP #CD16                                               ; 
                                                                                     ; 
52528 02 | CD30 C9 1B      | CMP @#1B                                                ; 
52530 02 | CD32 D0 03      | BNE #CD37                                               ; 
52532 03 | CD34 4C CF C2   | JMP #C2CF                                               ; 
                                                                                     ; 
52535 03 | CD37 99 00 01   | STA #100,Y                                              ; 
52538 02 | CD3A C9 0D      | CMP @#D                                                 ; 
52540 02 | CD3C F0 19      | BEQ #CD57                                               ; 
52542 01 | CD3E C8         | INY                                                     ; 
52543 01 | CD3F 98         | TYA                                                     ; 
52544 01 | CD40 38         | SEC                                                     ; 
52545 02 | CD41 E5 52      | SBC #52                                                 ; 
52547 02 | CD43 C9 40      | CMP @#40                                                ; 
52549 02 | CD45 90 D1      | BCC #CD18                                               ; 
52551 03 | CD47 20 E3 FF   | JSR #FFE3                                               ; 
52554 02 | CD4A C9 7F      | CMP @#7F                                                ; 
52556 02 | CD4C D0 F9      | BNE #CD47                                               ; 
52558 03 | CD4E 20 F4 FF   | JSR #FFF4                                               ; 
52561 03 | CD51 4C 1F CD   | JMP #CD1F                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print a <CR><LF> subroutine
                                                                                     ; ---------------------------
                                                                                     ; 
                                                                                     ; - Sends a <CR><LF> to WRCHAR, and resets COUNT at ?7 to zero.
                                                                                     ; - Destroys accumulator.
                                                                                     ; 
52564 03 | CD54 20 ED FF   | JSR #FFED                                               ; 
52567 02 | CD57 A9 00      | LDA @#0                                                 ; 
52569 02 | CD59 85 07      | STA #7                                                  ; 
52571 01 | CD5B 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Assign '$' String Variable
                                                                                     ; --------------------------
                                                                                     ; 
52572 03 | CD5C 20 8B C7   | JSR #C78B                                               ; 
52575 03 | CD5F 20 AE CE   | JSR #CEAE                                               ; 
52578 02 | CD62 A0 54      | LDY @#54                                                ; 
52580 03 | CD64 20 CD C3   | JSR #C3CD                                               ; 
52583 02 | CD67 A0 FF      | LDY @#FF                                                ; 
52585 01 | CD69 C8         | INY                                                     ; 
52586 02 | CD6A B1 52      | LDA (#52),Y                                             ; 
52588 02 | CD6C 91 54      | STA (#54),Y                                             ; 
52590 02 | CD6E C9 0D      | CMP @#D                                                 ; 
52592 02 | CD70 D0 F7      | BNE #CD69                                               ; 
52594 03 | CD72 4C 58 C5   | JMP #C558                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Assign !<variable>
                                                                                     ; ------------------
                                                                                     ; 
52597 03 | CD75 20 81 CD   | JSR #CD81                                               ; 
52600 03 | CD78 4C F1 C3   | JMP #C3F1                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Assign ?<variable>
                                                                                     ; ------------------
                                                                                     ; 
52603 03 | CD7B 20 81 CD   | JSR #CD81                                               ; 
52606 03 | CD7E 4C 09 C4   | JMP #C409                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Assignment subroutine
                                                                                     ; ---------------------
                                                                                     ; 
52609 03 | CD81 20 E1 C8   | JSR #C8E1                                               ; 
52612 03 | CD84 20 BC C8   | JSR #C8BC                                               ; 
52615 01 | CD87 CA         | DEX                                                     ; 
52616 01 | CD88 18         | CLC                                                     ; 
52617 02 | CD89 B5 16      | LDA #16,X                                               ; 
52619 02 | CD8B 75 15      | ADC #15,X                                               ; 
52621 02 | CD8D 95 15      | STA #15,X                                               ; 
52623 02 | CD8F B5 25      | LDA #25,X                                               ; 
52625 02 | CD91 75 24      | ADC #24,X                                               ; 
52627 02 | CD93 95 24      | STA #24,X                                               ; 
52629 02 | CD95 86 04      | STX #4                                                  ; 
52631 01 | CD97 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'END'
                                                                                     ; -------------------------
                                                                                     ; 
                                                                                     ; - Finds the end of the current text space, starting at page ?#12, and
                                                                                     ; sets the TOP vector #D, #E.
                                                                                     ; - Exits to Direct Mode.
                                                                                     ; 
52632 03 | CD98 20 E4 C4   | JSR #C4E4                                               ; 
52635 02 | CD9B A5 12      | LDA #12                                                 ; 
52637 02 | CD9D 85 0E      | STA #E                                                  ; 
52639 02 | CD9F A0 00      | LDY @#0                                                 ; 
52641 02 | CDA1 84 0D      | STY #D                                                  ; 
52643 01 | CDA3 88         | DEY                                                     ; 
52644 01 | CDA4 C8         | INY                                                     ; 
52645 02 | CDA5 B1 0D      | LDA (#D),Y                                              ; 
52647 02 | CDA7 C9 0D      | CMP @#D                                                 ; 
52649 02 | CDA9 D0 F9      | BNE #CDA4                                               ; 
52651 03 | CDAB 20 BC CD   | JSR #CDBC                                               ; 
52654 02 | CDAE B1 0D      | LDA (#D),Y                                              ; 
52656 02 | CDB0 30 03      | BMI #CDB5                                               ; 
52658 01 | CDB2 C8         | INY                                                     ; 
52659 02 | CDB3 D0 EF      | BNE #CDA4                                               ; 
52661 01 | CDB5 C8         | INY                                                     ; 
52662 03 | CDB6 20 BC CD   | JSR #CDBC                                               ; 
52665 03 | CDB9 4C CF C2   | JMP #C2CF                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; END subroutine
                                                                                     ; --------------
                                                                                     ; 
                                                                                     ; - Sets TOP=TOP+Y and Y=1.
                                                                                     ; 
52668 01 | CDBC 18         | CLC                                                     ; 
52669 01 | CDBD 98         | TYA                                                     ; 
52670 02 | CDBE 65 0D      | ADC #D                                                  ; 
52672 02 | CDC0 85 0D      | STA #D                                                  ; 
52674 02 | CDC2 90 02      | BCC #CDC6                                               ; 
52676 02 | CDC4 E6 0E      | INC #E                                                  ; 
52678 02 | CDC6 A0 01      | LDY @#1                                                 ; 
52680 01 | CDC8 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Text Line Insertion and Removal
                                                                                     ; -------------------------------
                                                                                     ; 
                                                                                     ; - On entry #16, #17 contain the line number to be entered.
                                                                                     ; 
52681 02 | CDC9 84 56      | STY #56                                                 ; 
52683 03 | CDCB 20 2E C6   | JSR #C62E                                               ; 
52686 02 | CDCE B0 48      | BCS #CE18                                               ; 
52688 02 | CDD0 A5 58      | LDA #58                                                 ; 
52690 02 | CDD2 85 52      | STA #52                                                 ; 
52692 02 | CDD4 E9 01      | SBC @#1                                                 ; 
52694 02 | CDD6 85 58      | STA #58                                                 ; 
52696 02 | CDD8 85 0D      | STA #D                                                  ; 
52698 02 | CDDA A5 59      | LDA #59                                                 ; 
52700 02 | CDDC 85 53      | STA #53                                                 ; 
52702 02 | CDDE E9 00      | SBC @#0                                                 ; 
52704 02 | CDE0 85 0E      | STA #E                                                  ; 
52706 02 | CDE2 85 59      | STA #59                                                 ; 
52708 02 | CDE4 A9 0D      | LDA @#D                                                 ; 
52710 01 | CDE6 C8         | INY                                                     ; 
52711 02 | CDE7 D1 52      | CMP (#52),Y                                             ; 
52713 02 | CDE9 D0 FB      | BNE #CDE6                                               ; 
52715 01 | CDEB 18         | CLC                                                     ; 
52716 01 | CDEC 98         | TYA                                                     ; 
52717 02 | CDED 65 52      | ADC #52                                                 ; 
52719 02 | CDEF 85 52      | STA #52                                                 ; 
52721 02 | CDF1 90 02      | BCC #CDF5                                               ; 
52723 02 | CDF3 E6 53      | INC #53                                                 ; 
52725 02 | CDF5 A0 00      | LDY @#0                                                 ; 
52727 02 | CDF7 B1 52      | LDA (#52),Y                                             ; 
52729 02 | CDF9 91 0D      | STA (#D),Y                                              ; 
52731 02 | CDFB C9 0D      | CMP @#D                                                 ; 
52733 02 | CDFD F0 09      | BEQ #CE08                                               ; 
52735 01 | CDFF C8         | INY                                                     ; 
52736 02 | CE00 D0 F5      | BNE #CDF7                                               ; 
52738 02 | CE02 E6 53      | INC #53                                                 ; 
52740 02 | CE04 E6 0E      | INC #E                                                  ; 
52742 02 | CE06 D0 EF      | BNE #CDF7                                               ; 
52744 01 | CE08 C8         | INY                                                     ; 
52745 02 | CE09 D0 04      | BNE #CE0F                                               ; 
52747 02 | CE0B E6 53      | INC #53                                                 ; 
52749 02 | CE0D E6 0E      | INC #E                                                  ; 
52751 02 | CE0F B1 52      | LDA (#52),Y                                             ; 
52753 02 | CE11 91 0D      | STA (#D),Y                                              ; 
52755 02 | CE13 10 EA      | BPL #CDFF                                               ; 
52757 03 | CE15 20 BD CD   | JSR #CDBD                                               ; 
52760 02 | CE18 A0 01      | LDY @#1                                                 ; 
52762 02 | CE1A 84 57      | STY #57                                                 ; 
52764 01 | CE1C 88         | DEY                                                     ; 
52765 02 | CE1D A9 0D      | LDA @#D                                                 ; 
52767 02 | CE1F D1 56      | CMP (#56),Y                                             ; 
52769 02 | CE21 F0 5D      | BEQ #CE80                                               ; 
52771 01 | CE23 C8         | INY                                                     ; 
52772 02 | CE24 D1 56      | CMP (#56),Y                                             ; 
52774 02 | CE26 D0 FB      | BNE #CE23                                               ; 
52776 01 | CE28 C8         | INY                                                     ; 
52777 01 | CE29 C8         | INY                                                     ; 
52778 02 | CE2A A5 0D      | LDA #D                                                  ; 
52780 02 | CE2C 85 54      | STA #54                                                 ; 
52782 02 | CE2E A5 0E      | LDA #E                                                  ; 
52784 02 | CE30 85 55      | STA #55                                                 ; 
52786 03 | CE32 20 BD CD   | JSR #CDBD                                               ; 
52789 02 | CE35 85 52      | STA #52                                                 ; 
52791 02 | CE37 A5 0E      | LDA #E                                                  ; 
52793 02 | CE39 85 53      | STA #53                                                 ; 
52795 01 | CE3B 88         | DEY                                                     ; 
52796 02 | CE3C A9 55      | LDA @#55                                                ; 
52798 02 | CE3E 91 0D      | STA (#D),Y                                              ; 
52800 02 | CE40 D1 0D      | CMP (#D),Y                                              ; 
52802 02 | CE42 D0 B2      | BNE #CDF6                                               ; 
52804 01 | CE44 0A         | ASL A                                                   ; 
52805 02 | CE45 91 0D      | STA (#D),Y                                              ; 
52807 02 | CE47 D1 0D      | CMP (#D),Y                                              ; 
52809 02 | CE49 D0 AB      | BNE #CDF6                                               ; 
52811 02 | CE4B B1 54      | LDA (#54),Y                                             ; 
52813 02 | CE4D 91 52      | STA (#52),Y                                             ; 
52815 01 | CE4F 98         | TYA                                                     ; 
52816 02 | CE50 D0 04      | BNE #CE56                                               ; 
52818 02 | CE52 C6 55      | DEC #55                                                 ; 
52820 02 | CE54 C6 53      | DEC #53                                                 ; 
52822 01 | CE56 88         | DEY                                                     ; 
52823 01 | CE57 98         | TYA                                                     ; 
52824 02 | CE58 65 54      | ADC #54                                                 ; 
52826 02 | CE5A A6 55      | LDX #55                                                 ; 
52828 02 | CE5C 90 01      | BCC #CE5F                                               ; 
52830 01 | CE5E E8         | INX                                                     ; 
52831 02 | CE5F C5 58      | CMP #58                                                 ; 
52833 01 | CE61 8A         | TXA                                                     ; 
52834 02 | CE62 E5 59      | SBC #59                                                 ; 
52836 02 | CE64 B0 E5      | BCS #CE4B                                               ; 
52838 02 | CE66 A0 01      | LDY @#1                                                 ; 
52840 02 | CE68 A5 25      | LDA #25                                                 ; 
52842 02 | CE6A 91 58      | STA (#58),Y                                             ; 
52844 01 | CE6C C8         | INY                                                     ; 
52845 02 | CE6D A5 16      | LDA #16                                                 ; 
52847 02 | CE6F 91 58      | STA (#58),Y                                             ; 
52849 01 | CE71 38         | SEC                                                     ; 
52850 03 | CE72 20 A2 CE   | JSR #CEA2                                               ; 
52853 02 | CE75 A0 FF      | LDY @#FF                                                ; 
52855 01 | CE77 C8         | INY                                                     ; 
52856 02 | CE78 B1 56      | LDA (#56),Y                                             ; 
52858 02 | CE7A 91 58      | STA (#58),Y                                             ; 
52860 02 | CE7C C9 0D      | CMP @#D                                                 ; 
52862 02 | CE7E D0 F7      | BNE #CE77                                               ; 
52864 03 | CE80 4C CF C2   | JMP #C2CF                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Continuation of Execution of the Command 'RUN'
                                                                                     ; ----------------------------------------------
                                                                                     ; 
                                                                                     ; - Continuation from #F141.
                                                                                     ; - Sets the Text Pointer at ?5,?6 to the start of text, and then jumps to
                                                                                     ; the interpreter.
                                                                                     ; 
52867 03 | CE83 20 E4 C4   | JSR #C4E4                                               ; 
52870 02 | CE86 A0 00      | LDY @#0                                                 ; 
52872 02 | CE88 84 05      | STY #5                                                  ; 
52874 02 | CE8A 84 03      | STY #3                                                  ; 
52876 02 | CE8C A5 12      | LDA #12                                                 ; 
52878 02 | CE8E 85 06      | STA #6                                                  ; 
52880 03 | CE90 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; !<factor> and ?<factor> subroutine
                                                                                     ; ----------------------------------
                                                                                     ; 
52883 03 | CE93 20 DE C4   | JSR #C4DE                                               ; 
52886 01 | CE96 CA         | DEX                                                     ; 
52887 03 | CE97 20 CB C3   | JSR #C3CB                                               ; 
52890 02 | CE9A A0 00      | LDY @#0                                                 ; 
52892 02 | CE9C B5 17      | LDA #17,X                                               ; 
52894 02 | CE9E 91 52      | STA (#52),Y                                             ; 
52896 01 | CEA0 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Update #58, #59 Pointer subroutine
                                                                                     ; ----------------------------------
                                                                                     ; 
                                                                                     ; - Sets (#58)=(#58)+Y and Y=1, ?3=1.
                                                                                     ; - Checks the <ESC> key before return.
                                                                                     ; - Destroys accumulator.
                                                                                     ; 
52897 01 | CEA1 18         | CLC                                                     ; 
52898 01 | CEA2 98         | TYA                                                     ; 
52899 02 | CEA3 65 58      | ADC #58                                                 ; 
52901 02 | CEA5 85 58      | STA #58                                                 ; 
52903 02 | CEA7 90 02      | BCC #CEAB                                               ; 
52905 02 | CEA9 E6 59      | INC #59                                                 ; 
52907 03 | CEAB 4C 00 C5   | JMP #C500                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Set up String Ready for Assignment
                                                                                     ; ----------------------------------
                                                                                     ; 
52910 03 | CEAE 20 79 C2   | JSR #C279                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Check for Valid String subroutine
                                                                                     ; ---------------------------------
                                                                                     ; 
                                                                                     ; - Checks for '$' or '"' at the location pointed to by (5),Y where y=?3.
                                                                                     ; - If successful, returns with (5),?3 pointimg to the character following,
                                                                                     ; otherwise executes BRK.
                                                                                     ; 
52913 02 | CEB1 A2 26      | LDX @#26                                                ; 
52915 03 | CEB3 4C 33 C2   | JMP #C233                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Set up $ String Ready for Asssignment
                                                                                     ; -------------------------------------
                                                                                     ; 
52918 03 | CEB6 20 8B C7   | JSR #C78B                                               ; 
52921 03 | CEB9 20 CB C3   | JSR #C3CB                                               ; 
52924 02 | CEBC A4 03      | LDY #3                                                  ; 
52926 01 | CEBE 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Set up "string" Ready for Asssignment
                                                                                     ; -------------------------------------
                                                                                     ; 
52927 03 | CEBF 20 F6 C4   | JSR #C4F6                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Copy Quoted String to String Input Buffer subroutine
                                                                                     ; ----------------------------------------------------
                                                                                     ; 
                                                                                     ; - Copies a string in quotes pointed to by (5),Y to the string input buffer
                                                                                     ; at #140.
                                                                                     ; - Quotation marks are removed.
                                                                                     ; 
52930 02 | CEC2 84 53      | STY #53                                                 ; 
52932 01 | CEC4 88         | DEY                                                     ; 
52933 02 | CEC5 A2 00      | LDX @#0                                                 ; 
52935 02 | CEC7 B1 05      | LDA (#5),Y                                              ; 
52937 02 | CEC9 C9 0D      | CMP @#D                                                 ; 
52939 02 | CECB F0 F9      | BEQ #CEC6                                               ; 
52941 03 | CECD 9D 40 01   | STA #140,X                                              ; 
52944 01 | CED0 E8         | INX                                                     ; 
52945 01 | CED1 C8         | INY                                                     ; 
52946 02 | CED2 C9 22      | CMP @#22                                                ; 
52948 02 | CED4 D0 F1      | BNE #CEC7                                               ; 
52950 02 | CED6 B1 05      | LDA (#5),Y                                              ; 
52952 02 | CED8 C9 22      | CMP @#22                                                ; 
52954 02 | CEDA F0 0E      | BEQ #CEEA                                               ; 
52956 02 | CEDC A9 0D      | LDA @#D                                                 ; 
52958 03 | CEDE 9D 3F 01   | STA #13F,X                                              ; 
52961 02 | CEE1 84 03      | STY #3                                                  ; 
52963 02 | CEE3 A9 40      | LDA @#40                                                ; 
52965 02 | CEE5 85 52      | STA #52                                                 ; 
52967 02 | CEE7 A6 04      | LDX #4                                                  ; 
52969 01 | CEE9 60         | RTS                                                     ; 
                                                                                     ; 
52970 01 | CEEA C8         | INY                                                     ; 
52971 02 | CEEB B0 DA      | BCS #CEC7                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 'LOAD' File
                                                                                     ; -----------
                                                                                     ; 
52973 03 | CEED 20 FA CE   | JSR #CEFA                                               ; 
52976 01 | CEF0 88         | DEY                                                     ; 
52977 02 | CEF1 84 56      | STY #56                                                 ; 
52979 01 | CEF3 38         | SEC                                                     ; 
52980 03 | CEF4 20 E0 FF   | JSR #FFE0                                               ; 
52983 03 | CEF7 4C 9B CD   | JMP #CD9B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Load and Save Setup subroutine
                                                                                     ; ------------------------------
                                                                                     ; 
                                                                                     ; - Reads the file title into the String Input buffer at #140, and sets
                                                                                     ; the vector #54, #55 to the start of text.
                                                                                     ; 
52986 03 | CEFA 20 B1 CE   | JSR #CEB1                                               ; 
52989 03 | CEFD 20 E4 C4   | JSR #C4E4                                               ; 
52992 01 | CF00 88         | DEY                                                     ; 
52993 02 | CF01 84 54      | STY #54                                                 ; 
52995 02 | CF03 A5 12      | LDA #12                                                 ; 
52997 02 | CF05 85 55      | STA #55                                                 ; 
52999 02 | CF07 A2 52      | LDX @#52                                                ; 
53001 01 | CF09 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'SAVE'
                                                                                     ; --------------------------
                                                                                     ; 
53002 03 | CF0A 20 FA CE   | JSR #CEFA                                               ; 
53005 02 | CF0D 84 58      | STY #58                                                 ; 
53007 02 | CF0F 85 59      | STA #59                                                 ; 
53009 02 | CF11 A5 0D      | LDA #D                                                  ; 
53011 02 | CF13 85 5A      | STA #5A                                                 ; 
53013 02 | CF15 A5 0E      | LDA #E                                                  ; 
53015 02 | CF17 85 5B      | STA #5B                                                 ; 
53017 02 | CF19 A9 B2      | LDA @#B2                                                ; 
53019 02 | CF1B 85 56      | STA #56                                                 ; 
53021 02 | CF1D A9 C2      | LDA @#C2                                                ; 
53023 02 | CF1F 85 57      | STA #57                                                 ; 
53025 01 | CF21 18         | CLC                                                     ; 
53026 03 | CF22 20 DD FF   | JSR #FFDD                                               ; 
53029 03 | CF25 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
53032 01 | CF28 38         | SEC                                                     ; 
53033 02 | CF29 A9 00      | LDA @#0                                                 ; 
53035 01 | CF2B 2A         | ROL A                                                   ; 
53036 01 | CF2C 48         | PHA                                                     ; 
53037 03 | CF2D 20 3E CF   | JSR #CF3E                                               ; 
53040 02 | CF30 A2 52      | LDX @#52                                                ; 
53042 01 | CF32 68         | PLA                                                     ; 
53043 03 | CF33 20 DA FF   | JSR #FFDA                                               ; 
53046 02 | CF36 A0 52      | LDY @#52                                                ; 
53048 03 | CF38 20 9F C9   | JSR #C99F                                               ; 
53051 02 | CF3B 95 42      | STA #42,X                                               ; 
53053 01 | CF3D 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Get <factor> into Y Register subroutine
                                                                                     ; ---------------------------------------
                                                                                     ; 
53054 03 | CF3E 20 BC C8   | JSR #C8BC                                               ; 
53057 02 | CF41 B4 15      | LDY #15,X                                               ; 
53059 01 | CF43 CA         | DEX                                                     ; 
53060 02 | CF44 86 04      | STX #4                                                  ; 
53062 01 | CF46 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
53063 03 | CF47 20 BC C8   | JSR #C8BC                                               ; 
53066 03 | CF4A 20 DE C4   | JSR #C4DE                                               ; 
53069 03 | CF4D 20 CB C3   | JSR #C3CB                                               ; 
53072 03 | CF50 20 41 CF   | JSR #CF41                                               ; 
53075 02 | CF53 A2 52      | LDX @#52                                                ; 
53077 03 | CF55 20 D7 FF   | JSR #FFD7                                               ; 
53080 03 | CF58 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute 'BGET' subroutine
                                                                                     ; -------------------------
                                                                                     ; 
                                                                                     ; - Reads 1 byte from OSBGET into the workspace stack and sets the other
                                                                                     ; 3 bytes to zero.
                                                                                     ; 
53083 03 | CF5B 20 3E CF   | JSR #CF3E                                               ; 
53086 02 | CF5E 84 52      | STY #52                                                 ; 
53088 03 | CF60 20 D4 FF   | JSR #FFD4                                               ; 
53091 03 | CF63 4C 7C C9   | JMP #C97C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute 'GET' subroutine
                                                                                     ; ------------------------
                                                                                     ; 
                                                                                     ; - Reads 4 bytes from OSBGET into the workspace stack.
                                                                                     ; 
53094 03 | CF66 20 5B CF   | JSR #CF5B                                               ; 
53097 02 | CF69 A4 52      | LDY #52                                                 ; 
53099 03 | CF6B 20 D4 FF   | JSR #FFD4                                               ; 
53102 02 | CF6E 95 24      | STA #24,X                                               ; 
53104 03 | CF70 20 D4 FF   | JSR #FFD4                                               ; 
53107 02 | CF73 95 33      | STA #33,X                                               ; 
53109 03 | CF75 20 D4 FF   | JSR #FFD4                                               ; 
53112 02 | CF78 95 42      | STA #42,X                                               ; 
53114 01 | CF7A 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
53115 03 | CF7B 20 BC C8   | JSR #C8BC                                               ; 
53118 03 | CF7E 20 31 C2   | JSR #C231                                               ; 
53121 03 | CF81 20 E1 C4   | JSR #C4E1                                               ; 
53124 03 | CF84 20 CB C3   | JSR #C3CB                                               ; 
53127 03 | CF87 20 41 CF   | JSR #CF41                                               ; 
53130 02 | CF8A A5 52      | LDA #52                                                 ; 
53132 03 | CF8C 6C 16 02   | JMP (#216)                                              ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'BPUT'
                                                                                     ; --------------------------
                                                                                     ; 
53135 03 | CF8F 20 7B CF   | JSR #CF7B                                               ; 
53138 03 | CF92 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute 'PUT' subroutine
                                                                                     ; ------------------------
                                                                                     ; 
53141 03 | CF95 20 7B CF   | JSR #CF7B                                               ; 
53144 02 | CF98 A2 01      | LDX @#1                                                 ; 
53146 02 | CF9A B5 52      | LDA #52,X                                               ; 
53148 03 | CF9C 20 D1 FF   | JSR #FFD1                                               ; 
53151 01 | CF9F E8         | INX                                                     ; 
53152 02 | CFA0 E0 04      | CPX @#4                                                 ; 
53154 02 | CFA2 90 F6      | BCC #CF9A                                               ; 
53156 02 | CFA4 B0 EC      | BCS #CF92                                               ; 
53158 01 | CFA6 38         | SEC                                                     ; 
53159 01 | CFA7 08         | PHP                                                     ; 
53160 03 | CFA8 20 B1 CE   | JSR #CEB1                                               ; 
53163 02 | CFAB A2 52      | LDX @#52                                                ; 
53165 01 | CFAD 28         | PLP                                                     ; 
53166 03 | CFAE 20 CE FF   | JSR #FFCE                                               ; 
53169 02 | CFB1 A6 04      | LDX #4                                                  ; 
53171 03 | CFB3 4C 7C C9   | JMP #C97C                                               ; 
                                                                                     ; 
                                                                                     ; 
53174 03 | CFB6 20 BC C8   | JSR #C8BC                                               ; 
53177 03 | CFB9 20 E4 C4   | JSR #C4E4                                               ; 
53180 03 | CFBC 20 41 CF   | JSR #CF41                                               ; 
53183 03 | CFBF 20 CB FF   | JSR #FFCB                                               ; 
53186 03 | CFC2 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'SPUT'
                                                                                     ; --------------------------
                                                                                     ; 
53189 03 | CFC5 20 2C C2   | JSR #C22C                                               ; 
53192 03 | CFC8 20 B1 CE   | JSR #CEB1                                               ; 
53195 03 | CFCB 20 E4 C4   | JSR #C4E4                                               ; 
53198 01 | CFCE 88         | DEY                                                     ; 
53199 02 | CFCF B1 52      | LDA (#52),Y                                             ; 
53201 02 | CFD1 84 55      | STY #55                                                 ; 
53203 02 | CFD3 A4 0F      | LDY #F                                                  ; 
53205 01 | CFD5 48         | PHA                                                     ; 
53206 03 | CFD6 20 D1 FF   | JSR #FFD1                                               ; 
53209 01 | CFD9 68         | PLA                                                     ; 
53210 02 | CFDA C9 0D      | CMP @#D                                                 ; 
53212 02 | CFDC F0 E4      | BEQ #CFC2                                               ; 
53214 02 | CFDE A4 55      | LDY #55                                                 ; 
53216 01 | CFE0 C8         | INY                                                     ; 
53217 02 | CFE1 D0 EC      | BNE #CFCF                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'SGET'
                                                                                     ; --------------------------
                                                                                     ; 
53219 03 | CFE3 20 2C C2   | JSR #C22C                                               ; 
53222 03 | CFE6 20 E1 C4   | JSR #C4E1                                               ; 
53225 03 | CFE9 20 CB C3   | JSR #C3CB                                               ; 
53228 02 | CFEC A0 00      | LDY @#0                                                 ; 
53230 02 | CFEE 84 55      | STY #55                                                 ; 
53232 02 | CFF0 A4 0F      | LDY #F                                                  ; 
53234 03 | CFF2 20 D4 FF   | JSR #FFD4                                               ; 
53237 02 | CFF5 A4 55      | LDY #55                                                 ; 
53239 02 | CFF7 91 52      | STA (#52),Y                                             ; 
53241 01 | CFF9 C8         | INY                                                     ; 
53242 02 | CFFA C9 0D      | CMP @#D                                                 ; 
53244 02 | CFFC D0 F0      | BNE #CFEE                                               ; 
53246 02 | CFFE F0 C2      | BEQ #CFC2                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; *************************************
                                                                                     ; * Disassembly of Atom Extension ROM *
                                                                                     ; *         from #D000 to #DFFF       *
                                                                                     ; *************************************
                                                                                     ; 
                                                                                     ; Version 1.0
                                                                                     ; 22:11:85
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Subroutines...
                                                                                     ; **************
                                                                                     ; 
                                                                                     ; D236 Something to do with 'ASN' subroutine
                                                                                     ; D303 Get to next non-space character subroutine
                                                                                     ; D49A ??? subroutine
                                                                                     ; D4C3 ??? subroutine
                                                                                     ; D4D0 ??? subroutine
                                                                                     ; D587 ??? subroutine
                                                                                     ; D594 ??? subroutine
                                                                                     ; D636 ??? subroutine
                                                                                     ; D642 ??? subroutine
                                                                                     ; D64E ??? subroutine
                                                                                     ; D67B ??? subroutine
                                                                                     ; D686 ??? subroutine
                                                                                     ; D6A0 ??? subroutine
                                                                                     ; D6C3 Copy the 8 bytes #57..#5E to #5F..66 subroutine
                                                                                     ; D6CD Shift Left 1 Bit #5E..#5A subroutine
                                                                                     ; D6D8 Shift Right 1 Bit #5A..#5E subroutine
                                                                                     ; D6E3 Copy #5A..#5D to #5B..#5E and clear #5A subroutine
                                                                                     ; D706 Copy #62..#65 to #63..#66 and clear #62 subroutine
                                                                                     ; D71B ??? subroutine
                                                                                     ; D778 ??? subroutine
                                                                                     ; D7B2 ??? subroutine
                                                                                     ; D804 ??? subroutine
                                                                                     ; D827 ??? subroutine
                                                                                     ; D85D ??? subroutine
                                                                                     ; D870 ??? subroutine
                                                                                     ; D880 ??? subroutine
                                                                                     ; D892 ??? subroutine
                                                                                     ; D8BB ??? subroutine
                                                                                     ; D8D1 ??? subroutine
                                                                                     ; D8E2 ??? subroutine
                                                                                     ; D913 ??? subroutine
                                                                                     ; D923 ??? subroutine
                                                                                     ; DAAE ??? subroutine
                                                                                     ; DB9E ??? subroutine
                                                                                     ; DBB3 ??? subroutine
                                                                                     ; DC27 ??? subroutine
                                                                                     ; DD86 ??? subroutine
                                                                                     ; DD8A ??? subroutine
                                                                                     ; DD93 ??? subroutine
                                                                                     ; DE51 ??? subroutine
                                                                                     ; DE83 Something to do with 'HTN' subroutine
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Other routines...
                                                                                     ; *****************
                                                                                     ; 
                                                                                     ; D000 Extension ROM Existence Check Bytes
                                                                                     ; D002 Extension Interpreter Jump Vector
                                                                                     ; D004 Extension Interpreter Jump Vector
                                                                                     ; D006 Extension Command Table and Jump Addresses
                                                                                     ; D0E4 Deal with '('
                                                                                     ; D0EB Deal with '+' and '-'
                                                                                     ; D0F2 Deal with '*' and '/'
                                                                                     ; D0FC Deal with '+' and '-'
                                                                                     ; D103 Deal with '^'
                                                                                     ; D10E Floating Point interpreter
                                                                                     ; D15E Floating Point interpreter
                                                                                     ; D177 Deals with '+'
                                                                                     ; D183 Deals with '-'
                                                                                     ; D18F Deals with '*'
                                                                                     ; D19B Deals with '/'
                                                                                     ; D1A7 Deals with '^'
                                                                                     ; D1BC Deals with '-'
                                                                                     ; D1CB Deals with '+'
                                                                                     ; D215 Execute the Command 'ABS'
                                                                                     ; D21E Execute the Command 'ACS'
                                                                                     ; D224 Execute the Command 'ASN'
                                                                                     ; D265 Execute the Command 'RAD'
                                                                                     ; D273 Execute the Command 'DEG'
                                                                                     ; D27C ??? Table
                                                                                     ; D286 Execute the Command 'TAN'
                                                                                     ; D296 ???
                                                                                     ; D29A Execute the Command 'FLT'
                                                                                     ; D2C3 Execute the Command 'PI'
                                                                                     ; D2CC Execute the Command 'FGET'
                                                                                     ; D2E0 Execute the Command 'VAL'
                                                                                     ; D30B Execute the Command '%'
                                                                                     ; D31F Execute the Command 'STR'
                                                                                     ; D331 Execute the Command 'FPRINT'
                                                                                     ; D339 ???
                                                                                     ; D36A Execute the Command 'FINPUT'
                                                                                     ; D3A8 Execute the Command 'FIF'
                                                                                     ; D3AE Execute the Command 'FUNTIL'
                                                                                     ; D3B4 Execute the Command 'FPUT'
                                                                                     ; D3D3 Execute the Command 'FDIM'
                                                                                     ; D444 ???
                                                                                     ; D494 ???
                                                                                     ; D4AF Pass Control to Utility Interpreter, if it Exists
                                                                                     ; D933 ???
                                                                                     ; D939 ???
                                                                                     ; D9EB ???
                                                                                     ; D9F6 Execute the conditional test '='
                                                                                     ; D9FA Execute the conditional test '<='
                                                                                     ; D9FE Execute the conditional test '<>'
                                                                                     ; DA02 Execute the conditional test '<'
                                                                                     ; DA06 Execute the conditional test '>='
                                                                                     ; DA0A Execute the conditional test '>'
                                                                                     ; DAC4 Execute the command 'TAN'
                                                                                     ; DB6F Execute the command 'SQR'
                                                                                     ; DBF9 ??? Table
                                                                                     ; DC64 Execute the command 'ATN'
                                                                                     ; DCB0 ??? Table
                                                                                     ; DCE3 Execute the command 'COS'
                                                                                     ; DCEE Execute the command 'SIN'
                                                                                     ; DD24 ???
                                                                                     ; DD97 ??? Table
                                                                                     ; DDD4 Execute the command 'EXP'
                                                                                     ; DE23 ??? Table
                                                                                     ; DE72 Execute the command 'HTN'
                                                                                     ; DED4 ??? Table
                                                                                     ; DF02 Execute the command 'COLOUR'
                                                                                     ; DF42 Colour Point Plot routine LSB Address Table
                                                                                     ; DF46 Colour Point Plot routine MSB Address Table
                                                                                     ; DF4A ??? Data Table
                                                                                     ; DF4E Colour Byte Table
                                                                                     ; DF52 Mode 1 Colour Point Plot routine
                                                                                     ; DF70 Mode 2 Colour Point Plot routine
                                                                                     ; DF88 Mode 3 Colour Point Plot routine
                                                                                     ; DFA0 Mode 4 Colour Point Plot routine
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Extension ROM Existence Check Bytes
                                                                                     ; -----------------------------------
                                                                                     ; 
53248 02 | D000 AA 55                                                                ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Extension Interpreter Jump Vector
                                                                                     ; ---------------------------------
                                                                                     ; 
                                                                                     ; - Used by #C54A routine.
                                                                                     ; 
53250 02 | D002 0E D1                                                                ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Extension Interpreter Jump Vector
                                                                                     ; ---------------------------------
                                                                                     ; 
                                                                                     ; - Used by #CA24 routine.
                                                                                     ; 
53252 02 | D004 5E D1                                                                ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Extension Command Table and Jump Addresses
                                                                                     ; ------------------------------------------
                                                                                     ; 
53254 10 | D006 28 D0 E4 41 43 53 D2 1E 41 53                                        ; (..ACS..AS
53264 16 | D010 4E D2 24 41 54 4E DC 64 41 42 53 D2 15 43 4F 53                      ; N..ATN..ABS..COS
53280 16 | D020 DC E3 45 58 50 DD D4 48 54 4E DE 72 4C 4F 47 DB                      ; ..EXP..HTN..LOG.
53296 16 | D030 B3 50 49 D2 C3 53 49 4E DC EE 53 51 52 DB 6F 54                      ; .PI..SIN..SQR..T
53312 16 | D040 41 4E DA C4 44 45 47 D2 73 52 41 44 D2 65 53 47                      ; AN..DEG..RAD..SG
53328 16 | D050 4E D2 86 56 41 4C D2 E0 46 4C 54 D2 9A 46 47 45                      ; N..VAL..FLT..FGE
53344 16 | D060 54 D2 CC D2 96 25 D3 0B 46 49 46 D3 A8 46 55 4E                      ; T....%..FIF..FUN
53360 16 | D070 54 49 4C D3 AE 43 4F 4C 4F 55 52 DF 02 46 44 49                      ; TIL..COLOUR..FDI
53376 16 | D080 4D D3 D3 53 54 52 D3 1F 46 50 52 49 4E 54 D3 31                      ; M..STR..FPRINT..
53392 16 | D090 46 49 4E 50 55 54 D3 6A 46 50 55 54 D3 B4 D4 AF                      ; FINPUT..FPUT....
53408 16 | D0A0 2B D1 77 2D D1 83 FE 2A D1 8F 2F D1 9B FE 5E D1                      ; +.w-...*../...^.
53424 16 | D0B0 A7 FE 2B D1 CB 2D D1 BC D1 CB 29 C2 78 FF 3B C5                      ; ..+..-....).x.;.
53440 16 | D0C0 4A 0D C5 4A 2C D3 31 D3 39 2C D3 6A C5 58 3D D9                      ; J..J,.1.9,.j.X=.
53456 16 | D0D0 F6 3C 3E D9 FE 3C 3D D9 FA 3C DA 02 3E 3D DA 06                      ; .<>..<=..<..>=..
53472 04 | D0E0 3E DA 0A FF                                                          ; >...
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with '('
                                                                                     ; -------------
                                                                                     ; 
53476 03 | D0E4 20 FC D0   | JSR #D0FC                                               ; 
53479 02 | D0E7 A2 B4      | LDX @#B4                                                ; Point to command table at #D0BA
53481 02 | D0E9 D0 20      | BNE #D10B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with '+' and '-'
                                                                                     ; ---------------------
                                                                                     ; 
53483 01 | D0EB 18         | CLC                                                     ; 
53484 02 | D0EC 66 73      | ROR #73                                                 ; 
53486 02 | D0EE A2 AC      | LDX @#AC                                                ; Point to command table at #D0B2
53488 02 | D0F0 D0 19      | BNE #D10B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with '*' and '/'
                                                                                     ; ---------------------
                                                                                     ; 
53490 03 | D0F2 20 5D D8   | JSR #D85D                                               ; 
53493 03 | D0F5 20 06 D1   | JSR #D106                                               ; 
53496 02 | D0F8 A2 A1      | LDX @#A1                                                ; 
53498 02 | D0FA D0 0F      | BNE #D10B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with '+' and '-'
                                                                                     ; ---------------------
                                                                                     ; 
53500 03 | D0FC 20 F5 D0   | JSR #D0F5                                               ; 
53503 02 | D0FF A2 9A      | LDX @#9A                                                ; 
53505 02 | D101 D0 08      | BNE #D10B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with '^'
                                                                                     ; -------------
                                                                                     ; 
53507 03 | D103 20 5D D8   | JSR #D85D                                               ; 
53510 03 | D106 20 EB D0   | JSR #D0EB                                               ; 
53513 02 | D109 A2 A8      | LDX @#A8                                                ; 
53515 01 | D10B 18         | CLC                                                     ; 
53516 02 | D10C 90 05      | BCC #D113                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Floating Point interpreter
                                                                                     ; --------------------------
                                                                                     ; 
                                                                                     ; - Indirected by (#D002).
                                                                                     ; 
53518 02 | D10E A2 5F      | LDX @#5F                                                ; 
53520 02 | D110 84 03      | STY #3                                                  ; 
53522 01 | D112 38         | SEC                                                     ; 
53523 02 | D113 66 53      | ROR #53                                                 ; 
53525 02 | D115 A4 03      | LDY #3                                                  ; 
53527 01 | D117 88         | DEY                                                     ; 
53528 01 | D118 C8         | INY                                                     ; 
53529 02 | D119 B1 05      | LDA (#5),Y                                              ; 
53531 02 | D11B C9 20      | CMP @#20                                                ; 
53533 02 | D11D F0 F9      | BEQ #D118                                               ; 
53535 01 | D11F 88         | DEY                                                     ; 
53536 02 | D120 84 52      | STY #52                                                 ; 
53538 01 | D122 CA         | DEX                                                     ; 
53539 02 | D123 A4 52      | LDY #52                                                 ; 
53541 01 | D125 E8         | INX                                                     ; 
53542 01 | D126 C8         | INY                                                     ; 
53543 03 | D127 BD 06 D0   | LDA #D006,X                                             ; 
53546 02 | D12A 30 1A      | BMI #D146                                               ; 
53548 02 | D12C D1 05      | CMP (#5),Y                                              ; 
53550 02 | D12E F0 F5      | BEQ #D125                                               ; 
53552 01 | D130 CA         | DEX                                                     ; 
53553 01 | D131 E8         | INX                                                     ; 
53554 03 | D132 BD 06 D0   | LDA #D006,X                                             ; 
53557 02 | D135 10 FA      | BPL #D131                                               ; 
53559 01 | D137 E8         | INX                                                     ; 
53560 02 | D138 24 53      | BIT #53                                                 ; 
53562 02 | D13A 10 E7      | BPL #D123                                               ; 
53564 02 | D13C B1 05      | LDA (#5),Y                                              ; 
53566 02 | D13E C9 2E      | CMP @#2E                                                ; 
53568 02 | D140 D0 E1      | BNE #D123                                               ; 
53570 01 | D142 C8         | INY                                                     ; 
53571 01 | D143 CA         | DEX                                                     ; 
53572 02 | D144 B0 E1      | BCS #D127                                               ; 
53574 02 | D146 C9 FE      | CMP @#FE                                                ; 
53576 02 | D148 B0 11      | BCS #D15B                                               ; 
53578 02 | D14A 85 53      | STA #53                                                 ; 
53580 03 | D14C BD 07 D0   | LDA #D007,X                                             ; 
53583 02 | D14F 85 52      | STA #52                                                 ; 
53585 02 | D151 84 03      | STY #3                                                  ; 
53587 02 | D153 A6 04      | LDX #4                                                  ; 
53589 03 | D155 6C 52 00   | JMP (#52)                                               ; 
                                                                                     ; 
                                                                                     ; 
53592 02 | D158 A6 04      | LDX #4                                                  ; 
53594 01 | D15A 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
53595 02 | D15B F0 FB      | BEQ #D158                                               ; 
53597 01 | D15D 00         | BRK                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Floating Point interpreter
                                                                                     ; --------------------------
                                                                                     ; 
                                                                                     ; - Indirected via (#D004).
                                                                                     ; 
53598 02 | D15E 84 03      | STY #3                                                  ; 
53600 03 | D160 20 EC D0   | JSR #D0EC                                               ; 
53603 03 | D163 20 9A D8   | JSR #D89A                                               ; 
53606 02 | D166 A5 5A      | LDA #5A                                                 ; 
53608 02 | D168 85 60      | STA #60                                                 ; 
53610 02 | D16A A5 5B      | LDA #5B                                                 ; 
53612 02 | D16C 85 5F      | STA #5F                                                 ; 
53614 02 | D16E A5 5C      | LDA #5C                                                 ; 
53616 02 | D170 85 5E      | STA #5E                                                 ; 
53618 02 | D172 A0 5D      | LDY @#5D                                                ; 
53620 03 | D174 4C 9F C9   | JMP #C99F                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deals with '+'
                                                                                     ; --------------
                                                                                     ; 
53623 03 | D177 20 F2 D0   | JSR #D0F2                                               ; 
53626 03 | D17A 20 70 D8   | JSR #D870                                               ; 
53629 03 | D17D 20 3C D9   | JSR #D93C                                               ; 
53632 03 | D180 4C FF D0   | JMP #D0FF                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deals with '-'
                                                                                     ; --------------
                                                                                     ; 
53635 03 | D183 20 F2 D0   | JSR #D0F2                                               ; 
53638 03 | D186 20 70 D8   | JSR #D870                                               ; 
53641 03 | D189 20 39 D9   | JSR #D939                                               ; 
53644 03 | D18C 4C FF D0   | JMP #D0FF                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deals with '*'
                                                                                     ; --------------
                                                                                     ; 
53647 03 | D18F 20 03 D1   | JSR #D103                                               ; 
53650 03 | D192 20 70 D8   | JSR #D870                                               ; 
53653 03 | D195 20 45 DA   | JSR #DA45                                               ; 
53656 03 | D198 4C F8 D0   | JMP #D0F8                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deals with '/'
                                                                                     ; --------------
                                                                                     ; 
53659 03 | D19B 20 03 D1   | JSR #D103                                               ; 
53662 03 | D19E 20 70 D8   | JSR #D870                                               ; 
53665 03 | D1A1 20 B6 DA   | JSR #DAB6                                               ; 
53668 03 | D1A4 4C F8 D0   | JMP #D0F8                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deals with '^'
                                                                                     ; --------------
                                                                                     ; 
53671 03 | D1A7 20 B6 DB   | JSR #DBB6                                               ; 
53674 03 | D1AA 20 5D D8   | JSR #D85D                                               ; 
53677 03 | D1AD 20 EB D0   | JSR #D0EB                                               ; 
53680 03 | D1B0 20 70 D8   | JSR #D870                                               ; 
53683 03 | D1B3 20 45 DA   | JSR #DA45                                               ; 
53686 03 | D1B6 20 D7 DD   | JSR #DDD7                                               ; 
53689 03 | D1B9 4C 09 D1   | JMP #D109                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deals with '-'
                                                                                     ; --------------
                                                                                     ; 
53692 03 | D1BC 20 CB D1   | JSR #D1CB                                               ; 
53695 03 | D1BF 20 86 D6   | JSR #D686                                               ; 
53698 02 | D1C2 F0 06      | BEQ #D1CA                                               ; 
53700 02 | D1C4 A5 57      | LDA #57                                                 ; 
53702 02 | D1C6 49 80      | EOR @#80                                                ; 
53704 02 | D1C8 85 57      | STA #57                                                 ; 
53706 01 | D1CA 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deals with '+'
                                                                                     ; --------------
                                                                                     ; 
53707 02 | D1CB A4 03      | LDY #3                                                  ; 
53709 01 | D1CD 88         | DEY                                                     ; 
53710 01 | D1CE C8         | INY                                                     ; 
53711 02 | D1CF B1 05      | LDA (#5),Y                                              ; 
53713 02 | D1D1 C9 20      | CMP @#20                                                ; 
53715 02 | D1D3 F0 F9      | BEQ #D1CE                                               ; 
53717 02 | D1D5 C9 25      | CMP @#25                                                ; 
53719 02 | D1D7 D0 32      | BNE #D20B                                               ; 
53721 02 | D1D9 E6 03      | INC #3                                                  ; 
53723 03 | D1DB 20 44 D4   | JSR #D444                                               ; 
53726 02 | D1DE 90 2B      | BCC #D20B                                               ; 
53728 02 | D1E0 A0 6F      | LDY @#6F                                                ; 
53730 03 | D1E2 20 CD C3   | JSR #C3CD                                               ; 
53733 02 | D1E5 A0 04      | LDY @#4                                                 ; 
53735 02 | D1E7 A9 00      | LDA @#0                                                 ; 
53737 02 | D1E9 85 5E      | STA #5E                                                 ; 
53739 02 | D1EB 85 58      | STA #58                                                 ; 
53741 02 | D1ED 85 57      | STA #57                                                 ; 
53743 02 | D1EF B1 6F      | LDA (#6F),Y                                             ; 
53745 03 | D1F1 99 59 00   | STA #59,Y                                               ; 
53748 02 | D1F4 05 57      | ORA #57                                                 ; 
53750 02 | D1F6 85 57      | STA #57                                                 ; 
53752 01 | D1F8 88         | DEY                                                     ; 
53753 02 | D1F9 10 F4      | BPL #D1EF                                               ; 
53755 01 | D1FB AA         | TAX                                                     ; 
53756 02 | D1FC F0 09      | BEQ #D207                                               ; 
53758 02 | D1FE A5 5A      | LDA #5A                                                 ; 
53760 02 | D200 85 57      | STA #57                                                 ; 
53762 02 | D202 09 80      | ORA @#80                                                ; 
53764 02 | D204 85 5A      | STA #5A                                                 ; 
53766 01 | D206 8A         | TXA                                                     ; 
53767 01 | D207 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
53768 02 | D208 84 03      | STY #3                                                  ; 
53770 01 | D20A 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
53771 03 | D20B 20 A5 D5   | JSR #D5A5                                               ; 
53774 02 | D20E B0 F8      | BCS #D208                                               ; 
53776 02 | D210 A2 00      | LDX @#0                                                 ; 
53778 03 | D212 4C 12 D1   | JMP #D112                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'ABS'
                                                                                     ; -------------------------
                                                                                     ; 
53781 03 | D215 20 EB D0   | JSR #D0EB                                               ; 
53784 03 | D218 20 86 D6   | JSR #D686                                               ; 
53787 02 | D21B 30 A7      | BMI #D1C4                                               ; 
53789 01 | D21D 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'ACS'
                                                                                     ; -------------------------
                                                                                     ; 
53790 03 | D21E 20 24 D2   | JSR #D224                                               ; 
53793 03 | D221 4C 86 DC   | JMP #DC86                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'ASN'
                                                                                     ; -------------------------
                                                                                     ; 
53796 03 | D224 20 EB D0   | JSR #D0EB                                               ; 
53799 03 | D227 20 86 D6   | JSR #D686                                               ; 
53802 02 | D22A 10 0A      | BPL #D236                                               ; 
53804 02 | D22C A9 00      | LDA @#0                                                 ; 
53806 02 | D22E 85 57      | STA #57                                                 ; 
53808 03 | D230 20 36 D2   | JSR #D236                                               ; 
53811 03 | D233 4C 75 DC   | JMP #DC75                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Something to do with 'ASN' subroutine
                                                                                     ; -------------------------------------
                                                                                     ; 
53814 03 | D236 20 2C D8   | JSR #D82C                                               ; 
53817 03 | D239 20 45 DA   | JSR #DA45                                               ; 
53820 03 | D23C 20 31 D8   | JSR #D831                                               ; 
53823 03 | D23F 20 8D DE   | JSR #DE8D                                               ; 
53826 03 | D242 20 33 D9   | JSR #D933                                               ; 
53829 03 | D245 20 72 DB   | JSR #DB72                                               ; 
53832 03 | D248 20 86 D6   | JSR #D686                                               ; 
53835 02 | D24B F0 12      | BEQ #D25F                                               ; 
53837 03 | D24D 20 31 D8   | JSR #D831                                               ; 
53840 03 | D250 20 A6 DB   | JSR #DBA6                                               ; 
53843 03 | D253 20 E5 D1   | JSR #D1E5                                               ; 
53846 03 | D256 20 AA DB   | JSR #DBAA                                               ; 
53849 03 | D259 20 DC DA   | JSR #DADC                                               ; 
53852 03 | D25C 4C 67 DC   | JMP #DC67                                               ; 
                                                                                     ; 
                                                                                     ; 
53855 03 | D25F 20 93 DD   | JSR #DD93                                               ; 
53858 03 | D262 4C E5 D1   | JMP #D1E5                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'RAD'
                                                                                     ; -------------------------
                                                                                     ; 
53861 03 | D265 20 EB D0   | JSR #D0EB                                               ; 
53864 02 | D268 A0 7C      | LDY @#7C                                                ; 
53866 02 | D26A A9 D2      | LDA @#D2                                                ; 
53868 02 | D26C 84 6F      | STY #6F                                                 ; 
53870 02 | D26E 85 70      | STA #70                                                 ; 
53872 03 | D270 4C 45 DA   | JMP #DA45                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'DEG'
                                                                                     ; -------------------------
                                                                                     ; 
53875 03 | D273 20 EB D0   | JSR #D0EB                                               ; 
53878 02 | D276 A0 81      | LDY @#81                                                ; 
53880 02 | D278 A9 D2      | LDA @#D2                                                ; 
53882 02 | D27A D0 F0      | BNE #D26C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? Table
                                                                                     ; ---------
                                                                                     ; 
53884 05 | D27C 7B 0E FA 35 12                                                       ; 
                                                                                     ; 
                                                                                     ; 
53889 02 | D281 86 65      | STX #65                                                 ; 
53891 03 | D283 2E E0 D3   | ROL #D3E0                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'TAN'
                                                                                     ; -------------------------
                                                                                     ; 
53894 03 | D286 20 EB D0   | JSR #D0EB                                               ; 
53897 03 | D289 20 86 D6   | JSR #D686                                               ; 
53900 02 | D28C F0 07      | BEQ #D295                                               ; 
53902 01 | D28E 48         | PHA                                                     ; 
53903 03 | D28F 20 8D DE   | JSR #DE8D                                               ; 
53906 01 | D292 68         | PLA                                                     ; 
53907 02 | D293 85 57      | STA #57                                                 ; 
53909 01 | D295 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ???
                                                                                     ; ---
                                                                                     ; 
53910 02 | D296 24 73      | BIT #73                                                 ; 
53912 02 | D298 30 26      | BMI #D2C0                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'FLT'
                                                                                     ; -------------------------
                                                                                     ; 
53914 03 | D29A 20 BC C8   | JSR #C8BC                                               ; 
53917 02 | D29D A0 5D      | LDY @#5D                                                ; 
53919 03 | D29F 20 CD C3   | JSR #C3CD                                               ; 
53922 02 | D2A2 85 5A      | STA #5A                                                 ; 
53924 02 | D2A4 A5 5F      | LDA #5F                                                 ; 
53926 02 | D2A6 85 5B      | STA #5B                                                 ; 
53928 02 | D2A8 A5 5E      | LDA #5E                                                 ; 
53930 02 | D2AA 85 5C      | STA #5C                                                 ; 
53932 02 | D2AC A9 A0      | LDA @#A0                                                ; 
53934 02 | D2AE 85 59      | STA #59                                                 ; 
53936 02 | D2B0 A0 00      | LDY @#0                                                 ; 
53938 02 | D2B2 84 5E      | STY #5E                                                 ; 
53940 02 | D2B4 A5 5A      | LDA #5A                                                 ; 
53942 02 | D2B6 85 57      | STA #57                                                 ; 
53944 02 | D2B8 10 03      | BPL #D2BD                                               ; 
53946 03 | D2BA 20 D5 D8   | JSR #D8D5                                               ; 
53949 03 | D2BD 4C C8 D7   | JMP #D7C8                                               ; 
                                                                                     ; 
53952 03 | D2C0 4C 1B CA   | JMP #CA1B                                               ; Execute BRK
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'PI'
                                                                                     ; ------------------------
                                                                                     ; 
53955 03 | D2C3 20 93 DD   | JSR #DD93                                               ; 
53958 03 | D2C6 20 E5 D1   | JSR #D1E5                                               ; 
53961 02 | D2C9 E6 59      | INC #59                                                 ; 
53963 01 | D2CB 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'FGET'
                                                                                     ; --------------------------
                                                                                     ; 
53964 03 | D2CC 20 3E CF   | JSR #CF3E                                               ; 
53967 02 | D2CF A2 04      | LDX @#4                                                 ; 
53969 03 | D2D1 20 D4 FF   | JSR #FFD4                                               ; 
53972 03 | D2D4 9D C5 03   | STA #3C5,X                                              ; 
53975 01 | D2D7 CA         | DEX                                                     ; 
53976 02 | D2D8 10 F7      | BPL #D2D1                                               ; 
53978 03 | D2DA 20 AA DB   | JSR #DBAA                                               ; 
53981 03 | D2DD 4C E5 D1   | JMP #D1E5                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'VAL'
                                                                                     ; -------------------------
                                                                                     ; 
53984 03 | D2E0 20 B1 CE   | JSR #CEB1                                               ; 
53987 02 | D2E3 A0 00      | LDY @#0                                                 ; 
53989 03 | D2E5 20 04 D3   | JSR #D304                                               ; 
53992 02 | D2E8 C9 2B      | CMP @#2B                                                ; 
53994 02 | D2EA F0 0F      | BEQ #D2FB                                               ; 
53996 02 | D2EC C9 2D      | CMP @#2D                                                ; 
53998 02 | D2EE D0 0E      | BNE #D2FE                                               ; 
54000 03 | D2F0 20 03 D3   | JSR #D303                                               ; 
54003 02 | D2F3 84 54      | STY #54                                                 ; 
54005 03 | D2F5 20 B1 D5   | JSR #D5B1                                               ; 
54008 03 | D2F8 4C BF D1   | JMP #D1BF                                               ; 
                                                                                     ; 
54011 03 | D2FB 20 03 D3   | JSR #D303                                               ; 
54014 02 | D2FE 84 54      | STY #54                                                 ; 
54016 03 | D300 4C B1 D5   | JMP #D5B1                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Get to next non-space character subroutine
                                                                                     ; ------------------------------------------
                                                                                     ; 
54019 01 | D303 C8         | INY                                                     ; 
54020 02 | D304 B1 52      | LDA (#52),Y                                             ; 
54022 02 | D306 C9 20      | CMP @#20                                                ; 
54024 02 | D308 F0 F9      | BEQ #D303                                               ; 
54026 01 | D30A 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command '%'
                                                                                     ; -----------------------
                                                                                     ; 
54027 03 | D30B 20 44 D4   | JSR #D444                                               ; 
54030 02 | D30E 90 D4      | BCC #D2E4                                               ; 
54032 03 | D310 20 79 C2   | JSR #C279                                               ; 
54035 03 | D313 20 FC D0   | JSR #D0FC                                               ; 
54038 03 | D316 20 E4 C4   | JSR #C4E4                                               ; 
54041 03 | D319 20 36 D8   | JSR #D836                                               ; 
54044 03 | D31C 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'STR'
                                                                                     ; -------------------------
                                                                                     ; 
54047 03 | D31F 20 FC D0   | JSR #D0FC                                               ; 
54050 03 | D322 20 31 C2   | JSR #C231                                               ; 
54053 03 | D325 20 E1 C4   | JSR #C4E1                                               ; 
54056 03 | D328 20 CB C3   | JSR #C3CB                                               ; 
54059 03 | D32B 20 D0 D4   | JSR #D4D0                                               ; 
54062 03 | D32E 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'FPRINT'
                                                                                     ; ----------------------------
                                                                                     ; 
54065 03 | D331 20 72 C3   | JSR #C372                                               ; 
54068 02 | D334 A2 B8      | LDX @#B8                                                ; 
54070 03 | D336 4C 0B D1   | JMP #D10B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ???
                                                                                     ; ---
                                                                                     ; 
54073 03 | D339 20 FC D0   | JSR #D0FC                                               ; 
54076 02 | D33C A9 C5      | LDA @#C5                                                ; 
54078 02 | D33E 85 52      | STA #52                                                 ; 
54080 02 | D340 A9 03      | LDA @#3                                                 ; 
54082 02 | D342 85 53      | STA #53                                                 ; 
54084 03 | D344 20 D0 D4   | JSR #D4D0                                               ; 
54087 02 | D347 C6 6F      | DEC #6F                                                 ; 
54089 03 | D349 AD 21 03   | LDA #321                                                ; 
54092 01 | D34C 38         | SEC                                                     ; 
54093 02 | D34D E5 6F      | SBC #6F                                                 ; 
54095 02 | D34F 90 0B      | BCC #D35C                                               ; 
54097 02 | D351 F0 09      | BEQ #D35C                                               ; 
54099 01 | D353 A8         | TAY                                                     ; 
54100 02 | D354 A9 20      | LDA @#20                                                ; 
54102 03 | D356 20 4C CA   | JSR #CA4C                                               ; 
54105 01 | D359 88         | DEY                                                     ; 
54106 02 | D35A D0 FA      | BNE #D356                                               ; 
54108 02 | D35C A0 00      | LDY @#0                                                 ; 
54110 02 | D35E B1 52      | LDA (#52),Y                                             ; 
54112 02 | D360 C9 0D      | CMP @#D                                                 ; 
54114 02 | D362 F0 CD      | BEQ #D331                                               ; 
54116 03 | D364 20 4C CA   | JSR #CA4C                                               ; 
54119 01 | D367 C8         | INY                                                     ; 
54120 02 | D368 D0 F4      | BNE #D35E                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'FINPUT'
                                                                                     ; ----------------------------
                                                                                     ; 
54122 03 | D36A 20 72 C3   | JSR #C372                                               ; 
54125 02 | D36D B1 05      | LDA (#5),Y                                              ; 
54127 02 | D36F C9 25      | CMP @#25                                                ; 
54129 02 | D371 D0 08      | BNE #D37B                                               ; 
54131 01 | D373 C8         | INY                                                     ; 
54132 02 | D374 84 03      | STY #3                                                  ; 
54134 03 | D376 20 44 D4   | JSR #D444                                               ; 
54137 02 | D379 B0 05      | BCS #D380                                               ; 
54139 02 | D37B A2 C3      | LDX @#C3                                                ; 
54141 03 | D37D 4C 0B D1   | JMP #D10B                                               ; 
                                                                                     ; 
54144 03 | D380 20 09 CD   | JSR #CD09                                               ; 
54147 01 | D383 A8         | TAY                                                     ; 
54148 02 | D384 A5 05      | LDA #5                                                  ; 
54150 01 | D386 48         | PHA                                                     ; 
54151 02 | D387 A5 06      | LDA #6                                                  ; 
54153 01 | D389 48         | PHA                                                     ; 
54154 02 | D38A A5 03      | LDA #3                                                  ; 
54156 01 | D38C 48         | PHA                                                     ; 
54157 02 | D38D 84 03      | STY #3                                                  ; 
54159 01 | D38F C8         | INY                                                     ; 
54160 02 | D390 84 06      | STY #6                                                  ; 
54162 02 | D392 A9 40      | LDA @#40                                                ; 
54164 02 | D394 85 05      | STA #5                                                  ; 
54166 03 | D396 20 FC D0   | JSR #D0FC                                               ; 
54169 01 | D399 68         | PLA                                                     ; 
54170 02 | D39A 85 03      | STA #3                                                  ; 
54172 01 | D39C 68         | PLA                                                     ; 
54173 02 | D39D 85 06      | STA #6                                                  ; 
54175 01 | D39F 68         | PLA                                                     ; 
54176 02 | D3A0 85 05      | STA #5                                                  ; 
54178 03 | D3A2 20 36 D8   | JSR #D836                                               ; 
54181 03 | D3A5 4C 7B D3   | JMP #D37B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'FIF'
                                                                                     ; -------------------------
                                                                                     ; 
54184 03 | D3A8 20 EB D9   | JSR #D9EB                                               ; 
54187 03 | D3AB 4C 69 C5   | JMP #C569                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'FUNTIL'
                                                                                     ; ----------------------------
                                                                                     ; 
54190 03 | D3AE 20 EB D9   | JSR #D9EB                                               ; 
54193 03 | D3B1 4C D5 CC   | JMP #CCD5                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'FPUT'
                                                                                     ; --------------------------
                                                                                     ; 
54196 03 | D3B4 20 94 D4   | JSR #D494                                               ; 
54199 03 | D3B7 20 FC D0   | JSR #D0FC                                               ; 
54202 03 | D3BA 20 E4 C4   | JSR #C4E4                                               ; 
54205 03 | D3BD 20 31 D8   | JSR #D831                                               ; 
54208 02 | D3C0 A6 04      | LDX #4                                                  ; 
54210 03 | D3C2 20 41 CF   | JSR #CF41                                               ; 
54213 02 | D3C5 A2 04      | LDX @#4                                                 ; 
54215 03 | D3C7 BD C5 03   | LDA #3C5,X                                              ; 
54218 03 | D3CA 20 D1 FF   | JSR #FFD1                                               ; 
54221 01 | D3CD CA         | DEX                                                     ; 
54222 02 | D3CE 10 F7      | BPL #D3C7                                               ; 
54224 03 | D3D0 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'FDIM'
                                                                                     ; --------------------------
                                                                                     ; 
54227 02 | D3D3 A5 01      | LDA #1                                                  ; 
54229 02 | D3D5 05 02      | ORA #2                                                  ; 
54231 02 | D3D7 F0 6A      | BEQ #D443                                               ; 
54233 03 | D3D9 20 34 C4   | JSR #C434                                               ; 
54236 02 | D3DC B0 65      | BCS #D443                                               ; 
54238 02 | D3DE A4 03      | LDY #3                                                  ; 
54240 02 | D3E0 B1 05      | LDA (#5),Y                                              ; 
54242 02 | D3E2 C9 25      | CMP @#25                                                ; 
54244 02 | D3E4 D0 5D      | BNE #D443                                               ; 
54246 01 | D3E6 C8         | INY                                                     ; 
54247 02 | D3E7 B1 05      | LDA (#5),Y                                              ; 
54249 01 | D3E9 C8         | INY                                                     ; 
54250 02 | D3EA D1 05      | CMP (#5),Y                                              ; 
54252 02 | D3EC D0 55      | BNE #D443                                               ; 
54254 02 | D3EE C9 5B      | CMP @#5B                                                ; 
54256 02 | D3F0 B0 51      | BCS #D443                                               ; 
54258 02 | D3F2 E9 3F      | SBC @#3F                                                ; 
54260 02 | D3F4 90 4D      | BCC #D443                                               ; 
54262 01 | D3F6 C8         | INY                                                     ; 
54263 02 | D3F7 84 03      | STY #3                                                  ; 
54265 01 | D3F9 48         | PHA                                                     ; 
54266 03 | D3FA 20 8B C7   | JSR #C78B                                               ; 
54269 02 | D3FD F6 15      | INC #15,X                                               ; 
54271 02 | D3FF D0 02      | BNE #D403                                               ; 
54273 02 | D401 F6 24      | INC #24,X                                               ; 
54275 03 | D403 20 9A D4   | JSR #D49A                                               ; 
54278 01 | D406 68         | PLA                                                     ; 
54279 01 | D407 A8         | TAY                                                     ; 
54280 01 | D408 18         | CLC                                                     ; 
54281 02 | D409 A5 23      | LDA #23                                                 ; 
54283 03 | D40B 99 87 28   | STA #2887,Y                                             ; 
54286 02 | D40E 65 16      | ADC #16                                                 ; 
54288 02 | D410 85 23      | STA #23                                                 ; 
54290 02 | D412 A5 24      | LDA #24                                                 ; 
54292 03 | D414 99 A2 28   | STA #28A2,Y                                             ; 
54295 02 | D417 65 25      | ADC #25                                                 ; 
54297 02 | D419 85 24      | STA #24                                                 ; 
54299 02 | D41B A0 00      | LDY @#0                                                 ; 
54301 02 | D41D 84 04      | STY #4                                                  ; 
54303 02 | D41F A9 AA      | LDA @#AA                                                ; 
54305 02 | D421 91 23      | STA (#23),Y                                             ; 
54307 02 | D423 D1 23      | CMP (#23),Y                                             ; 
54309 02 | D425 D0 1C      | BNE #D443                                               ; 
54311 01 | D427 4A         | LSR A                                                   ; 
54312 02 | D428 91 23      | STA (#23),Y                                             ; 
54314 02 | D42A D1 23      | CMP (#23),Y                                             ; 
54316 02 | D42C D0 15      | BNE #D443                                               ; 
54318 03 | D42E 20 34 C4   | JSR #C434                                               ; 
54321 02 | D431 B0 10      | BCS #D443                                               ; 
54323 02 | D433 A4 03      | LDY #3                                                  ; 
54325 02 | D435 B1 05      | LDA (#5),Y                                              ; 
54327 02 | D437 C9 2C      | CMP @#2C                                                ; 
54329 02 | D439 D0 05      | BNE #D440                                               ; 
54331 02 | D43B E6 03      | INC #3                                                  ; 
54333 03 | D43D 4C D3 D3   | JMP #D3D3                                               ; 
54336 03 | D440 4C 58 C5   | JMP #C558                                               ; 
54339 01 | D443 00         | BRK                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ???
                                                                                     ; ---
                                                                                     ; 
54340 03 | D444 20 34 C4   | JSR #C434                                               ; 
54343 02 | D447 90 0E      | BCC #D457                                               ; 
54345 02 | D449 B5 15      | LDA #15,X                                               ; 
54347 01 | D44B 0A         | ASL A                                                   ; 
54348 01 | D44C 0A         | ASL A                                                   ; 
54349 02 | D44D 75 15      | ADC #15,X                                               ; 
54351 02 | D44F 95 15      | STA #15,X                                               ; 
54353 02 | D451 A9 28      | LDA @#28                                                ; 
54355 02 | D453 95 24      | STA #24,X                                               ; 
54357 01 | D455 38         | SEC                                                     ; 
54358 01 | D456 60         | RTS                                                     ; 
54359 02 | D457 A4 03      | LDY #3                                                  ; 
54361 02 | D459 B1 05      | LDA (#5),Y                                              ; 
54363 02 | D45B C9 21      | CMP @#21                                                ; 
54365 02 | D45D D0 07      | BNE #D466                                               ; 
54367 02 | D45F E6 03      | INC #3                                                  ; 
54369 03 | D461 20 BC C8   | JSR #C8BC                                               ; 
54372 01 | D464 38         | SEC                                                     ; 
54373 01 | D465 60         | RTS                                                     ; 
54374 01 | D466 C8         | INY                                                     ; 
54375 02 | D467 D1 05      | CMP (#5),Y                                              ; 
54377 02 | D469 D0 08      | BNE #D473                                               ; 
54379 02 | D46B C9 5B      | CMP @#5B                                                ; 
54381 02 | D46D B0 04      | BCS #D473                                               ; 
54383 02 | D46F E9 3F      | SBC @#3F                                                ; 
54385 02 | D471 B0 02      | BCS #D475                                               ; 
54387 01 | D473 18         | CLC                                                     ; 
54388 01 | D474 60         | RTS                                                     ; 
54389 01 | D475 C8         | INY                                                     ; 
54390 02 | D476 84 03      | STY #3                                                  ; 
54392 01 | D478 48         | PHA                                                     ; 
54393 03 | D479 20 BC C8   | JSR #C8BC                                               ; 
54396 03 | D47C 20 9A D4   | JSR #D49A                                               ; 
54399 01 | D47F 68         | PLA                                                     ; 
54400 01 | D480 A8         | TAY                                                     ; 
54401 02 | D481 B0 10      | BCS #D493                                               ; 
54403 03 | D483 B9 87 28   | LDA #2887,Y                                             ; 
54406 02 | D486 75 15      | ADC #15,X                                               ; 
54408 02 | D488 95 15      | STA #15,X                                               ; 
54410 03 | D48A B9 A2 28   | LDA #28A2,Y                                             ; 
54413 02 | D48D 75 24      | ADC #24,X                                               ; 
54415 02 | D48F 95 24      | STA #24,X                                               ; 
54417 02 | D491 90 D1      | BCC #D464                                               ; 
54419 01 | D493 00         | BRK                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ???
                                                                                     ; ---
                                                                                     ; 
54420 03 | D494 20 BC C8   | JSR #C8BC                                               ; 
54423 03 | D497 4C 31 C2   | JMP #C231                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
54426 02 | D49A B4 24      | LDY #24,X                                               ; 
54428 02 | D49C B5 15      | LDA #15,X                                               ; 
54430 01 | D49E 0A         | ASL A                                                   ; 
54431 02 | D49F 36 24      | ROL #24,X                                               ; 
54433 01 | D4A1 0A         | ASL A                                                   ; 
54434 02 | D4A2 36 24      | ROL #24,X                                               ; 
54436 01 | D4A4 18         | CLC                                                     ; 
54437 02 | D4A5 75 15      | ADC #15,X                                               ; 
54439 02 | D4A7 95 15      | STA #15,X                                               ; 
54441 01 | D4A9 98         | TYA                                                     ; 
54442 02 | D4AA 75 24      | ADC #24,X                                               ; 
54444 02 | D4AC 95 24      | STA #24,X                                               ; 
54446 01 | D4AE 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Pass Control to Utility Interpreter, if it Exists
                                                                                     ; -------------------------------------------------
                                                                                     ; 
                                                                                     ; Floating pointing interpreter jumps here if a match cannot be made
                                                                                     ; against the #D006 command table.
                                                                                     ; 
                                                                                     ; If ?#A000=#40 and ?#A001=#BF then control is passed to the Utility
                                                                                     ; interpreter at #A002.
                                                                                     ; 
54447 03 | D4AF AD 00 A0   | LDA #A000                                               ; Get the first byte of the utility ROM
54450 02 | D4B2 C9 40      | CMP @#40                                                ; Does it match the test byte ?
54452 02 | D4B4 D0 0A      | BNE #D4C0                                               ; ..no, do interpreter post test, which
                                                                                     ; will fail and so execute BRK
54454 03 | D4B6 AD 01 A0   | LDA #A001                                               ; Get the second byte of the utility ROM
54457 02 | D4B9 C9 BF      | CMP @#BF                                                ; Does it match the test byte ?
54459 02 | D4BB D0 03      | BNE #D4C0                                               ; ..no, do interpreter post test, which
                                                                                     ; will fail and so execute BRK
54461 03 | D4BD 4C 02 A0   | JMP #A002                                               ; ..yes, transfer control to the utility
54464 03 | D4C0 4C 58 C5   | JMP #C558                                               ; Do interpreter post test
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
54467 02 | D4C3 C9 3A      | CMP @#3A                                                ; 
54469 02 | D4C5 B0 07      | BCS #D4CE                                               ; 
54471 02 | D4C7 C9 30      | CMP @#30                                                ; 
54473 02 | D4C9 90 02      | BCC #D4CD                                               ; 
54475 02 | D4CB E9 30      | SBC @#30                                                ; 
54477 01 | D4CD 60         | RTS                                                     ; 
                                                                                     ; 
54478 01 | D4CE 18         | CLC                                                     ; 
54479 01 | D4CF 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
54480 02 | D4D0 A9 00      | LDA @#0                                                 ; 
54482 02 | D4D2 85 6F      | STA #6F                                                 ; 
54484 03 | D4D4 20 86 D6   | JSR #D686                                               ; 
54487 02 | D4D7 D0 12      | BNE #D4EB                                               ; 
54489 02 | D4D9 A9 30      | LDA @#30                                                ; 
54491 03 | D4DB 20 8D D5   | JSR #D58D                                               ; 
54494 02 | D4DE A9 2E      | LDA @#2E                                                ; 
54496 03 | D4E0 20 8D D5   | JSR #D58D                                               ; 
54499 02 | D4E3 A9 30      | LDA @#30                                                ; 
54501 03 | D4E5 20 8D D5   | JSR #D58D                                               ; 
54504 03 | D4E8 4C 71 D5   | JMP #D571                                               ; 
                                                                                     ; 
54507 02 | D4EB 10 05      | BPL #D4F2                                               ; 
54509 02 | D4ED A9 2D      | LDA @#2D                                                ; 
54511 03 | D4EF 20 8D D5   | JSR #D58D                                               ; 
54514 02 | D4F2 A9 00      | LDA @#0                                                 ; 
54516 02 | D4F4 85 6D      | STA #6D                                                 ; 
54518 02 | D4F6 A5 59      | LDA #59                                                 ; 
54520 02 | D4F8 C9 81      | CMP @#81                                                ; 
54522 02 | D4FA B0 08      | BCS #D504                                               ; 
54524 03 | D4FC 20 A0 D6   | JSR #D6A0                                               ; 
54527 02 | D4FF C6 6D      | DEC #6D                                                 ; 
54529 03 | D501 4C F6 D4   | JMP #D4F6                                               ; 
                                                                                     ; 
54532 02 | D504 C9 84      | CMP @#84                                                ; 
54534 02 | D506 90 10      | BCC #D518                                               ; 
54536 02 | D508 D0 06      | BNE #D510                                               ; 
54538 02 | D50A A5 5A      | LDA #5A                                                 ; 
54540 02 | D50C C9 A0      | CMP @#A0                                                ; 
54542 02 | D50E 90 08      | BCC #D518                                               ; 
54544 03 | D510 20 1B D7   | JSR #D71B                                               ; 
54547 02 | D513 E6 6D      | INC #6D                                                 ; 
54549 03 | D515 4C F6 D4   | JMP #D4F6                                               ; 
                                                                                     ; 
54552 02 | D518 A5 59      | LDA #59                                                 ; 
54554 02 | D51A C9 84      | CMP @#84                                                ; 
54556 02 | D51C B0 07      | BCS #D525                                               ; 
54558 03 | D51E 20 D8 D6   | JSR #D6D8                                               ; 
54561 02 | D521 E6 59      | INC #59                                                 ; 
54563 02 | D523 D0 F3      | BNE #D518                                               ; 
54565 01 | D525 38         | SEC                                                     ; 
54566 02 | D526 A9 FF      | LDA @#FF                                                ; 
54568 03 | D528 20 36 D6   | JSR #D636                                               ; 
54571 02 | D52B A5 5A      | LDA #5A                                                 ; 
54573 02 | D52D C9 A0      | CMP @#A0                                                ; 
54575 02 | D52F B0 DF      | BCS #D510                                               ; 
54577 02 | D531 A9 01      | LDA @#1                                                 ; 
54579 02 | D533 A4 6D      | LDY #6D                                                 ; 
54581 02 | D535 30 0A      | BMI #D541                                               ; 
54583 02 | D537 C0 08      | CPY @#8                                                 ; 
54585 02 | D539 B0 06      | BCS #D541                                               ; 
54587 01 | D53B C8         | INY                                                     ; 
54588 02 | D53C A9 00      | LDA @#0                                                 ; 
54590 02 | D53E 85 6D      | STA #6D                                                 ; 
54592 01 | D540 98         | TYA                                                     ; 
54593 02 | D541 85 70      | STA #70                                                 ; 
54595 02 | D543 A2 09      | LDX @#9                                                 ; 
54597 02 | D545 86 54      | STX #54                                                 ; 
54599 03 | D547 20 75 D5   | JSR #D575                                               ; 
54602 02 | D54A C6 70      | DEC #70                                                 ; 
54604 02 | D54C D0 05      | BNE #D553                                               ; 
54606 02 | D54E A9 2E      | LDA @#2E                                                ; 
54608 03 | D550 20 8D D5   | JSR #D58D                                               ; 
54611 02 | D553 C6 54      | DEC #54                                                 ; 
54613 02 | D555 D0 F0      | BNE #D547                                               ; 
54615 02 | D557 A5 6D      | LDA #6D                                                 ; 
54617 02 | D559 F0 16      | BEQ #D571                                               ; 
54619 02 | D55B A9 45      | LDA @#45                                                ; 
54621 03 | D55D 20 8D D5   | JSR #D58D                                               ; 
54624 02 | D560 A5 6D      | LDA #6D                                                 ; 
54626 02 | D562 10 0A      | BPL #D56E                                               ; 
54628 02 | D564 A9 2D      | LDA @#2D                                                ; 
54630 03 | D566 20 8D D5   | JSR #D58D                                               ; 
54633 01 | D569 38         | SEC                                                     ; 
54634 02 | D56A A9 00      | LDA @#0                                                 ; 
54636 02 | D56C E5 6D      | SBC #6D                                                 ; 
54638 03 | D56E 20 87 D5   | JSR #D587                                               ; 
54641 02 | D571 A9 0D      | LDA @#D                                                 ; 
54643 02 | D573 D0 18      | BNE #D58D                                               ; 
54645 02 | D575 A5 5A      | LDA #5A                                                 ; 
54647 01 | D577 4A         | LSR A                                                   ; 
54648 01 | D578 4A         | LSR A                                                   ; 
54649 01 | D579 4A         | LSR A                                                   ; 
54650 01 | D57A 4A         | LSR A                                                   ; 
54651 03 | D57B 20 8B D5   | JSR #D58B                                               ; 
54654 02 | D57E A5 5A      | LDA #5A                                                 ; 
54656 02 | D580 29 0F      | AND @#F                                                 ; 
54658 02 | D582 85 5A      | STA #5A                                                 ; 
54660 03 | D584 4C 4E D6   | JMP #D64E                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
54663 02 | D587 C9 0A      | CMP @#A                                                 ; 
54665 02 | D589 B0 09      | BCS #D594                                               ; 
54667 02 | D58B 09 30      | ORA @#30                                                ; 
54669 02 | D58D A4 6F      | LDY #6F                                                 ; 
54671 02 | D58F 91 52      | STA (#52),Y                                             ; 
54673 02 | D591 E6 6F      | INC #6F                                                 ; 
54675 01 | D593 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
54676 02 | D594 A2 FF      | LDX @#FF                                                ; 
54678 01 | D596 E8         | INX                                                     ; 
54679 02 | D597 E9 0A      | SBC @#A                                                 ; 
54681 02 | D599 B0 FB      | BCS #D596                                               ; 
54683 02 | D59B 69 0A      | ADC @#A                                                 ; 
54685 01 | D59D 48         | PHA                                                     ; 
54686 01 | D59E 8A         | TXA                                                     ; 
54687 03 | D59F 20 87 D5   | JSR #D587                                               ; 
54690 01 | D5A2 68         | PLA                                                     ; 
54691 02 | D5A3 10 E6      | BPL #D58B                                               ; 
54693 02 | D5A5 A5 03      | LDA #3                                                  ; 
54695 02 | D5A7 85 54      | STA #54                                                 ; 
54697 02 | D5A9 A5 05      | LDA #5                                                  ; 
54699 02 | D5AB 85 52      | STA #52                                                 ; 
54701 02 | D5AD A5 06      | LDA #6                                                  ; 
54703 02 | D5AF 85 53      | STA #53                                                 ; 
54705 03 | D5B1 20 A4 DA   | JSR #DAA4                                               ; 
54708 02 | D5B4 85 6C      | STA #6C                                                 ; 
54710 02 | D5B6 85 6D      | STA #6D                                                 ; 
54712 03 | D5B8 20 7B D6   | JSR #D67B                                               ; 
54715 02 | D5BB C9 2E      | CMP @#2E                                                ; 
54717 02 | D5BD F0 0E      | BEQ #D5CD                                               ; 
54719 03 | D5BF 20 C3 D4   | JSR #D4C3                                               ; 
54722 02 | D5C2 90 71      | BCC #D635                                               ; 
54724 02 | D5C4 85 5E      | STA #5E                                                 ; 
54726 03 | D5C6 20 7B D6   | JSR #D67B                                               ; 
54729 02 | D5C9 C9 2E      | CMP @#2E                                                ; 
54731 02 | D5CB D0 09      | BNE #D5D6                                               ; 
54733 02 | D5CD A5 6C      | LDA #6C                                                 ; 
54735 01 | D5CF 18         | CLC                                                     ; 
54736 02 | D5D0 D0 3A      | BNE #D60C                                               ; 
54738 02 | D5D2 E6 6C      | INC #6C                                                 ; 
54740 02 | D5D4 D0 F0      | BNE #D5C6                                               ; 
54742 02 | D5D6 C9 45      | CMP @#45                                                ; 
54744 02 | D5D8 F0 27      | BEQ #D601                                               ; 
54746 03 | D5DA 20 C3 D4   | JSR #D4C3                                               ; 
54749 02 | D5DD 90 2D      | BCC #D60C                                               ; 
54751 02 | D5DF 85 6E      | STA #6E                                                 ; 
54753 02 | D5E1 A5 5A      | LDA #5A                                                 ; 
54755 02 | D5E3 C9 18      | CMP @#18                                                ; 
54757 02 | D5E5 90 08      | BCC #D5EF                                               ; 
54759 02 | D5E7 A5 6C      | LDA #6C                                                 ; 
54761 02 | D5E9 D0 DB      | BNE #D5C6                                               ; 
54763 02 | D5EB E6 6D      | INC #6D                                                 ; 
54765 02 | D5ED B0 D7      | BCS #D5C6                                               ; 
54767 02 | D5EF A5 6C      | LDA #6C                                                 ; 
54769 02 | D5F1 F0 02      | BEQ #D5F5                                               ; 
54771 02 | D5F3 C6 6D      | DEC #6D                                                 ; 
54773 03 | D5F5 20 4E D6   | JSR #D64E                                               ; 
54776 01 | D5F8 18         | CLC                                                     ; 
54777 02 | D5F9 A5 6E      | LDA #6E                                                 ; 
54779 03 | D5FB 20 36 D6   | JSR #D636                                               ; 
54782 03 | D5FE 4C C6 D5   | JMP #D5C6                                               ; 
                                                                                     ; 
54785 03 | D601 20 7B D6   | JSR #D67B                                               ; 
54788 03 | D604 20 78 D7   | JSR #D778                                               ; 
54791 01 | D607 18         | CLC                                                     ; 
54792 02 | D608 65 6D      | ADC #6D                                                 ; 
54794 02 | D60A 85 6D      | STA #6D                                                 ; 
54796 02 | D60C A9 A8      | LDA @#A8                                                ; 
54798 02 | D60E 85 59      | STA #59                                                 ; 
54800 03 | D610 20 86 D6   | JSR #D686                                               ; 
54803 02 | D613 F0 1C      | BEQ #D631                                               ; 
54805 03 | D615 20 C8 D7   | JSR #D7C8                                               ; 
54808 02 | D618 A5 6D      | LDA #6D                                                 ; 
54810 02 | D61A 30 0B      | BMI #D627                                               ; 
54812 02 | D61C F0 10      | BEQ #D62E                                               ; 
54814 03 | D61E 20 A0 D6   | JSR #D6A0                                               ; 
54817 02 | D621 C6 6D      | DEC #6D                                                 ; 
54819 02 | D623 D0 F9      | BNE #D61E                                               ; 
54821 02 | D625 F0 07      | BEQ #D62E                                               ; 
54823 03 | D627 20 1B D7   | JSR #D71B                                               ; 
54826 02 | D62A E6 6D      | INC #6D                                                 ; 
54828 02 | D62C D0 F9      | BNE #D627                                               ; 
54830 03 | D62E 20 9B DA   | JSR #DA9B                                               ; 
54833 01 | D631 38         | SEC                                                     ; 
54834 02 | D632 A4 54      | LDY #54                                                 ; 
54836 01 | D634 88         | DEY                                                     ; 
54837 01 | D635 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
54838 02 | D636 A2 05      | LDX @#5                                                 ; 
54840 02 | D638 75 59      | ADC #59,X                                               ; 
54842 02 | D63A 95 59      | STA #59,X                                               ; 
54844 02 | D63C A9 00      | LDA @#0                                                 ; 
54846 01 | D63E CA         | DEX                                                     ; 
54847 02 | D63F D0 F7      | BNE #D638                                               ; 
54849 01 | D641 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
54850 02 | D642 A2 05      | LDX @#5                                                 ; 
54852 02 | D644 B5 59      | LDA #59,X                                               ; 
54854 02 | D646 75 61      | ADC #61,X                                               ; 
54856 02 | D648 95 59      | STA #59,X                                               ; 
54858 01 | D64A CA         | DEX                                                     ; 
54859 02 | D64B D0 F7      | BNE #D644                                               ; 
54861 01 | D64D 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
54862 02 | D64E A2 05      | LDX @#5                                                 ; 
54864 02 | D650 A9 00      | LDA @#0                                                 ; 
54866 02 | D652 85 67      | STA #67                                                 ; 
54868 02 | D654 A9 00      | LDA @#0                                                 ; 
54870 02 | D656 85 68      | STA #68                                                 ; 
54872 02 | D658 B5 59      | LDA #59,X                                               ; 
54874 01 | D65A 0A         | ASL A                                                   ; 
54875 02 | D65B 26 68      | ROL #68                                                 ; 
54877 01 | D65D 0A         | ASL A                                                   ; 
54878 02 | D65E 26 68      | ROL #68                                                 ; 
54880 01 | D660 18         | CLC                                                     ; 
54881 02 | D661 75 59      | ADC #59,X                                               ; 
54883 02 | D663 90 02      | BCC #D667                                               ; 
54885 02 | D665 E6 68      | INC #68                                                 ; 
54887 01 | D667 0A         | ASL A                                                   ; 
54888 02 | D668 26 68      | ROL #68                                                 ; 
54890 01 | D66A 18         | CLC                                                     ; 
54891 02 | D66B 65 67      | ADC #67                                                 ; 
54893 02 | D66D 90 02      | BCC #D671                                               ; 
54895 02 | D66F E6 68      | INC #68                                                 ; 
54897 02 | D671 95 59      | STA #59,X                                               ; 
54899 02 | D673 A5 68      | LDA #68                                                 ; 
54901 02 | D675 85 67      | STA #67                                                 ; 
54903 01 | D677 CA         | DEX                                                     ; 
54904 02 | D678 D0 DA      | BNE #D654                                               ; 
54906 01 | D67A 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
54907 02 | D67B 84 55      | STY #55                                                 ; 
54909 02 | D67D A4 54      | LDY #54                                                 ; 
54911 02 | D67F B1 52      | LDA (#52),Y                                             ; 
54913 02 | D681 A4 55      | LDY #55                                                 ; 
54915 02 | D683 E6 54      | INC #54                                                 ; 
54917 01 | D685 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
54918 02 | D686 A5 5A      | LDA #5A                                                 ; 
54920 02 | D688 05 5B      | ORA #5B                                                 ; 
54922 02 | D68A 05 5C      | ORA #5C                                                 ; 
54924 02 | D68C 05 5D      | ORA #5D                                                 ; 
54926 02 | D68E 05 5E      | ORA #5E                                                 ; 
54928 02 | D690 F0 07      | BEQ #D699                                               ; 
54930 02 | D692 A5 57      | LDA #57                                                 ; 
54932 02 | D694 D0 09      | BNE #D69F                                               ; 
54934 02 | D696 A9 01      | LDA @#1                                                 ; 
54936 01 | D698 60         | RTS                                                     ; 
                                                                                     ; 
54937 02 | D699 85 57      | STA #57                                                 ; 
54939 02 | D69B 85 59      | STA #59                                                 ; 
54941 02 | D69D 85 58      | STA #58                                                 ; 
54943 01 | D69F 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
54944 01 | D6A0 18         | CLC                                                     ; 
54945 02 | D6A1 A5 59      | LDA #59                                                 ; 
54947 02 | D6A3 69 03      | ADC @#3                                                 ; 
54949 02 | D6A5 85 59      | STA #59                                                 ; 
54951 02 | D6A7 90 02      | BCC #D6AB                                               ; 
54953 02 | D6A9 E6 58      | INC #58                                                 ; 
54955 03 | D6AB 20 C3 D6   | JSR #D6C3                                               ; 
54958 03 | D6AE 20 FB D6   | JSR #D6FB                                               ; 
54961 03 | D6B1 20 FB D6   | JSR #D6FB                                               ; 
54964 03 | D6B4 20 42 D6   | JSR #D642                                               ; 
54967 02 | D6B7 90 09      | BCC #D6C2                                               ; 
54969 03 | D6B9 20 D8 D6   | JSR #D6D8                                               ; 
54972 02 | D6BC E6 59      | INC #59                                                 ; 
54974 02 | D6BE D0 02      | BNE #D6C2                                               ; 
54976 02 | D6C0 E6 58      | INC #58                                                 ; 
54978 01 | D6C2 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Copy the 8 bytes #57..#5E to #5F..66 subroutine
                                                                                     ; -----------------------------------------------
                                                                                     ; 
54979 02 | D6C3 A2 08      | LDX @#8                                                 ; 
54981 02 | D6C5 B5 56      | LDA #56,X                                               ; 
54983 02 | D6C7 95 5E      | STA #5E,X                                               ; 
54985 01 | D6C9 CA         | DEX                                                     ; 
54986 02 | D6CA D0 F9      | BNE #D6C5                                               ; 
54988 01 | D6CC 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Shift Left 1 Bit #5E..#5A subroutine
                                                                                     ; ------------------------------------
                                                                                     ; 
54989 02 | D6CD 06 5E      | ASL #5E                                                 ; 
54991 02 | D6CF 26 5D      | ROL #5D                                                 ; 
54993 02 | D6D1 26 5C      | ROL #5C                                                 ; 
54995 02 | D6D3 26 5B      | ROL #5B                                                 ; 
54997 02 | D6D5 26 5A      | ROL #5A                                                 ; 
54999 01 | D6D7 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Shift Right 1 Bit #5A..#5E subroutine
                                                                                     ; -------------------------------------
                                                                                     ; 
55000 02 | D6D8 66 5A      | ROR #5A                                                 ; 
55002 02 | D6DA 66 5B      | ROR #5B                                                 ; 
55004 02 | D6DC 66 5C      | ROR #5C                                                 ; 
55006 02 | D6DE 66 5D      | ROR #5D                                                 ; 
55008 02 | D6E0 66 5E      | ROR #5E                                                 ; 
55010 01 | D6E2 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Copy #5A..#5D to #5B..#5E and clear #5A subroutine
                                                                                     ; --------------------------------------------------
                                                                                     ; 
55011 02 | D6E3 A5 5D      | LDA #5D                                                 ; 
55013 02 | D6E5 85 5E      | STA #5E                                                 ; 
55015 02 | D6E7 A5 5C      | LDA #5C                                                 ; 
55017 02 | D6E9 85 5D      | STA #5D                                                 ; 
55019 02 | D6EB A5 5B      | LDA #5B                                                 ; 
55021 02 | D6ED 85 5C      | STA #5C                                                 ; 
55023 02 | D6EF A5 5A      | LDA #5A                                                 ; 
55025 02 | D6F1 85 5B      | STA #5B                                                 ; 
55027 02 | D6F3 A9 00      | LDA @#0                                                 ; 
55029 02 | D6F5 85 5A      | STA #5A                                                 ; 
55031 01 | D6F7 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
55032 03 | D6F8 20 C3 D6   | JSR #D6C3                                               ; 
55035 02 | D6FB 46 62      | LSR #62                                                 ; 
55037 02 | D6FD 66 63      | ROR #63                                                 ; 
55039 02 | D6FF 66 64      | ROR #64                                                 ; 
55041 02 | D701 66 65      | ROR #65                                                 ; 
55043 02 | D703 66 66      | ROR #66                                                 ; 
55045 01 | D705 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Copy #62..#65 to #63..#66 and clear #62 subroutine
                                                                                     ; --------------------------------------------------
                                                                                     ; 
55046 02 | D706 A5 65      | LDA #65                                                 ; 
55048 02 | D708 85 66      | STA #66                                                 ; 
55050 02 | D70A A5 64      | LDA #64                                                 ; 
55052 02 | D70C 85 65      | STA #65                                                 ; 
55054 02 | D70E A5 63      | LDA #63                                                 ; 
55056 02 | D710 85 64      | STA #64                                                 ; 
55058 02 | D712 A5 62      | LDA #62                                                 ; 
55060 02 | D714 85 63      | STA #63                                                 ; 
55062 02 | D716 A9 00      | LDA @#0                                                 ; 
55064 02 | D718 85 62      | STA #62                                                 ; 
55066 01 | D71A 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55067 01 | D71B 38         | SEC                                                     ; 
55068 02 | D71C A5 59      | LDA #59                                                 ; 
55070 02 | D71E E9 04      | SBC @#4                                                 ; 
55072 02 | D720 85 59      | STA #59                                                 ; 
55074 02 | D722 B0 02      | BCS #D726                                               ; 
55076 02 | D724 C6 58      | DEC #58                                                 ; 
55078 03 | D726 20 F8 D6   | JSR #D6F8                                               ; 
55081 03 | D729 20 B4 D6   | JSR #D6B4                                               ; 
55084 03 | D72C 20 F8 D6   | JSR #D6F8                                               ; 
55087 03 | D72F 20 FB D6   | JSR #D6FB                                               ; 
55090 03 | D732 20 FB D6   | JSR #D6FB                                               ; 
55093 03 | D735 20 FB D6   | JSR #D6FB                                               ; 
55096 03 | D738 20 B4 D6   | JSR #D6B4                                               ; 
55099 02 | D73B A9 00      | LDA @#0                                                 ; 
55101 02 | D73D 85 62      | STA #62                                                 ; 
55103 02 | D73F A5 5A      | LDA #5A                                                 ; 
55105 02 | D741 85 63      | STA #63                                                 ; 
55107 02 | D743 A5 5B      | LDA #5B                                                 ; 
55109 02 | D745 85 64      | STA #64                                                 ; 
55111 02 | D747 A5 5C      | LDA #5C                                                 ; 
55113 02 | D749 85 65      | STA #65                                                 ; 
55115 02 | D74B A5 5D      | LDA #5D                                                 ; 
55117 02 | D74D 85 66      | STA #66                                                 ; 
55119 02 | D74F A5 5E      | LDA #5E                                                 ; 
55121 01 | D751 2A         | ROL A                                                   ; 
55122 03 | D752 20 B4 D6   | JSR #D6B4                                               ; 
55125 02 | D755 A9 00      | LDA @#0                                                 ; 
55127 02 | D757 85 62      | STA #62                                                 ; 
55129 02 | D759 85 63      | STA #63                                                 ; 
55131 02 | D75B A5 5A      | LDA #5A                                                 ; 
55133 02 | D75D 85 64      | STA #64                                                 ; 
55135 02 | D75F A5 5B      | LDA #5B                                                 ; 
55137 02 | D761 85 65      | STA #65                                                 ; 
55139 02 | D763 A5 5C      | LDA #5C                                                 ; 
55141 02 | D765 85 66      | STA #66                                                 ; 
55143 02 | D767 A5 5D      | LDA #5D                                                 ; 
55145 01 | D769 2A         | ROL A                                                   ; 
55146 03 | D76A 20 B4 D6   | JSR #D6B4                                               ; 
55149 02 | D76D A5 5B      | LDA #5B                                                 ; 
55151 01 | D76F 2A         | ROL A                                                   ; 
55152 02 | D770 A5 5A      | LDA #5A                                                 ; 
55154 03 | D772 20 36 D6   | JSR #D636                                               ; 
55157 03 | D775 4C B7 D6   | JMP #D6B7                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55160 02 | D778 A0 FF      | LDY @#FF                                                ; 
55162 02 | D77A C9 2B      | CMP @#2B                                                ; 
55164 02 | D77C F0 05      | BEQ #D783                                               ; 
55166 02 | D77E C9 2D      | CMP @#2D                                                ; 
55168 02 | D780 D0 04      | BNE #D786                                               ; 
55170 01 | D782 C8         | INY                                                     ; 
55171 03 | D783 20 7B D6   | JSR #D67B                                               ; 
55174 03 | D786 20 C3 D4   | JSR #D4C3                                               ; 
55177 02 | D789 90 24      | BCC #D7AF                                               ; 
55179 01 | D78B AA         | TAX                                                     ; 
55180 03 | D78C 20 7B D6   | JSR #D67B                                               ; 
55183 03 | D78F 20 C3 D4   | JSR #D4C3                                               ; 
55186 02 | D792 90 10      | BCC #D7A4                                               ; 
55188 02 | D794 85 6E      | STA #6E                                                 ; 
55190 03 | D796 20 7B D6   | JSR #D67B                                               ; 
55193 01 | D799 8A         | TXA                                                     ; 
55194 02 | D79A 85 67      | STA #67                                                 ; 
55196 01 | D79C 0A         | ASL A                                                   ; 
55197 01 | D79D 0A         | ASL A                                                   ; 
55198 02 | D79E 65 67      | ADC #67                                                 ; 
55200 01 | D7A0 0A         | ASL A                                                   ; 
55201 02 | D7A1 65 6E      | ADC #6E                                                 ; 
55203 01 | D7A3 AA         | TAX                                                     ; 
55204 01 | D7A4 98         | TYA                                                     ; 
55205 02 | D7A5 D0 06      | BNE #D7AD                                               ; 
55207 02 | D7A7 86 6E      | STX #6E                                                 ; 
55209 01 | D7A9 38         | SEC                                                     ; 
55210 02 | D7AA E5 6E      | SBC #6E                                                 ; 
55212 01 | D7AC 60         | RTS                                                     ; 
                                                                                     ; 
55213 01 | D7AD 8A         | TXA                                                     ; 
55214 01 | D7AE 60         | RTS                                                     ; 
                                                                                     ; 
55215 02 | D7AF A9 00      | LDA @#0                                                 ; 
55217 01 | D7B1 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55218 01 | D7B2 48         | PHA                                                     ; 
55219 03 | D7B3 20 A4 DA   | JSR #DAA4                                               ; 
55222 01 | D7B6 68         | PLA                                                     ; 
55223 02 | D7B7 F0 F8      | BEQ #D7B1                                               ; 
55225 02 | D7B9 10 07      | BPL #D7C2                                               ; 
55227 02 | D7BB 85 57      | STA #57                                                 ; 
55229 02 | D7BD A9 00      | LDA @#0                                                 ; 
55231 01 | D7BF 38         | SEC                                                     ; 
55232 02 | D7C0 E5 57      | SBC #57                                                 ; 
55234 02 | D7C2 85 5A      | STA #5A                                                 ; 
55236 02 | D7C4 A9 88      | LDA @#88                                                ; 
55238 02 | D7C6 85 59      | STA #59                                                 ; 
55240 03 | D7C8 20 86 D6   | JSR #D686                                               ; 
55243 02 | D7CB F0 E4      | BEQ #D7B1                                               ; 
55245 02 | D7CD A5 5A      | LDA #5A                                                 ; 
55247 02 | D7CF D0 21      | BNE #D7F2                                               ; 
55249 02 | D7D1 A5 5B      | LDA #5B                                                 ; 
55251 02 | D7D3 85 5A      | STA #5A                                                 ; 
55253 02 | D7D5 A5 5C      | LDA #5C                                                 ; 
55255 02 | D7D7 85 5B      | STA #5B                                                 ; 
55257 02 | D7D9 A5 5D      | LDA #5D                                                 ; 
55259 02 | D7DB 85 5C      | STA #5C                                                 ; 
55261 02 | D7DD A5 5E      | LDA #5E                                                 ; 
55263 02 | D7DF 85 5D      | STA #5D                                                 ; 
55265 02 | D7E1 A9 00      | LDA @#0                                                 ; 
55267 02 | D7E3 85 5E      | STA #5E                                                 ; 
55269 01 | D7E5 38         | SEC                                                     ; 
55270 02 | D7E6 A5 59      | LDA #59                                                 ; 
55272 02 | D7E8 E9 08      | SBC @#8                                                 ; 
55274 02 | D7EA 85 59      | STA #59                                                 ; 
55276 02 | D7EC B0 DF      | BCS #D7CD                                               ; 
55278 02 | D7EE C6 58      | DEC #58                                                 ; 
55280 02 | D7F0 90 DB      | BCC #D7CD                                               ; 
55282 02 | D7F2 A5 5A      | LDA #5A                                                 ; 
55284 02 | D7F4 30 BB      | BMI #D7B1                                               ; 
55286 03 | D7F6 20 CD D6   | JSR #D6CD                                               ; 
55289 02 | D7F9 A5 59      | LDA #59                                                 ; 
55291 02 | D7FB D0 02      | BNE #D7FF                                               ; 
55293 02 | D7FD C6 58      | DEC #58                                                 ; 
55295 02 | D7FF C6 59      | DEC #59                                                 ; 
55297 03 | D801 4C F2 D7   | JMP #D7F2                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55300 02 | D804 A0 04      | LDY @#4                                                 ; 
55302 02 | D806 A9 00      | LDA @#0                                                 ; 
55304 02 | D808 85 66      | STA #66                                                 ; 
55306 02 | D80A 85 60      | STA #60                                                 ; 
55308 02 | D80C 85 5F      | STA #5F                                                 ; 
55310 02 | D80E B1 6F      | LDA (#6F),Y                                             ; 
55312 03 | D810 99 61 00   | STA #61,Y                                               ; 
55315 02 | D813 05 5F      | ORA #5F                                                 ; 
55317 02 | D815 85 5F      | STA #5F                                                 ; 
55319 01 | D817 88         | DEY                                                     ; 
55320 02 | D818 10 F4      | BPL #D80E                                               ; 
55322 01 | D81A AA         | TAX                                                     ; 
55323 02 | D81B F0 09      | BEQ #D826                                               ; 
55325 02 | D81D A5 62      | LDA #62                                                 ; 
55327 02 | D81F 85 5F      | STA #5F                                                 ; 
55329 02 | D821 09 80      | ORA @#80                                                ; 
55331 02 | D823 85 62      | STA #62                                                 ; 
55333 01 | D825 8A         | TXA                                                     ; 
55334 01 | D826 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55335 03 | D827 20 A2 DB   | JSR #DBA2                                               ; 
55338 02 | D82A D0 11      | BNE #D83D                                               ; 
55340 03 | D82C 20 A6 DB   | JSR #DBA6                                               ; 
55343 02 | D82F D0 0C      | BNE #D83D                                               ; 
55345 03 | D831 20 AA DB   | JSR #DBAA                                               ; 
55348 02 | D834 D0 07      | BNE #D83D                                               ; 
55350 02 | D836 A6 04      | LDX #4                                                  ; 
55352 02 | D838 A0 6F      | LDY @#6F                                                ; 
55354 03 | D83A 20 CD C3   | JSR #C3CD                                               ; 
55357 02 | D83D A0 00      | LDY @#0                                                 ; 
55359 02 | D83F A5 59      | LDA #59                                                 ; 
55361 02 | D841 91 6F      | STA (#6F),Y                                             ; 
55363 01 | D843 C8         | INY                                                     ; 
55364 02 | D844 A5 57      | LDA #57                                                 ; 
55366 02 | D846 29 80      | AND @#80                                                ; 
55368 02 | D848 85 57      | STA #57                                                 ; 
55370 02 | D84A A5 5A      | LDA #5A                                                 ; 
55372 02 | D84C 29 7F      | AND @#7F                                                ; 
55374 02 | D84E 05 57      | ORA #57                                                 ; 
55376 02 | D850 91 6F      | STA (#6F),Y                                             ; 
55378 01 | D852 C8         | INY                                                     ; 
55379 03 | D853 B9 59 00   | LDA #59,Y                                               ; 
55382 02 | D856 91 6F      | STA (#6F),Y                                             ; 
55384 02 | D858 C0 04      | CPY @#4                                                 ; 
55386 02 | D85A D0 F6      | BNE #D852                                               ; 
55388 01 | D85C 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55389 02 | D85D A0 52      | LDY @#52                                                ; 
55391 02 | D85F 84 6F      | STY #6F                                                 ; 
55393 02 | D861 A9 00      | LDA @#0                                                 ; 
55395 02 | D863 85 70      | STA #70                                                 ; 
55397 03 | D865 20 3D D8   | JSR #D83D                                               ; 
55400 03 | D868 20 D9 C4   | JSR #C4D9                                               ; 
55403 02 | D86B A5 56      | LDA #56                                                 ; 
55405 02 | D86D 95 73      | STA #73,X                                               ; 
55407 01 | D86F 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55408 02 | D870 A6 04      | LDX #4                                                  ; 
55410 03 | D872 20 CB C3   | JSR #C3CB                                               ; 
55413 02 | D875 B5 74      | LDA #74,X                                               ; 
55415 02 | D877 85 56      | STA #56                                                 ; 
55417 02 | D879 84 6F      | STY #6F                                                 ; 
55419 02 | D87B A9 00      | LDA @#0                                                 ; 
55421 02 | D87D 85 70      | STA #70                                                 ; 
55423 01 | D87F 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55424 02 | D880 A5 5E      | LDA #5E                                                 ; 
55426 02 | D882 C9 80      | CMP @#80                                                ; 
55428 02 | D884 90 07      | BCC #D88D                                               ; 
55430 02 | D886 F0 0A      | BEQ #D892                                               ; 
55432 02 | D888 A9 FF      | LDA @#FF                                                ; 
55434 03 | D88A 20 72 D7   | JSR #D772                                               ; 
55437 02 | D88D A9 00      | LDA @#0                                                 ; 
55439 02 | D88F 85 5E      | STA #5E                                                 ; 
55441 01 | D891 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55442 02 | D892 A5 5D      | LDA #5D                                                 ; 
55444 02 | D894 09 01      | ORA @#1                                                 ; 
55446 02 | D896 85 5D      | STA #5D                                                 ; 
55448 02 | D898 D0 F3      | BNE #D88D                                               ; 
55450 03 | D89A 20 C7 D8   | JSR #D8C7                                               ; 
55453 02 | D89D F0 06      | BEQ #D8A5                                               ; 
55455 02 | D89F A5 59      | LDA #59                                                 ; 
55457 02 | D8A1 C9 A0      | CMP @#A0                                                ; 
55459 02 | D8A3 B0 14      | BCS #D8B9                                               ; 
55461 02 | D8A5 46 5A      | LSR #5A                                                 ; 
55463 02 | D8A7 66 5B      | ROR #5B                                                 ; 
55465 02 | D8A9 66 5C      | ROR #5C                                                 ; 
55467 02 | D8AB 66 5D      | ROR #5D                                                 ; 
55469 02 | D8AD 66 62      | ROR #62                                                 ; 
55471 02 | D8AF 66 63      | ROR #63                                                 ; 
55473 02 | D8B1 66 64      | ROR #64                                                 ; 
55475 02 | D8B3 66 65      | ROR #65                                                 ; 
55477 02 | D8B5 E6 59      | INC #59                                                 ; 
55479 02 | D8B7 D0 E6      | BNE #D89F                                               ; 
55481 02 | D8B9 F0 16      | BEQ #D8D1                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55483 02 | D8BB A9 7F      | LDA @#7F                                                ; 
55485 02 | D8BD 85 5A      | STA #5A                                                 ; 
55487 02 | D8BF A9 FF      | LDA @#FF                                                ; 
55489 02 | D8C1 85 5B      | STA #5B                                                 ; 
55491 02 | D8C3 85 5C      | STA #5C                                                 ; 
55493 02 | D8C5 85 5D      | STA #5D                                                 ; 
55495 02 | D8C7 A2 08      | LDX @#8                                                 ; 
55497 02 | D8C9 A9 00      | LDA @#0                                                 ; 
55499 02 | D8CB 95 5F      | STA #5F,X                                               ; 
55501 01 | D8CD CA         | DEX                                                     ; 
55502 02 | D8CE D0 FB      | BNE #D8CB                                               ; 
55504 01 | D8D0 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55505 02 | D8D1 A5 57      | LDA #57                                                 ; 
55507 02 | D8D3 10 0C      | BPL #D8E1                                               ; 
55509 01 | D8D5 38         | SEC                                                     ; 
55510 02 | D8D6 A2 04      | LDX @#4                                                 ; 
55512 02 | D8D8 A9 00      | LDA @#0                                                 ; 
55514 02 | D8DA F5 59      | SBC #59,X                                               ; 
55516 02 | D8DC 95 59      | STA #59,X                                               ; 
55518 01 | D8DE CA         | DEX                                                     ; 
55519 02 | D8DF D0 F7      | BNE #D8D8                                               ; 
55521 01 | D8E1 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55522 02 | D8E2 A5 62      | LDA #62                                                 ; 
55524 02 | D8E4 10 23      | BPL #D909                                               ; 
55526 02 | D8E6 A2 04      | LDX @#4                                                 ; 
55528 02 | D8E8 A9 00      | LDA @#0                                                 ; 
55530 02 | D8EA F5 61      | SBC #61,X                                               ; 
55532 02 | D8EC 95 61      | STA #61,X                                               ; 
55534 01 | D8EE CA         | DEX                                                     ; 
55535 02 | D8EF D0 F7      | BNE #D8E8                                               ; 
55537 02 | D8F1 A5 57      | LDA #57                                                 ; 
55539 02 | D8F3 49 80      | EOR @#80                                                ; 
55541 02 | D8F5 85 57      | STA #57                                                 ; 
55543 02 | D8F7 10 11      | BPL #D90A                                               ; 
55545 02 | D8F9 E6 5D      | INC #5D                                                 ; 
55547 02 | D8FB D0 0C      | BNE #D909                                               ; 
55549 02 | D8FD E6 5C      | INC #5C                                                 ; 
55551 02 | D8FF D0 08      | BNE #D909                                               ; 
55553 02 | D901 E6 5B      | INC #5B                                                 ; 
55555 02 | D903 D0 04      | BNE #D909                                               ; 
55557 02 | D905 E6 5A      | INC #5A                                                 ; 
55559 02 | D907 F0 B2      | BEQ #D8BB                                               ; 
55561 01 | D909 60         | RTS                                                     ; 
                                                                                     ; 
55562 03 | D90A 20 D5 D8   | JSR #D8D5                                               ; 
55565 03 | D90D 20 F9 D8   | JSR #D8F9                                               ; 
55568 03 | D910 4C D5 D8   | JMP #D8D5                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55571 02 | D913 A2 05      | LDX @#5                                                 ; 
55573 02 | D915 B5 61      | LDA #61,X                                               ; 
55575 02 | D917 95 59      | STA #59,X                                               ; 
55577 01 | D919 CA         | DEX                                                     ; 
55578 02 | D91A D0 F9      | BNE #D915                                               ; 
55580 02 | D91C A9 80      | LDA @#80                                                ; 
55582 02 | D91E 85 59      | STA #59                                                 ; 
55584 03 | D920 4C C8 D7   | JMP #D7C8                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55587 03 | D923 20 04 D8   | JSR #D804                                               ; 
55590 03 | D926 20 3D D8   | JSR #D83D                                               ; 
55593 02 | D929 A2 08      | LDX @#8                                                 ; 
55595 02 | D92B B5 5E      | LDA #5E,X                                               ; 
55597 02 | D92D 95 56      | STA #56,X                                               ; 
55599 01 | D92F CA         | DEX                                                     ; 
55600 02 | D930 D0 F9      | BNE #D92B                                               ; 
55602 01 | D932 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ???
                                                                                     ; ---
                                                                                     ; 
55603 03 | D933 20 39 D9   | JSR #D939                                               ; 
55606 03 | D936 4C BF D1   | JMP #D1BF                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ???
                                                                                     ; ---
                                                                                     ; 
55609 03 | D939 20 BF D1   | JSR #D1BF                                               ; 
55612 03 | D93C 20 04 D8   | JSR #D804                                               ; 
55615 02 | D93F F0 F1      | BEQ #D932                                               ; 
55617 03 | D941 20 86 D6   | JSR #D686                                               ; 
55620 02 | D944 F0 E3      | BEQ #D929                                               ; 
55622 02 | D946 A5 59      | LDA #59                                                 ; 
55624 02 | D948 C5 61      | CMP #61                                                 ; 
55626 02 | D94A F0 26      | BEQ #D972                                               ; 
55628 02 | D94C 90 0F      | BCC #D95D                                               ; 
55630 02 | D94E E5 61      | SBC #61                                                 ; 
55632 02 | D950 C9 21      | CMP @#21                                                ; 
55634 02 | D952 B0 DE      | BCS #D932                                               ; 
55636 01 | D954 AA         | TAX                                                     ; 
55637 03 | D955 20 FB D6   | JSR #D6FB                                               ; 
55640 01 | D958 CA         | DEX                                                     ; 
55641 02 | D959 D0 FA      | BNE #D955                                               ; 
55643 02 | D95B F0 15      | BEQ #D972                                               ; 
                                                                                     ; 
55645 01 | D95D 38         | SEC                                                     ; 
55646 02 | D95E A5 61      | LDA #61                                                 ; 
55648 02 | D960 E5 59      | SBC #59                                                 ; 
55650 02 | D962 C9 21      | CMP @#21                                                ; 
55652 02 | D964 B0 C3      | BCS #D929                                               ; 
55654 01 | D966 AA         | TAX                                                     ; 
55655 01 | D967 18         | CLC                                                     ; 
55656 03 | D968 20 D8 D6   | JSR #D6D8                                               ; 
55659 01 | D96B CA         | DEX                                                     ; 
55660 02 | D96C D0 F9      | BNE #D967                                               ; 
55662 02 | D96E A5 61      | LDA #61                                                 ; 
55664 02 | D970 85 59      | STA #59                                                 ; 
55666 02 | D972 A5 57      | LDA #57                                                 ; 
55668 02 | D974 45 5F      | EOR #5F                                                 ; 
55670 02 | D976 10 49      | BPL #D9C1                                               ; 
55672 02 | D978 A5 5A      | LDA #5A                                                 ; 
55674 02 | D97A C5 62      | CMP #62                                                 ; 
55676 02 | D97C D0 1B      | BNE #D999                                               ; 
55678 02 | D97E A5 5B      | LDA #5B                                                 ; 
55680 02 | D980 C5 63      | CMP #63                                                 ; 
55682 02 | D982 D0 15      | BNE #D999                                               ; 
55684 02 | D984 A5 5C      | LDA #5C                                                 ; 
55686 02 | D986 C5 64      | CMP #64                                                 ; 
55688 02 | D988 D0 0F      | BNE #D999                                               ; 
55690 02 | D98A A5 5D      | LDA #5D                                                 ; 
55692 02 | D98C C5 65      | CMP #65                                                 ; 
55694 02 | D98E D0 09      | BNE #D999                                               ; 
55696 02 | D990 A5 5E      | LDA #5E                                                 ; 
55698 02 | D992 C5 66      | CMP #66                                                 ; 
55700 02 | D994 D0 03      | BNE #D999                                               ; 
55702 03 | D996 4C A4 DA   | JMP #DAA4                                               ; 
                                                                                     ; 
55705 02 | D999 B0 2D      | BCS #D9C8                                               ; 
55707 01 | D99B 38         | SEC                                                     ; 
55708 02 | D99C A5 66      | LDA #66                                                 ; 
55710 02 | D99E E5 5E      | SBC #5E                                                 ; 
55712 02 | D9A0 85 5E      | STA #5E                                                 ; 
55714 02 | D9A2 A5 65      | LDA #65                                                 ; 
55716 02 | D9A4 E5 5D      | SBC #5D                                                 ; 
55718 02 | D9A6 85 5D      | STA #5D                                                 ; 
55720 02 | D9A8 A5 64      | LDA #64                                                 ; 
55722 02 | D9AA E5 5C      | SBC #5C                                                 ; 
55724 02 | D9AC 85 5C      | STA #5C                                                 ; 
55726 02 | D9AE A5 63      | LDA #63                                                 ; 
55728 02 | D9B0 E5 5B      | SBC #5B                                                 ; 
55730 02 | D9B2 85 5B      | STA #5B                                                 ; 
55732 02 | D9B4 A5 62      | LDA #62                                                 ; 
55734 02 | D9B6 E5 5A      | SBC #5A                                                 ; 
55736 02 | D9B8 85 5A      | STA #5A                                                 ; 
55738 02 | D9BA A5 5F      | LDA #5F                                                 ; 
55740 02 | D9BC 85 57      | STA #57                                                 ; 
55742 03 | D9BE 4C 98 DA   | JMP #DA98                                               ; 
                                                                                     ; 
55745 01 | D9C1 18         | CLC                                                     ; 
55746 03 | D9C2 20 B4 D6   | JSR #D6B4                                               ; 
55749 03 | D9C5 4C 9B DA   | JMP #DA9B                                               ; 
                                                                                     ; 
55752 01 | D9C8 38         | SEC                                                     ; 
55753 02 | D9C9 A5 5E      | LDA #5E                                                 ; 
55755 02 | D9CB E5 66      | SBC #66                                                 ; 
55757 02 | D9CD 85 5E      | STA #5E                                                 ; 
55759 02 | D9CF A5 5D      | LDA #5D                                                 ; 
55761 02 | D9D1 E5 65      | SBC #65                                                 ; 
55763 02 | D9D3 85 5D      | STA #5D                                                 ; 
55765 02 | D9D5 A5 5C      | LDA #5C                                                 ; 
55767 02 | D9D7 E5 64      | SBC #64                                                 ; 
55769 02 | D9D9 85 5C      | STA #5C                                                 ; 
55771 02 | D9DB A5 5B      | LDA #5B                                                 ; 
55773 02 | D9DD E5 63      | SBC #63                                                 ; 
55775 02 | D9DF 85 5B      | STA #5B                                                 ; 
55777 02 | D9E1 A5 5A      | LDA #5A                                                 ; 
55779 02 | D9E3 E5 62      | SBC #62                                                 ; 
55781 02 | D9E5 85 5A      | STA #5A                                                 ; 
55783 03 | D9E7 4C 98 DA   | JMP #DA98                                               ; 
                                                                                     ; 
55786 01 | D9EA 00         | BRK                                                     ; 
                                                                                     ; 
                                                                                     ; ???
                                                                                     ; ---
                                                                                     ; 
55787 03 | D9EB 20 FC D0   | JSR #D0FC                                               ; 
55790 02 | D9EE A9 C7      | LDA @#C7                                                ; 
55792 01 | D9F0 48         | PHA                                                     ; 
55793 02 | D9F1 A2 C8      | LDX @#C8                                                ; 
55795 03 | D9F3 4C 0B D1   | JMP #D10B                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the conditional test '='
                                                                                     ; --------------------------------
                                                                                     ; 
55798 02 | D9F6 A9 5D      | LDA @#5D                                                ; 
55800 02 | D9F8 D0 12      | BNE #DA0C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the conditional test '<='
                                                                                     ; ---------------------------------
                                                                                     ; 
55802 02 | D9FA A9 66      | LDA @#66                                                ; 
55804 02 | D9FC D0 0E      | BNE #DA0C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the conditional test '<>'
                                                                                     ; ---------------------------------
                                                                                     ; 
55806 02 | D9FE A9 6F      | LDA @#6F                                                ; 
55808 02 | DA00 D0 0A      | BNE #DA0C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the conditional test '<'
                                                                                     ; --------------------------------
                                                                                     ; 
55810 02 | DA02 A9 76      | LDA @#76                                                ; 
55812 02 | DA04 D0 06      | BNE #DA0C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the conditional test '>='
                                                                                     ; ---------------------------------
                                                                                     ; 
55814 02 | DA06 A9 7D      | LDA @#7D                                                ; 
55816 02 | DA08 D0 02      | BNE #DA0C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the conditional test '>'
                                                                                     ; --------------------------------
                                                                                     ; 
55818 02 | DA0A A9 84      | LDA @#84                                                ; 
55820 01 | DA0C 48         | PHA                                                     ; 
55821 03 | DA0D 20 5D D8   | JSR #D85D                                               ; 
55824 03 | DA10 20 FC D0   | JSR #D0FC                                               ; 
55827 03 | DA13 20 70 D8   | JSR #D870                                               ; 
55830 02 | DA16 E6 04      | INC #4                                                  ; 
55832 03 | DA18 20 04 D8   | JSR #D804                                               ; 
55835 02 | DA1B A5 5F      | LDA #5F                                                 ; 
55837 02 | DA1D 29 80      | AND @#80                                                ; 
55839 02 | DA1F 85 5F      | STA #5F                                                 ; 
55841 02 | DA21 A0 00      | LDY @#0                                                 ; 
55843 02 | DA23 A5 57      | LDA #57                                                 ; 
55845 02 | DA25 29 80      | AND @#80                                                ; 
55847 02 | DA27 C5 5F      | CMP #5F                                                 ; 
55849 02 | DA29 D0 0D      | BNE #DA38                                               ; 
55851 02 | DA2B A2 00      | LDX @#0                                                 ; 
55853 02 | DA2D B5 61      | LDA #61,X                                               ; 
55855 02 | DA2F D5 59      | CMP #59,X                                               ; 
55857 02 | DA31 D0 0A      | BNE #DA3D                                               ; 
55859 01 | DA33 E8         | INX                                                     ; 
55860 02 | DA34 E0 05      | CPX @#5                                                 ; 
55862 02 | DA36 D0 F5      | BNE #DA2D                                               ; 
55864 01 | DA38 08         | PHP                                                     ; 
55865 02 | DA39 A6 04      | LDX #4                                                  ; 
55867 01 | DA3B 28         | PLP                                                     ; 
55868 01 | DA3C 60         | RTS                                                     ; 
                                                                                     ; 
55869 01 | DA3D 6A         | ROR A                                                   ; 
55870 02 | DA3E 45 5F      | EOR #5F                                                 ; 
55872 01 | DA40 2A         | ROL A                                                   ; 
55873 02 | DA41 A9 01      | LDA @#1                                                 ; 
55875 02 | DA43 D0 F3      | BNE #DA38                                               ; 
55877 03 | DA45 20 86 D6   | JSR #D686                                               ; 
55880 02 | DA48 F0 F2      | BEQ #DA3C                                               ; 
55882 03 | DA4A 20 04 D8   | JSR #D804                                               ; 
55885 02 | DA4D D0 03      | BNE #DA52                                               ; 
55887 03 | DA4F 4C A4 DA   | JMP #DAA4                                               ; 
                                                                                     ; 
55890 01 | DA52 18         | CLC                                                     ; 
55891 02 | DA53 A5 59      | LDA #59                                                 ; 
55893 02 | DA55 65 61      | ADC #61                                                 ; 
55895 02 | DA57 85 59      | STA #59                                                 ; 
55897 02 | DA59 90 02      | BCC #DA5D                                               ; 
55899 02 | DA5B E6 58      | INC #58                                                 ; 
55901 01 | DA5D 38         | SEC                                                     ; 
55902 02 | DA5E A5 59      | LDA #59                                                 ; 
55904 02 | DA60 E9 80      | SBC @#80                                                ; 
55906 02 | DA62 85 59      | STA #59                                                 ; 
55908 02 | DA64 B0 02      | BCS #DA68                                               ; 
55910 02 | DA66 C6 58      | DEC #58                                                 ; 
55912 02 | DA68 A2 05      | LDX @#5                                                 ; 
55914 02 | DA6A A0 00      | LDY @#0                                                 ; 
55916 02 | DA6C B5 59      | LDA #59,X                                               ; 
55918 02 | DA6E 95 66      | STA #66,X                                               ; 
55920 02 | DA70 94 59      | STY #59,X                                               ; 
55922 01 | DA72 CA         | DEX                                                     ; 
55923 02 | DA73 D0 F7      | BNE #DA6C                                               ; 
55925 02 | DA75 A5 57      | LDA #57                                                 ; 
55927 02 | DA77 45 5F      | EOR #5F                                                 ; 
55929 02 | DA79 85 57      | STA #57                                                 ; 
55931 02 | DA7B A0 20      | LDY @#20                                                ; 
55933 03 | DA7D 20 FB D6   | JSR #D6FB                                               ; 
55936 02 | DA80 A5 67      | LDA #67                                                 ; 
55938 02 | DA82 10 04      | BPL #DA88                                               ; 
55940 01 | DA84 18         | CLC                                                     ; 
55941 03 | DA85 20 42 D6   | JSR #D642                                               ; 
55944 03 | DA88 20 FB D6   | JSR #D6FB                                               ; 
55947 02 | DA8B 06 6B      | ASL #6B                                                 ; 
55949 02 | DA8D 26 6A      | ROL #6A                                                 ; 
55951 02 | DA8F 26 69      | ROL #69                                                 ; 
55953 02 | DA91 26 68      | ROL #68                                                 ; 
55955 02 | DA93 26 67      | ROL #67                                                 ; 
55957 01 | DA95 88         | DEY                                                     ; 
55958 02 | DA96 D0 E8      | BNE #DA80                                               ; 
55960 03 | DA98 20 C8 D7   | JSR #D7C8                                               ; 
55963 03 | DA9B 20 80 D8   | JSR #D880                                               ; 
55966 02 | DA9E A5 58      | LDA #58                                                 ; 
55968 02 | DAA0 F0 0B      | BEQ #DAAD                                               ; 
55970 02 | DAA2 10 03      | BPL #DAA7                                               ; 
55972 02 | DAA4 A2 08      | LDX @#8                                                 ; 
55974 02 | DAA6 A9 00      | LDA @#0                                                 ; 
55976 02 | DAA8 95 56      | STA #56,X                                               ; 
55978 01 | DAAA CA         | DEX                                                     ; 
55979 02 | DAAB D0 FB      | BNE #DAA8                                               ; 
55981 01 | DAAD 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
55982 03 | DAAE 20 31 D8   | JSR #D831                                               ; 
55985 03 | DAB1 20 8D DE   | JSR #DE8D                                               ; 
55988 02 | DAB4 D0 26      | BNE #DADC                                               ; 
55990 03 | DAB6 20 86 D6   | JSR #D686                                               ; 
55993 02 | DAB9 F0 EC      | BEQ #DAA7                                               ; 
55995 03 | DABB 20 C3 D6   | JSR #D6C3                                               ; 
55998 03 | DABE 20 E5 D1   | JSR #D1E5                                               ; 
56001 02 | DAC1 D0 23      | BNE #DAE6                                               ; 
56003 01 | DAC3 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'TAN'
                                                                                     ; -------------------------
                                                                                     ; 
56004 03 | DAC4 20 EB D0   | JSR #D0EB                                               ; 
56007 03 | DAC7 20 9E DB   | JSR #DB9E                                               ; 
56010 03 | DACA 20 3D D8   | JSR #D83D                                               ; 
56013 03 | DACD 20 E6 DC   | JSR #DCE6                                               ; 
56016 03 | DAD0 20 9E DB   | JSR #DB9E                                               ; 
56019 03 | DAD3 20 23 D9   | JSR #D923                                               ; 
56022 03 | DAD6 20 F1 DC   | JSR #DCF1                                               ; 
56025 03 | DAD9 20 9E DB   | JSR #DB9E                                               ; 
56028 03 | DADC 20 86 D6   | JSR #D686                                               ; 
56031 02 | DADF F0 CC      | BEQ #DAAD                                               ; 
56033 03 | DAE1 20 04 D8   | JSR #D804                                               ; 
56036 02 | DAE4 F0 C1      | BEQ #DAA7                                               ; 
56038 02 | DAE6 A5 57      | LDA #57                                                 ; 
56040 02 | DAE8 45 5F      | EOR #5F                                                 ; 
56042 02 | DAEA 85 57      | STA #57                                                 ; 
56044 01 | DAEC 38         | SEC                                                     ; 
56045 02 | DAED A5 59      | LDA #59                                                 ; 
56047 02 | DAEF E5 61      | SBC #61                                                 ; 
56049 02 | DAF1 85 59      | STA #59                                                 ; 
56051 02 | DAF3 B0 02      | BCS #DAF7                                               ; 
56053 02 | DAF5 C6 58      | DEC #58                                                 ; 
56055 01 | DAF7 18         | CLC                                                     ; 
56056 02 | DAF8 A5 59      | LDA #59                                                 ; 
56058 02 | DAFA 69 81      | ADC @#81                                                ; 
56060 02 | DAFC 85 59      | STA #59                                                 ; 
56062 02 | DAFE 90 02      | BCC #DB02                                               ; 
56064 02 | DB00 E6 58      | INC #58                                                 ; 
56066 02 | DB02 A2 05      | LDX @#5                                                 ; 
56068 02 | DB04 B5 59      | LDA #59,X                                               ; 
56070 02 | DB06 95 66      | STA #66,X                                               ; 
56072 01 | DB08 CA         | DEX                                                     ; 
56073 02 | DB09 D0 F9      | BNE #DB04                                               ; 
56075 02 | DB0B 46 67      | LSR #67                                                 ; 
56077 02 | DB0D 66 68      | ROR #68                                                 ; 
56079 02 | DB0F 66 69      | ROR #69                                                 ; 
56081 02 | DB11 66 6A      | ROR #6A                                                 ; 
56083 02 | DB13 66 6B      | ROR #6B                                                 ; 
56085 03 | DB15 20 FB D6   | JSR #D6FB                                               ; 
56088 02 | DB18 A2 27      | LDX @#27                                                ; 
56090 02 | DB1A A5 67      | LDA #67                                                 ; 
56092 02 | DB1C C5 62      | CMP #62                                                 ; 
56094 02 | DB1E D0 16      | BNE #DB36                                               ; 
56096 02 | DB20 A5 68      | LDA #68                                                 ; 
56098 02 | DB22 C5 63      | CMP #63                                                 ; 
56100 02 | DB24 D0 10      | BNE #DB36                                               ; 
56102 02 | DB26 A5 69      | LDA #69                                                 ; 
56104 02 | DB28 C5 64      | CMP #64                                                 ; 
56106 02 | DB2A D0 0A      | BNE #DB36                                               ; 
56108 02 | DB2C A5 6A      | LDA #6A                                                 ; 
56110 02 | DB2E C5 65      | CMP #65                                                 ; 
56112 02 | DB30 D0 04      | BNE #DB36                                               ; 
56114 02 | DB32 A5 6B      | LDA #6B                                                 ; 
56116 02 | DB34 C5 66      | CMP #66                                                 ; 
56118 02 | DB36 90 24      | BCC #DB5C                                               ; 
56120 02 | DB38 A5 6B      | LDA #6B                                                 ; 
56122 02 | DB3A E5 66      | SBC #66                                                 ; 
56124 02 | DB3C 85 6B      | STA #6B                                                 ; 
56126 02 | DB3E A5 6A      | LDA #6A                                                 ; 
56128 02 | DB40 E5 65      | SBC #65                                                 ; 
56130 02 | DB42 85 6A      | STA #6A                                                 ; 
56132 02 | DB44 A5 69      | LDA #69                                                 ; 
56134 02 | DB46 E5 64      | SBC #64                                                 ; 
56136 02 | DB48 85 69      | STA #69                                                 ; 
56138 02 | DB4A A5 68      | LDA #68                                                 ; 
56140 02 | DB4C E5 63      | SBC #63                                                 ; 
56142 02 | DB4E 85 68      | STA #68                                                 ; 
56144 02 | DB50 A5 67      | LDA #67                                                 ; 
56146 02 | DB52 E5 62      | SBC #62                                                 ; 
56148 02 | DB54 85 67      | STA #67                                                 ; 
56150 02 | DB56 A5 5E      | LDA #5E                                                 ; 
56152 02 | DB58 09 01      | ORA @#1                                                 ; 
56154 02 | DB5A 85 5E      | STA #5E                                                 ; 
56156 03 | DB5C 20 CD D6   | JSR #D6CD                                               ; 
56159 02 | DB5F 06 6B      | ASL #6B                                                 ; 
56161 02 | DB61 26 6A      | ROL #6A                                                 ; 
56163 02 | DB63 26 69      | ROL #69                                                 ; 
56165 02 | DB65 26 68      | ROL #68                                                 ; 
56167 02 | DB67 26 67      | ROL #67                                                 ; 
56169 01 | DB69 CA         | DEX                                                     ; 
56170 02 | DB6A D0 AE      | BNE #DB1A                                               ; 
56172 03 | DB6C 4C 98 DA   | JMP #DA98                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'SQR'
                                                                                     ; -------------------------
                                                                                     ; 
56175 03 | DB6F 20 EB D0   | JSR #D0EB                                               ; 
56178 03 | DB72 20 86 D6   | JSR #D686                                               ; 
56181 02 | DB75 F0 26      | BEQ #DB9D                                               ; 
56183 02 | DB77 10 01      | BPL #DB7A                                               ; 
56185 01 | DB79 00         | BRK                                                     ; 
                                                                                     ; 
56186 03 | DB7A 20 31 D8   | JSR #D831                                               ; 
56189 02 | DB7D A5 59      | LDA #59                                                 ; 
56191 01 | DB7F 4A         | LSR A                                                   ; 
56192 02 | DB80 69 40      | ADC @#40                                                ; 
56194 02 | DB82 85 59      | STA #59                                                 ; 
56196 02 | DB84 A9 05      | LDA @#5                                                 ; 
56198 02 | DB86 85 6E      | STA #6E                                                 ; 
56200 03 | DB88 20 27 D8   | JSR #D827                                               ; 
56203 03 | DB8B 20 AA DB   | JSR #DBAA                                               ; 
56206 03 | DB8E 20 B6 DA   | JSR #DAB6                                               ; 
56209 03 | DB91 20 A2 DB   | JSR #DBA2                                               ; 
56212 03 | DB94 20 3C D9   | JSR #D93C                                               ; 
56215 02 | DB97 C6 59      | DEC #59                                                 ; 
56217 02 | DB99 C6 6E      | DEC #6E                                                 ; 
56219 02 | DB9B D0 EB      | BNE #DB88                                               ; 
56221 01 | DB9D 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
56222 02 | DB9E A9 D4      | LDA @#D4                                                ; 
56224 02 | DBA0 D0 0A      | BNE #DBAC                                               ; 
56226 02 | DBA2 A9 CA      | LDA @#CA                                                ; 
56228 02 | DBA4 D0 06      | BNE #DBAC                                               ; 
56230 02 | DBA6 A9 CF      | LDA @#CF                                                ; 
56232 02 | DBA8 D0 02      | BNE #DBAC                                               ; 
56234 02 | DBAA A9 C5      | LDA @#C5                                                ; 
56236 02 | DBAC 85 6F      | STA #6F                                                 ; 
56238 02 | DBAE A9 03      | LDA @#3                                                 ; 
56240 02 | DBB0 85 70      | STA #70                                                 ; 
56242 01 | DBB2 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
56243 03 | DBB3 20 EB D0   | JSR #D0EB                                               ; 
56246 03 | DBB6 20 86 D6   | JSR #D686                                               ; 
56249 02 | DBB9 F0 02      | BEQ #DBBD                                               ; 
56251 02 | DBBB 10 01      | BPL #DBBE                                               ; 
56253 01 | DBBD 00         | BRK                                                     ; 
                                                                                     ; 
56254 02 | DBBE A5 59      | LDA #59                                                 ; 
56256 01 | DBC0 48         | PHA                                                     ; 
56257 02 | DBC1 A9 81      | LDA @#81                                                ; 
56259 02 | DBC3 85 59      | STA #59                                                 ; 
56261 03 | DBC5 20 C7 D8   | JSR #D8C7                                               ; 
56264 02 | DBC8 A9 C0      | LDA @#C0                                                ; 
56266 02 | DBCA 85 62      | STA #62                                                 ; 
56268 02 | DBCC A9 81      | LDA @#81                                                ; 
56270 02 | DBCE 85 61      | STA #61                                                 ; 
56272 02 | DBD0 85 5F      | STA #5F                                                 ; 
56274 03 | DBD2 20 41 D9   | JSR #D941                                               ; 
56277 02 | DBD5 E6 59      | INC #59                                                 ; 
56279 02 | DBD7 A9 FE      | LDA @#FE                                                ; 
56281 02 | DBD9 A0 DB      | LDY @#DB                                                ; 
56283 03 | DBDB 20 27 DC   | JSR #DC27                                               ; 
56286 03 | DBDE 20 31 D8   | JSR #D831                                               ; 
56289 01 | DBE1 68         | PLA                                                     ; 
56290 01 | DBE2 38         | SEC                                                     ; 
56291 02 | DBE3 E9 81      | SBC @#81                                                ; 
56293 03 | DBE5 20 B2 D7   | JSR #D7B2                                               ; 
56296 02 | DBE8 A9 F9      | LDA @#F9                                                ; 
56298 02 | DBEA 85 6F      | STA #6F                                                 ; 
56300 02 | DBEC A9 DB      | LDA @#DB                                                ; 
56302 02 | DBEE 85 70      | STA #70                                                 ; 
56304 03 | DBF0 20 45 DA   | JSR #DA45                                               ; 
56307 03 | DBF3 20 AA DB   | JSR #DBAA                                               ; 
56310 03 | DBF6 4C 3C D9   | JMP #D93C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? Table
                                                                                     ; ---------
                                                                                     ; 
56313 07 | DBF9 80 31 72 17 F8 07 85                                                 ; 
56320 16 | DC00 17 6E D4 85 80 28 C7 12 A0 84 70 4E 5F F2 81 00                      ; 
56336 16 | DC10 00 FE EF 84 0F FF DA E1 81 7F FF FF 93 82 40 00                      ; 
56352 07 | DC20 00 0C 7F 4F 99 1F 65                                                 ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
56359 02 | DC27 85 71      | STA #71                                                 ; 
56361 02 | DC29 84 72      | STY #72                                                 ; 
56363 03 | DC2B 20 31 D8   | JSR #D831                                               ; 
56366 02 | DC2E A0 00      | LDY @#0                                                 ; 
56368 02 | DC30 B1 71      | LDA (#71),Y                                             ; 
56370 02 | DC32 85 6C      | STA #6C                                                 ; 
56372 02 | DC34 E6 71      | INC #71                                                 ; 
56374 02 | DC36 D0 02      | BNE #DC3A                                               ; 
56376 02 | DC38 E6 72      | INC #72                                                 ; 
56378 02 | DC3A A5 71      | LDA #71                                                 ; 
56380 02 | DC3C 85 6F      | STA #6F                                                 ; 
56382 02 | DC3E A5 72      | LDA #72                                                 ; 
56384 02 | DC40 85 70      | STA #70                                                 ; 
56386 03 | DC42 20 E5 D1   | JSR #D1E5                                               ; 
56389 03 | DC45 20 AA DB   | JSR #DBAA                                               ; 
56392 03 | DC48 20 B6 DA   | JSR #DAB6                                               ; 
56395 01 | DC4B 18         | CLC                                                     ; 
56396 02 | DC4C A5 71      | LDA #71                                                 ; 
56398 02 | DC4E 69 05      | ADC @#5                                                 ; 
56400 02 | DC50 85 71      | STA #71                                                 ; 
56402 02 | DC52 85 6F      | STA #6F                                                 ; 
56404 02 | DC54 A5 72      | LDA #72                                                 ; 
56406 02 | DC56 69 00      | ADC @#0                                                 ; 
56408 02 | DC58 85 72      | STA #72                                                 ; 
56410 02 | DC5A 85 70      | STA #70                                                 ; 
56412 03 | DC5C 20 3C D9   | JSR #D93C                                               ; 
56415 02 | DC5F C6 6C      | DEC #6C                                                 ; 
56417 02 | DC61 D0 E2      | BNE #DC45                                               ; 
56419 01 | DC63 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'ATN'
                                                                                     ; -------------------------
                                                                                     ; 
56420 03 | DC64 20 EB D0   | JSR #D0EB                                               ; 
56423 03 | DC67 20 86 D6   | JSR #D686                                               ; 
56426 02 | DC6A F0 0D      | BEQ #DC79                                               ; 
56428 02 | DC6C 10 0C      | BPL #DC7A                                               ; 
56430 02 | DC6E A9 00      | LDA @#0                                                 ; 
56432 02 | DC70 85 57      | STA #57                                                 ; 
56434 03 | DC72 20 7A DC   | JSR #DC7A                                               ; 
56437 02 | DC75 A9 80      | LDA @#80                                                ; 
56439 02 | DC77 85 57      | STA #57                                                 ; 
56441 01 | DC79 60         | RTS                                                     ; 
                                                                                     ; 
56442 02 | DC7A A5 59      | LDA #59                                                 ; 
56444 02 | DC7C C9 81      | CMP @#81                                                ; 
56446 02 | DC7E 90 0C      | BCC #DC8C                                               ; 
56448 03 | DC80 20 AE DA   | JSR #DAAE                                               ; 
56451 03 | DC83 20 8C DC   | JSR #DC8C                                               ; 
56454 03 | DC86 20 93 DD   | JSR #DD93                                               ; 
56457 03 | DC89 4C 39 D9   | JMP #D939                                               ; 
                                                                                     ; 
56460 02 | DC8C A5 59      | LDA #59                                                 ; 
56462 02 | DC8E C9 73      | CMP @#73                                                ; 
56464 02 | DC90 90 E7      | BCC #DC79                                               ; 
56466 03 | DC92 20 2C D8   | JSR #D82C                                               ; 
56469 03 | DC95 20 C7 D8   | JSR #D8C7                                               ; 
56472 02 | DC98 A9 80      | LDA @#80                                                ; 
56474 02 | DC9A 85 61      | STA #61                                                 ; 
56476 02 | DC9C 85 62      | STA #62                                                 ; 
56478 02 | DC9E 85 5F      | STA #5F                                                 ; 
56480 03 | DCA0 20 41 D9   | JSR #D941                                               ; 
56483 02 | DCA3 A9 B0      | LDA @#B0                                                ; 
56485 02 | DCA5 A0 DC      | LDY @#DC                                                ; 
56487 03 | DCA7 20 27 DC   | JSR #DC27                                               ; 
56490 03 | DCAA 20 A6 DB   | JSR #DBA6                                               ; 
56493 03 | DCAD 4C 45 DA   | JMP #DA45                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? Table
                                                                                     ; ---------
                                                                                     ; 
56496 16 | DCB0 09 85 A3 59 E8 67 80 1C 9D 07 36 80 57 BB 78 DF                      ; 
56512 16 | DCC0 80 CA 9A 0E 83 84 8C BB CA 6E 81 95 96 06 DE 81                      ; 
56528 16 | DCD0 0A C7 6C 52 7F 7D AD 90 A1 82 FB 62 57 2F 80 6D                      ; 
56544 03 | DCE0 63 38 2C                                                             ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'COS'
                                                                                     ; -------------------------
                                                                                     ; 
56547 03 | DCE3 20 EB D0   | JSR #D0EB                                               ; 
56550 03 | DCE6 20 24 DD   | JSR #DD24                                               ; 
56553 02 | DCE9 E6 6E      | INC #6E                                                 ; 
56555 03 | DCEB 4C F4 DC   | JMP #DCF4                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'SIN'
                                                                                     ; -------------------------
                                                                                     ; 
56558 03 | DCEE 20 EB D0   | JSR #D0EB                                               ; 
56561 03 | DCF1 20 24 DD   | JSR #DD24                                               ; 
56564 02 | DCF4 46 6E      | LSR #6E                                                 ; 
56566 02 | DCF6 90 03      | BCC #DCFB                                               ; 
56568 03 | DCF8 20 86 DC   | JSR #DC86                                               ; 
56571 02 | DCFB 46 6E      | LSR #6E                                                 ; 
56573 02 | DCFD 90 06      | BCC #DD05                                               ; 
56575 03 | DCFF 20 05 DD   | JSR #DD05                                               ; 
56578 03 | DD02 4C BF D1   | JMP #D1BF                                               ; 
                                                                                     ; 
56581 03 | DD05 20 2C D8   | JSR #D82C                                               ; 
56584 03 | DD08 20 93 DD   | JSR #DD93                                               ; 
56587 03 | DD0B 20 04 D8   | JSR #D804                                               ; 
56590 02 | DD0E C6 61      | DEC #61                                                 ; 
56592 02 | DD10 A9 80      | LDA @#80                                                ; 
56594 02 | DD12 85 5F      | STA #5F                                                 ; 
56596 03 | DD14 20 41 D9   | JSR #D941                                               ; 
56599 02 | DD17 A9 A6      | LDA @#A6                                                ; 
56601 02 | DD19 A0 DD      | LDY @#DD                                                ; 
56603 03 | DD1B 20 27 DC   | JSR #DC27                                               ; 
56606 03 | DD1E 20 A6 DB   | JSR #DBA6                                               ; 
56609 03 | DD21 4C 45 DA   | JMP #DA45                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ???
                                                                                     ; ---
                                                                                     ; 
56612 02 | DD24 A5 59      | LDA #59                                                 ; 
56614 02 | DD26 C9 98      | CMP @#98                                                ; 
56616 02 | DD28 B0 54      | BCS #DD7E                                               ; 
56618 03 | DD2A 20 31 D8   | JSR #D831                                               ; 
56621 03 | DD2D 20 93 DD   | JSR #DD93                                               ; 
56624 03 | DD30 20 DC DA   | JSR #DADC                                               ; 
56627 03 | DD33 20 9A D8   | JSR #D89A                                               ; 
56630 02 | DD36 A5 5D      | LDA #5D                                                 ; 
56632 02 | DD38 85 6E      | STA #6E                                                 ; 
56634 02 | DD3A 05 5C      | ORA #5C                                                 ; 
56636 02 | DD3C 05 5B      | ORA #5B                                                 ; 
56638 02 | DD3E 05 5A      | ORA #5A                                                 ; 
56640 02 | DD40 F0 3E      | BEQ #DD80                                               ; 
56642 03 | DD42 20 AC D2   | JSR #D2AC                                               ; 
56645 03 | DD45 20 27 D8   | JSR #D827                                               ; 
56648 03 | DD48 20 86 DD   | JSR #DD86                                               ; 
56651 03 | DD4B 20 45 DA   | JSR #DA45                                               ; 
56654 03 | DD4E 20 AA DB   | JSR #DBAA                                               ; 
56657 03 | DD51 20 3C D9   | JSR #D93C                                               ; 
56660 03 | DD54 20 3D D8   | JSR #D83D                                               ; 
56663 03 | DD57 20 A2 DB   | JSR #DBA2                                               ; 
56666 03 | DD5A 20 E5 D1   | JSR #D1E5                                               ; 
56669 03 | DD5D 20 8A DD   | JSR #DD8A                                               ; 
56672 03 | DD60 20 45 DA   | JSR #DA45                                               ; 
56675 03 | DD63 20 AA DB   | JSR #DBAA                                               ; 
56678 03 | DD66 20 3C D9   | JSR #D93C                                               ; 
56681 02 | DD69 A5 57      | LDA #57                                                 ; 
56683 02 | DD6B 10 12      | BPL #DD7F                                               ; 
56685 03 | DD6D 20 8A DD   | JSR #DD8A                                               ; 
56688 03 | DD70 20 33 D9   | JSR #D933                                               ; 
56691 03 | DD73 20 86 DD   | JSR #DD86                                               ; 
56694 03 | DD76 20 33 D9   | JSR #D933                                               ; 
56697 02 | DD79 C6 6E      | DEC #6E                                                 ; 
56699 03 | DD7B 4C 69 DD   | JMP #DD69                                               ; 
                                                                                     ; 
56702 01 | DD7E 00         | BRK                                                     ; 
                                                                                     ; 
56703 01 | DD7F 60         | RTS                                                     ; 
                                                                                     ; 
56704 03 | DD80 20 DA D2   | JSR #D2DA                                               ; 
56707 03 | DD83 4C 69 DD   | JMP #DD69                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
56710 02 | DD86 A9 97      | LDA @#97                                                ; 
56712 02 | DD88 D0 02      | BNE #DD8C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
56714 02 | DD8A A9 9C      | LDA @#9C                                                ; 
56716 02 | DD8C 85 6F      | STA #6F                                                 ; 
56718 02 | DD8E A9 DD      | LDA @#DD                                                ; 
56720 02 | DD90 85 70      | STA #70                                                 ; 
56722 01 | DD92 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
56723 02 | DD93 A9 A1      | LDA @#A1                                                ; 
56725 02 | DD95 D0 F5      | BNE #DD8C                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? Table
                                                                                     ; ---------
                                                                                     ; 
56727 09 | DD97 81 C9 00 00 00 75 FD AA 22                                           ; 
56736 16 | DDA0 17 81 49 0F DA A2 08 84 04 C7 3C FB 81 E0 4F 5D                      ; 
56752 16 | DDB0 AD 82 80 00 69 B8 82 5B CF 1D B5 82 BF CE 82 1E                      ; 
56768 16 | DDC0 82 45 44 7F 32 7F 62 44 5A D2 83 82 14 8A 27 80                      ; 
56784 04 | DDD0 66 7B 21 4D                                                          ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'EXP'
                                                                                     ; -------------------------
                                                                                     ; 
56788 03 | DDD4 20 EB D0   | JSR #D0EB                                               ; 
56791 02 | DDD7 A5 59      | LDA #59                                                 ; 
56793 02 | DDD9 C9 87      | CMP @#87                                                ; 
56795 02 | DDDB 90 10      | BCC #DDED                                               ; 
56797 02 | DDDD D0 06      | BNE #DDE5                                               ; 
56799 02 | DDDF A5 5A      | LDA #5A                                                 ; 
56801 02 | DDE1 C9 B3      | CMP @#B3                                                ; 
56803 02 | DDE3 90 08      | BCC #DDED                                               ; 
56805 02 | DDE5 A5 57      | LDA #57                                                 ; 
56807 02 | DDE7 10 03      | BPL #DDEC                                               ; 
56809 03 | DDE9 4C A4 DA   | JMP #DAA4                                               ; 
                                                                                     ; 
56812 01 | DDEC 00         | BRK                                                     ; 
                                                                                     ; 
56813 02 | DDED A5 59      | LDA #59                                                 ; 
56815 02 | DDEF C9 80      | CMP @#80                                                ; 
56817 02 | DDF1 90 29      | BCC #DE1C                                               ; 
56819 03 | DDF3 20 9A D8   | JSR #D89A                                               ; 
56822 03 | DDF6 20 E2 D8   | JSR #D8E2                                               ; 
56825 02 | DDF9 A5 5D      | LDA #5D                                                 ; 
56827 02 | DDFB 85 6E      | STA #6E                                                 ; 
56829 03 | DDFD 20 13 D9   | JSR #D913                                               ; 
56832 03 | DE00 20 1C DE   | JSR #DE1C                                               ; 
56835 03 | DE03 20 2C D8   | JSR #D82C                                               ; 
56838 02 | DE06 A9 23      | LDA @#23                                                ; 
56840 02 | DE08 85 6F      | STA #6F                                                 ; 
56842 02 | DE0A A9 DE      | LDA @#DE                                                ; 
56844 02 | DE0C 85 70      | STA #70                                                 ; 
56846 03 | DE0E 20 E5 D1   | JSR #D1E5                                               ; 
56849 02 | DE11 A5 6E      | LDA #6E                                                 ; 
56851 03 | DE13 20 51 DE   | JSR #DE51                                               ; 
56854 03 | DE16 20 A6 DB   | JSR #DBA6                                               ; 
56857 03 | DE19 4C 45 DA   | JMP #DA45                                               ; 
                                                                                     ; 
56860 02 | DE1C A9 28      | LDA @#28                                                ; 
56862 02 | DE1E A0 DE      | LDY @#DE                                                ; 
56864 03 | DE20 4C 27 DC   | JMP #DC27                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? Table
                                                                                     ; ---------
                                                                                     ; 
56867 13 | DE23 82 2D F8 54 58 07 83 E0 20 86 5B 82 80                               ; 
56880 16 | DE30 53 93 B8 83 20 00 06 A1 82 00 00 21 63 82 C0 00                      ; 
56896 16 | DE40 00 02 82 80 00 00 0C 81 00 00 00 00 81 00 00 00                      ; 
56912 01 | DE50 00                                                                   ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? subroutine
                                                                                     ; --------------
                                                                                     ; 
56913 01 | DE51 AA         | TAX                                                     ; 
56914 02 | DE52 10 09      | BPL #DE5D                                               ; 
56916 01 | DE54 CA         | DEX                                                     ; 
56917 01 | DE55 8A         | TXA                                                     ; 
56918 02 | DE56 49 FF      | EOR @#FF                                                ; 
56920 01 | DE58 48         | PHA                                                     ; 
56921 03 | DE59 20 AE DA   | JSR #DAAE                                               ; 
56924 01 | DE5C 68         | PLA                                                     ; 
56925 01 | DE5D 48         | PHA                                                     ; 
56926 03 | DE5E 20 31 D8   | JSR #D831                                               ; 
56929 03 | DE61 20 8D DE   | JSR #DE8D                                               ; 
56932 01 | DE64 68         | PLA                                                     ; 
56933 02 | DE65 F0 0A      | BEQ #DE71                                               ; 
56935 01 | DE67 38         | SEC                                                     ; 
56936 02 | DE68 E9 01      | SBC @#1                                                 ; 
56938 01 | DE6A 48         | PHA                                                     ; 
56939 03 | DE6B 20 45 DA   | JSR #DA45                                               ; 
56942 03 | DE6E 4C 64 DE   | JMP #DE64                                               ; 
                                                                                     ; 
56945 01 | DE71 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'HTN'
                                                                                     ; -------------------------
                                                                                     ; 
56946 03 | DE72 20 EB D0   | JSR #D0EB                                               ; 
56949 02 | DE75 A5 57      | LDA #57                                                 ; 
56951 02 | DE77 10 0A      | BPL #DE83                                               ; 
56953 02 | DE79 A9 00      | LDA @#0                                                 ; 
56955 02 | DE7B 85 57      | STA #57                                                 ; 
56957 03 | DE7D 20 83 DE   | JSR #DE83                                               ; 
56960 03 | DE80 4C BF D1   | JMP #D1BF                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Something to do with 'HTN' subroutine
                                                                                     ; -------------------------------------
                                                                                     ; 
56963 02 | DE83 A5 59      | LDA #59                                                 ; 
56965 02 | DE85 C9 81      | CMP @#81                                                ; 
56967 02 | DE87 90 33      | BCC #DEBC                                               ; 
56969 02 | DE89 C9 85      | CMP @#85                                                ; 
56971 02 | DE8B 90 0B      | BCC #DE98                                               ; 
56973 03 | DE8D 20 A4 DA   | JSR #DAA4                                               ; 
56976 02 | DE90 A0 80      | LDY @#80                                                ; 
56978 02 | DE92 84 5A      | STY #5A                                                 ; 
56980 01 | DE94 C8         | INY                                                     ; 
56981 02 | DE95 84 59      | STY #59                                                 ; 
56983 01 | DE97 60         | RTS                                                     ; 
                                                                                     ; 
56984 02 | DE98 E6 59      | INC #59                                                 ; 
56986 02 | DE9A A9 80      | LDA @#80                                                ; 
56988 02 | DE9C 85 57      | STA #57                                                 ; 
56990 03 | DE9E 20 D7 DD   | JSR #DDD7                                               ; 
56993 03 | DEA1 20 31 D8   | JSR #D831                                               ; 
56996 03 | DEA4 20 8D DE   | JSR #DE8D                                               ; 
56999 03 | DEA7 20 3C D9   | JSR #D93C                                               ; 
57002 03 | DEAA 20 27 D8   | JSR #D827                                               ; 
57005 03 | DEAD 20 8D DE   | JSR #DE8D                                               ; 
57008 03 | DEB0 20 AA DB   | JSR #DBAA                                               ; 
57011 03 | DEB3 20 33 D9   | JSR #D933                                               ; 
57014 03 | DEB6 20 A2 DB   | JSR #DBA2                                               ; 
57017 03 | DEB9 4C DC DA   | JMP #DADC                                               ; 
                                                                                     ; 
57020 03 | DEBC 20 2C D8   | JSR #D82C                                               ; 
57023 03 | DEBF 20 8D DE   | JSR #DE8D                                               ; 
57026 02 | DEC2 C6 59      | DEC #59                                                 ; 
57028 03 | DEC4 20 33 D9   | JSR #D933                                               ; 
57031 02 | DEC7 A9 D4      | LDA @#D4                                                ; 
57033 02 | DEC9 A0 DE      | LDY @#DE                                                ; 
57035 03 | DECB 20 27 DC   | JSR #DC27                                               ; 
57038 03 | DECE 20 A6 DB   | JSR #DBA6                                               ; 
57041 03 | DED1 4C 45 DA   | JMP #DA45                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? Table
                                                                                     ; ---------
                                                                                     ; 
57044 12 | DED4 08 7E 85 51 B3 0C 86 DE B0 7D 73 7C                                  ; 
57056 16 | DEE0 23 D8 E9 9A 87 34 82 1D 80 81 9A 20 6C ED 81 BD                      ; 
57072 16 | DEF0 32 34 2E 7F 5D 46 87 B4 82 68 3E 43 F7 80 6C 9A                      ; 
57088 02 | DF00 9E BB                                                                ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the command 'COLOUR'
                                                                                     ; ----------------------------
                                                                                     ; 
57090 03 | DF02 20 C8 C3   | JSR #C3C8                                               ; 
57093 02 | DF05 A5 52      | LDA #52                                                 ; 
57095 02 | DF07 29 03      | AND @#3                                                 ; 
57097 01 | DF09 A8         | TAY                                                     ; 
57098 03 | DF0A B9 4E DF   | LDA #DF4E,Y                                             ; 
57101 03 | DF0D 8D FD 03   | STA #3FD                                                ; 
57104 03 | DF10 AD 00 B0   | LDA #B000                                               ; 
57107 02 | DF13 29 F0      | AND @#F0                                                ; 
57109 02 | DF15 C9 70      | CMP @#70                                                ; 
57111 02 | DF17 D0 0C      | BNE #DF25                                               ; 
57113 02 | DF19 A9 00      | LDA @#0                                                 ; 
57115 01 | DF1B A8         | TAY                                                     ; 
57116 03 | DF1C 99 00 86   | STA #8600,Y                                             ; 
57119 03 | DF1F 99 00 87   | STA #8700,Y                                             ; 
57122 01 | DF22 88         | DEY                                                     ; 
57123 02 | DF23 D0 F7      | BNE #DF1C                                               ; 
57125 03 | DF25 AD 00 B0   | LDA #B000                                               ; 
57128 02 | DF28 29 DF      | AND @#DF                                                ; 
57130 03 | DF2A 8D 00 B0   | STA #B000                                               ; 
57133 01 | DF2D 2A         | ROL A                                                   ; 
57134 01 | DF2E 2A         | ROL A                                                   ; 
57135 01 | DF2F 2A         | ROL A                                                   ; 
57136 02 | DF30 29 03      | AND @#3                                                 ; 
57138 01 | DF32 A8         | TAY                                                     ; 
57139 03 | DF33 B9 42 DF   | LDA #DF42,Y                                             ; 
57142 03 | DF36 8D FE 03   | STA #3FE                                                ; 
57145 03 | DF39 B9 46 DF   | LDA #DF46,Y                                             ; 
57148 03 | DF3C 8D FF 03   | STA #3FF                                                ; 
57151 03 | DF3F 4C 58 C5   | JMP #C558                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Colour Point Plot routine LSB Address Table
                                                                                     ; -------------------------------------------
                                                                                     ; 
57154 04 | DF42 52 70 88 A0                                                          ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Colour Point Plot routine MSB Address Table
                                                                                     ; -------------------------------------------
                                                                                     ; 
                                                                                     ; 
57158 04 | DF46 DF DF DF DF                                                          ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ??? Data Table
                                                                                     ; --------------
                                                                                     ; 
57162 04 | DF4A 3F CF F3 FC                                                          ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Colour Byte Table
                                                                                     ; -----------------
                                                                                     ; 
57166 04 | DF4E 00 55 AA FF                                                          ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Mode 1 Colour Point Plot routine
                                                                                     ; --------------------------------
                                                                                     ; 
57170 02 | DF52 A5 5B      | LDA #5B                                                 ; 
57172 02 | DF54 05 5D      | ORA #5D                                                 ; 
57174 02 | DF56 D0 47      | BNE #DF9F                                               ; 
57176 02 | DF58 A5 5A      | LDA #5A                                                 ; 
57178 02 | DF5A C9 40      | CMP @#40                                                ; 
57180 02 | DF5C B0 41      | BCS #DF9F                                               ; 
57182 01 | DF5E 4A         | LSR A                                                   ; 
57183 01 | DF5F 4A         | LSR A                                                   ; 
57184 02 | DF60 85 5F      | STA #5F                                                 ; 
57186 02 | DF62 A0 00      | LDY @#0                                                 ; 
57188 02 | DF64 84 60      | STY #60                                                 ; 
57190 02 | DF66 A9 3F      | LDA @#3F                                                ; 
57192 01 | DF68 38         | SEC                                                     ; 
57193 02 | DF69 E5 5C      | SBC #5C                                                 ; 
57195 02 | DF6B C9 40      | CMP @#40                                                ; 
57197 02 | DF6D 90 4F      | BCC #DFBE                                               ; 
57199 01 | DF6F 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Mode 2 Colour Point Plot routine
                                                                                     ; --------------------------------
                                                                                     ; 
57200 02 | DF70 A5 5B      | LDA #5B                                                 ; 
57202 02 | DF72 05 5D      | ORA #5D                                                 ; 
57204 02 | DF74 D0 29      | BNE #DF9F                                               ; 
57206 02 | DF76 A5 5A      | LDA #5A                                                 ; 
57208 02 | DF78 30 25      | BMI #DF9F                                               ; 
57210 01 | DF7A 4A         | LSR A                                                   ; 
57211 01 | DF7B 4A         | LSR A                                                   ; 
57212 02 | DF7C 85 5F      | STA #5F                                                 ; 
57214 02 | DF7E A9 3F      | LDA @#3F                                                ; 
57216 01 | DF80 38         | SEC                                                     ; 
57217 02 | DF81 E5 5C      | SBC #5C                                                 ; 
57219 02 | DF83 C9 40      | CMP @#40                                                ; 
57221 02 | DF85 90 30      | BCC #DFB7                                               ; 
57223 01 | DF87 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Mode 3 Colour Point Plot routine
                                                                                     ; --------------------------------
                                                                                     ; 
57224 02 | DF88 A5 5B      | LDA #5B                                                 ; 
57226 02 | DF8A 05 5D      | ORA #5D                                                 ; 
57228 02 | DF8C D0 11      | BNE #DF9F                                               ; 
57230 02 | DF8E A5 5A      | LDA #5A                                                 ; 
57232 02 | DF90 30 0D      | BMI #DF9F                                               ; 
57234 01 | DF92 4A         | LSR A                                                   ; 
57235 01 | DF93 4A         | LSR A                                                   ; 
57236 02 | DF94 85 5F      | STA #5F                                                 ; 
57238 02 | DF96 A9 5F      | LDA @#5F                                                ; 
57240 01 | DF98 38         | SEC                                                     ; 
57241 02 | DF99 E5 5C      | SBC #5C                                                 ; 
57243 02 | DF9B C9 60      | CMP @#60                                                ; 
57245 02 | DF9D 90 18      | BCC #DFB7                                               ; 
57247 01 | DF9F 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Mode 4 Colour Point Plot routine
                                                                                     ; --------------------------------
                                                                                     ; 
57248 02 | DFA0 A5 5B      | LDA #5B                                                 ; 
57250 02 | DFA2 05 5D      | ORA #5D                                                 ; 
57252 02 | DFA4 D0 F9      | BNE #DF9F                                               ; 
57254 02 | DFA6 A5 5A      | LDA #5A                                                 ; 
57256 02 | DFA8 30 F5      | BMI #DF9F                                               ; 
57258 01 | DFAA 4A         | LSR A                                                   ; 
57259 01 | DFAB 4A         | LSR A                                                   ; 
57260 02 | DFAC 85 5F      | STA #5F                                                 ; 
57262 02 | DFAE A9 BF      | LDA @#BF                                                ; 
57264 01 | DFB0 38         | SEC                                                     ; 
57265 02 | DFB1 E5 5C      | SBC #5C                                                 ; 
57267 02 | DFB3 C9 C0      | CMP @#C0                                                ; 
57269 02 | DFB5 B0 E8      | BCS #DF9F                                               ; 
57271 02 | DFB7 A0 00      | LDY @#0                                                 ; 
57273 02 | DFB9 84 60      | STY #60                                                 ; 
57275 01 | DFBB 0A         | ASL A                                                   ; 
57276 02 | DFBC 26 60      | ROL #60                                                 ; 
57278 01 | DFBE 0A         | ASL A                                                   ; 
57279 02 | DFBF 26 60      | ROL #60                                                 ; 
57281 01 | DFC1 0A         | ASL A                                                   ; 
57282 02 | DFC2 26 60      | ROL #60                                                 ; 
57284 01 | DFC4 0A         | ASL A                                                   ; 
57285 02 | DFC5 26 60      | ROL #60                                                 ; 
57287 01 | DFC7 0A         | ASL A                                                   ; 
57288 02 | DFC8 26 60      | ROL #60                                                 ; 
57290 02 | DFCA 65 5F      | ADC #5F                                                 ; 
57292 02 | DFCC 85 5F      | STA #5F                                                 ; 
57294 02 | DFCE A5 60      | LDA #60                                                 ; 
57296 02 | DFD0 69 80      | ADC @#80                                                ; 
57298 02 | DFD2 85 60      | STA #60                                                 ; 
57300 02 | DFD4 A5 5A      | LDA #5A                                                 ; 
57302 02 | DFD6 29 03      | AND @#3                                                 ; 
57304 01 | DFD8 AA         | TAX                                                     ; 
57305 03 | DFD9 BD 4A DF   | LDA #DF4A,X                                             ; 
57308 02 | DFDC A6 5E      | LDX #5E                                                 ; 
57310 01 | DFDE CA         | DEX                                                     ; 
57311 02 | DFDF F0 0F      | BEQ #DFF0                                               ; 
57313 01 | DFE1 CA         | DEX                                                     ; 
57314 02 | DFE2 F0 05      | BEQ #DFE9                                               ; 
57316 02 | DFE4 31 5F      | AND (#5F),Y                                             ; 
57318 02 | DFE6 91 5F      | STA (#5F),Y                                             ; 
57320 01 | DFE8 60         | RTS                                                     ; 
                                                                                     ; 
57321 02 | DFE9 49 FF      | EOR @#FF                                                ; 
57323 02 | DFEB 51 5F      | EOR (#5F),Y                                             ; 
57325 02 | DFED 91 5F      | STA (#5F),Y                                             ; 
57327 01 | DFEF 60         | RTS                                                     ; 
                                                                                     ; 
57328 01 | DFF0 AA         | TAX                                                     ; 
57329 02 | DFF1 31 5F      | AND (#5F),Y                                             ; 
57331 02 | DFF3 91 5F      | STA (#5F),Y                                             ; 
57333 01 | DFF5 8A         | TXA                                                     ; 
57334 02 | DFF6 49 FF      | EOR @#FF                                                ; 
57336 03 | DFF8 2D FD 03   | AND #3FD                                                ; 
57339 02 | DFFB 11 5F      | ORA (#5F),Y                                             ; 
57341 02 | DFFD 91 5F      | STA (#5F),Y                                             ; 
57343 01 | DFFF 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; ****************************************
                                                                                     ; * Disassembly of Atom Operating System *
                                                                                     ; *           from #F000 to #FFFF        *
                                                                                     ; ****************************************
                                                                                     ; 
                                                                                     ; Version 1.1
                                                                                     ; 9:4:86
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Subroutines...
                                                                                     ; --------------
                                                                                     ; 
                                                                                     ; F02E Test for Array variable and Fetch Contents if Valid subroutine
                                                                                     ; F08B Interpret an Array Variable Address to the Workspace Stack subroutine
                                                                                     ; F291 Get to the First Non-Space Character subroutine
                                                                                     ; F36B Get the Integer Variable 'P' into the Workspace Stack subroutine
                                                                                     ; F376 Print Accumulator in Hexadecimal followed by a Space subroutine
                                                                                     ; F37E Print Accumulator in Hexadecimal subroutine
                                                                                     ; F668 Decrement the Vector (#5A),X subroutine
                                                                                     ; F671 Increment the Vector (#5A),X subroutine
                                                                                     ; F678 Plot a Point subroutine
                                                                                     ; F720 Point Clear/Set/Invert subroutine
                                                                                     ; F73B Mode 1 Point Plot subroutine
                                                                                     ; F754 Mode 2 Point Plot subroutine
                                                                                     ; F76D Mode 3 Point Plot subroutine
                                                                                     ; F7AA Mode 4 Point Plot subroutine
                                                                                     ; F7D1 Print ASCII String subroutine
                                                                                     ; F7EC Print the (#D4) word in Hexadecimal followed by a Space subroutine
                                                                                     ; F7EE Print a 4 Byte Word in Hexadecimal followed by a Space subroutine
                                                                                     ; F7F1 Print a 2 Byte Vector in Hexadecimal followed by a Space subroutine
                                                                                     ; F7FA Print a Byte in Hexadecimal followed by a Space subroutine
                                                                                     ; F7FD Print a Space subroutine
                                                                                     ; F802 Print a Byte in Hexadecimal subroutine
                                                                                     ; F818 Copy String from #100 Buffer to #140 Buffer subroutine
                                                                                     ; F84F Transfer Tape File Control Block and Test Name subroutine
                                                                                     ; F875 Get Next Non-Space Character from #100 Buffer subroutine
                                                                                     ; F87E Convert ASCII Hexadecimal Digit to Binary subroutine
                                                                                     ; F893 Read 4 Hexadecimal Characters from #100 buffer subroutine
                                                                                     ; F8EF COS Interpreter subroutine
                                                                                     ; F92F Load an Un-Named File subroutine
                                                                                     ; F955 Execute the Command '*FLOAD' subroutine
                                                                                     ; F958 Execute the Command '*LOAD' subroutine
                                                                                     ; F96E OSLOAD Load File subroutine
                                                                                     ; F98E Print Filename subroutine
                                                                                     ; F9A2 Load Current Block subroutine
                                                                                     ; FA08 Increment and Test Vector subroutine
                                                                                     ; FA19 Execute the Command '*NOMON' subroutine
                                                                                     ; FA1A Execute the Command '*MON' subroutine
                                                                                     ; FA65 Read 4 Hex Characters from #100 buffer with Invalid Test subroutine
                                                                                     ; FA76 COS Post Test subroutine
                                                                                     ; FA86 Save an Un-Named File subroutine
                                                                                     ; FAE5 Save File subroutine
                                                                                     ; FB3B Send Header and Data Block to Tape subroutine
                                                                                     ; FB78 Wait 2 Seconds with Tape Tone Off subroutine
                                                                                     ; FB7A Wait 2 Seconds subroutine
                                                                                     ; FB81 Wait 0.5 Second subroutine
                                                                                     ; FB83 Wait up to 4.25 Seconds subroutine
                                                                                     ; FB8A Wait 0.1 second subroutine
                                                                                     ; FB8E Read Header from Tape and Test for Un-Named File subroutine
                                                                                     ; FBC8 Read Name from Tape and Compare Names subroutine
                                                                                     ; FBE2 Get 8 Bytes from Tape into Workspace subroutine
                                                                                     ; FBEE OSBGET Get Byte from Tape subroutine
                                                                                     ; FC23 Add Byte to Checksum subroutine
                                                                                     ; FC2B Set up Block Load Address subroutine
                                                                                     ; FC38 Print "PLAY TAPE" or "RECORD TAPE" subroutine
                                                                                     ; FC63 Print "REWIND TAPE" subroutine
                                                                                     ; FC76 Wait for Keypress and Print <CR><LF> subroutine
                                                                                     ; FC7C OSBPUT Put Byte to Tape subroutine
                                                                                     ; FCBD Count Duration of Tape Pulse subroutine
                                                                                     ; FCCD Test state of #B002 tape input pulse subroutine
                                                                                     ; FCD8 Wait for 1 Falling Edge of the 2.4KHz Clock subroutine
                                                                                     ; FCDA Wait for 1 to 127 Falling Edges of the 2.4KHz Clock subroutine
                                                                                     ; FCEA Send ASCII Character to Screen subroutine
                                                                                     ; FD0B Handle <ESC> subroutine
                                                                                     ; FD11 Handle <ACK> or <NAK> subroutine
                                                                                     ; FD1A Handle <BEL> subroutine
                                                                                     ; FD29 Print an ASCII Character on the Screen subroutine
                                                                                     ; FD40 Reset Cursor to Start of Current Line Without Deletion subroutine
                                                                                     ; FD44 Invert Character at Current Cursor Position subroutine
                                                                                     ; FD50 Handle <DEL> subroutine
                                                                                     ; FD5C Handle <BS> subroutine
                                                                                     ; FD62 Handle <LF> subroutine
                                                                                     ; FD69 Handle <FF> subroutine
                                                                                     ; FD7D Handle <RS> subroutine
                                                                                     ; FD87 Handle <VT> subroutine
                                                                                     ; FD8D Handle <SO> subroutine
                                                                                     ; FD92 Handle <SI> subroutine
                                                                                     ; FD9A Handle <LOCK> subroutine
                                                                                     ; FDA2 Handle Cursor Keys from Keyboard subroutine
                                                                                     ; FDAE Handle <COPY> Key subroutine
                                                                                     ; FDC0 Handle <DEL> key #F (ASCII #7F) subroutine
                                                                                     ; FDC2 Handle '[\]^_' keys #3B-#3F (ASCII #5B-#5F) subroutine
                                                                                     ; FDC6 Handle 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' keys #21-#3A (ASCII #41-#5A) sub
                                                                                     ; FDC8 Handle '@' key #20 (ASCII #40) subroutine
                                                                                     ; FDD2 Handle '!"#$' keys 1-4 (ASCII #21-#24) subroutine
                                                                                     ; FDD6 Handle '<=>?>' keys #1C-#1F (ASCII #3C-#3F) subroutine
                                                                                     ; FDD8 Handle '123456789:;' keys #11-#1B (ASCII #31-#3B) subroutine
                                                                                     ; FDDF Handle <SPACE> key 0 (ASCII #10) subroutine
                                                                                     ; FDEC Handle <LF>, Scrolling if Necessary subroutine
                                                                                     ; FE08 Scroll the Screen subroutine
                                                                                     ; FE0A Scroll Y lines of the Screen subroutine
                                                                                     ; FE22 Delete Current Line subroutine
                                                                                     ; FE2C Add One Line to the Cursor Position subroutine
                                                                                     ; FE35 Move the Cursor Back One Position subroutine
                                                                                     ; FE52 Send Character to VIA and Screen subroutine
                                                                                     ; FE55 Send Character to Screen subroutine
                                                                                     ; FE66 Wait Until Next CRT Field Flyback subroutine
                                                                                     ; FE6B Wait Until Next or Current CRT Field Flyback subroutine
                                                                                     ; FE71 Scan Key Matrix subroutine
                                                                                     ; FE94 OSRDCH Get Key subroutine
                                                                                     ; FEC4 Decode Control Character subroutine
                                                                                     ; FEFB Send Contents of Accumulator to VIA subroutine
                                                                                     ; FF38 Do <EXT> subroutine
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Other routines...
                                                                                     ; -----------------
                                                                                     ; 
                                                                                     ; F04B Interpreter for #F000 Command Words
                                                                                     ; F085 Set Array Variable to an Arbitrarily Complex Expression
                                                                                     ; F0AE Execute the Command 'DIM'
                                                                                     ; F141 Execute the Command 'RUN'
                                                                                     ; F14C Execute the Command 'WAIT'
                                                                                     ; F155 Table of Compressed Assembler Mnemonic (MSB)
                                                                                     ; F195 Table of Compressed Assembler Mnemonic (LSB)
                                                                                     ; F1D5 Table of Bit Masks for Address Modes (LSB)
                                                                                     ; F1E4 Table of Bit Masks for Address Modes (MSB)
                                                                                     ; F1F3 Table of Offset from Base for Address Modes
                                                                                     ; F211 Table of Base Address Value for Mnemonics Modes
                                                                                     ; F251 Table of Base Address Value for Mnemonics
                                                                                     ; F29C Execute the Command ']'
                                                                                     ; F2A1 Execute the Command '['
                                                                                     ; F32E Deal with Assembler Label Definition
                                                                                     ; F360 Deal with Assembler Comments
                                                                                     ; F38E Deal with Assembler Statement
                                                                                     ; F3F2 Get Assembler Addressing Mode Data and Type
                                                                                     ; F440 Act on Assembler ??? Mode
                                                                                     ; F454 Act on Assembler Immediate Mode
                                                                                     ; F462 Act on Assembler Indirect Mode
                                                                                     ; F49B Construct Assembler Opcode and Data
                                                                                     ; F4EC Handle Assembler Relative Addressing
                                                                                     ; F531 Execute the Command 'OLD'
                                                                                     ; F542 Execute the Command 'DRAW'
                                                                                     ; F546 Execute the Command 'MOVE'
                                                                                     ; F54E Execute the Command 'PLOT'
                                                                                     ; F5B5 Draw a Line Routine
                                                                                     ; F5EB Plot a Line with (X change) <= (Y change)
                                                                                     ; F61C Plot a Line with (X change) > (Y change)
                                                                                     ; F67B Execute the Command 'CLEAR'
                                                                                     ; F6C2 Perform 'CLEAR 0'
                                                                                     ; F6CF Graphics Mode Control Data
                                                                                     ; F6D3 Point Plot Routine LSBs for Graphic Modes 0 to 4
                                                                                     ; F6D8 Point Plot Routine MSBs for Graphic Modes 0 to 4
                                                                                     ; F6DD VDG Control Byte for Graphic Modes 0 to 4
                                                                                     ; F6E2 Mode 0 Point PLot Routine
                                                                                     ; F7C9 Graphics Bit Mask Table
                                                                                     ; F8BE COS Interpreter Command Table
                                                                                     ; F926 Default COS Error Handler
                                                                                     ; FA20 Execute the Command '*RUN'
                                                                                     ; FA2A Execute the Command '*CAT'
                                                                                     ; FA6B Get a Hexadecimal Number and Jump There
                                                                                     ; FABB Execute the Command '*SAVE'
                                                                                     ; F926 Default COS Error Handler
                                                                                     ; FECB WRCHAR Control Code Data Lookup Table
                                                                                     ; FED6 RDCHAR Control Code Data Lookup Table
                                                                                     ; FEE3 WRCHAR Control Code Address Lookup Table
                                                                                     ; FEEE RDCHAR Control Code Address Lookup Table
                                                                                     ; FF3F RESET Routine
                                                                                     ; FF9A Vector Data Table
                                                                                     ; FFB2 IRQ/BRK Handler
                                                                                     ; FFC0 Execute BRK
                                                                                     ; FFC7 Execute NMI
                                                                                     ; FFCB Operating System Jump Table
                                                                                     ; 
                                                                                     ; 
;;ERR missing data curr: 61440 should be next: 57344
61440 16 | F000 50 4C 4F 54 F5 4E 44 52 41 57 F5 42 4D 4F 56 45                      ; PLOT..DRAW..MOVE
61456 16 | F010 F5 46 43 4C 45 41 52 F6 7B 44 49 4D F0 AE 5B F2                      ; ..CLEAR..DIM..[.
61472 14 | F020 A1 4F 4C 44 F5 31 57 41 49 54 F1 4C C5 50                            ; .OLD..WAIT....
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Test for Array variable and Fetch Contents if Valid subroutine
                                                                                     ; --------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Looks for two consecutive characters being the same, thus identifying
                                                                                     ; an array.
                                                                                     ; - Entry at #F02E starts interpretation at (5),?#5E.
                                                                                     ; - Entry at #F030 starts interpretation at (5),Y.
                                                                                     ; - Enter with the X register pointing to the current slot of the workspace
                                                                                     ; stack.
                                                                                     ; - If an array is identified, the array number is evaluated, the array
                                                                                     ; offset calculated (offset=4*array number, since an integer has 4-byte
                                                                                     ; precision), the offset added to the array base address fetched from the
                                                                                     ; Array Table, and the 4-byte integer read from the resultant array
                                                                                     ; variable and written to the current slot of the workspace stack.
                                                                                     ; - The workspace stack pointer ?4 is updated and incremented.
                                                                                     ; 
61486 02 | F02E A4 5E      | LDY #5E                                                 ; Get index
61488 02 | F030 B1 05      | LDA (#5),Y                                              ; Get the first character of text
61490 02 | F032 C9 40      | CMP @#40                                                ; Is it >= '@' ?
61492 02 | F034 90 12      | BCC #F048                                               ; ..no, can't be a valid array - quit
61494 02 | F036 C9 5B      | CMP @#5B                                                ; Is it <= '[' ?
61496 02 | F038 B0 0E      | BCS #F048                                               ; ..no, can't be a valid array - quit
61498 01 | F03A C8         | INY                                                     ; Point to the second character in text
61499 02 | F03B D1 05      | CMP (#5),Y                                              ; Is the second character the same as
                                                                                     ; the first ?
61501 02 | F03D D0 09      | BNE #F048                                               ; ..no, it's not a valid array - quit
61503 03 | F03F 20 8B F0   | JSR #F08B                                               ; Interpret the address of the array number
                                                                                     ; and copy to the level of the w/s stack
                                                                                     ; pointed to by the X register
61506 03 | F042 20 4F C9   | JSR #C94F                                               ; Get the LSB array byte into LSB w/s stack
61509 03 | F045 4C 62 C9   | JMP #C962                                               ; Get the 3 MSBs into the w/s stack also
                                                                                     ; 
                                                                                     ; 
61512 03 | F048 4C 24 CA   | JMP #CA24                                               ; Unrecognised command - try FP interpreter
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Interpreter for #F000 Command Words
                                                                                     ; -----------------------------------
                                                                                     ; 
                                                                                     ; - Starts interpretation at (5),?#5E.
                                                                                     ; - Jumps to the appropriate action addresses.
                                                                                     ; - Exits to #C550 if fails to match command word.
                                                                                     ; 
61515 02 | F04B A2 FF      | LDX @#FF                                                ; Pointer to the #F000 command word table
61517 02 | F04D A4 5E      | LDY #5E                                                 ; Get interpreter pointer
61519 02 | F04F C6 5E      | DEC #5E                                                 ; This now points to the previous character
                                                                                     ; 
                                                                                     ; TEST FOR ARRAY ASSIGNMENT
                                                                                     ; 
61521 02 | F051 B1 05      | LDA (#5),Y                                              ; Get the first character of text
61523 02 | F053 C9 40      | CMP @#40                                                ; Is it >= '@' ?
61525 02 | F055 90 09      | BCC #F060                                               ; ..no, definately not an array assignment
61527 02 | F057 C9 5B      | CMP @#5B                                                ; is it <= '[' ?
61529 02 | F059 B0 05      | BCC #F060                                               ; ..no, definately not an array assignment
61531 01 | F05B C8         | INY                                                     ; Point to the second character in text
61532 02 | F05C D1 05      | CMP (#5),Y                                              ; is it the same, identifying an array ?
61534 02 | F05E F0 25      | BEQ #F085                                               ; ..yes, deal with ARRAY=(function)
                                                                                     ; 
                                                                                     ; TRY TO MATCH TEXT WITH #F000 TABLE WORDS
                                                                                     ; 
61536 02 | F060 A4 5E      | LDY #5E                                                 ; Restore pointer to the character before
                                                                                     ; the first to be interpreted
61538 01 | F062 E8         | INX                                                     ; Point to next character in command table
61539 01 | F063 C8         | INY                                                     ; Point to next character under analysis
61540 03 | F064 BD 00 F0   | LDA #F000,X                                             ; Get character from command table
61543 02 | F067 30 0C      | BMI #F075                                               ; ..reached MSB address byte of command word
61545 02 | F069 D1 05      | CMP (#5),Y                                              ; Otherwise compare with character in text
61547 02 | F06B F0 F5      | BEQ #F062                                               ; Go on to test next character if matched
                                                                                     ; 
                                                                                     ; WORD MATCH FAILED - TRY NEXT WORD IN TABLE
                                                                                     ; 
61549 01 | F06D E8         | INX                                                     ; Point to next character of the failed
                                                                                     ; command word in the table
61550 03 | F06E BD FF EF   | LDA #EFFF,X                                             ; ..and get it
61553 02 | F071 10 FA      | BPL #F06D                                               ; Keep going until MSB command word reached
61555 02 | F073 D0 EB      | BNE #F060                                               ; ..and try to match this command word
                                                                                     ; 
                                                                                     ; COPY JUMP ADDRESS TO ZERO PAGE - AND JUMP
                                                                                     ; 
61557 02 | F075 85 53      | STA #53                                                 ; Dump the MSB jump address to w/s
61559 03 | F077 BD 01 F0   | LDA #F001,X                                             ; Get MSB jump address from command table
61562 02 | F07A 85 52      | STA #52                                                 ; Dump the LSB jump address to w/s
61564 02 | F07C 84 03      | STY #3                                                  ; Update the interpreter pointer
61566 02 | F07E A6 04      | LDX #4                                                  ; Get pointer to current slot of w/s stack
61568 02 | F080 E6 5E      | INC #5E                                                 ; This points to the first character
                                                                                     ; JUST interpreted
61570 03 | F082 6C 52 00   | JMP (#52)                                               ; Jump to the command word jump address
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Set Array Variable to an Arbitrarily Complex Expression
                                                                                     ; -------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Interprets an array variable, followed by an '=', followed by an
                                                                                     ; arbitrarily complex numerical expression, and copies the latter to the
                                                                                     ; array variable.
                                                                                     ; - Returns to the main interpreter at #C55B.
                                                                                     ; 
61573 03 | F085 20 8B F0   | JSR #F08B                                               ; Get the array address into the current
                                                                                     ; level of the w/s stack and increment the
                                                                                     ; w/s stack pointer
61576 03 | F088 4C F1 C3   | JMP #C3F1                                               ; Interpret an '=' followed by a numerical
                                                                                     ; expression & copy this result to the array variable previously interpreted
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Interpret an Array Variable Address to the Workspace Stack subroutine
                                                                                     ; ---------------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Gets the array start address from the table of start addresses pointed
                                                                                     ; to by #2EB,Y and #306,Y, adds the offset calculated by 4 times the
                                                                                     ; evaluated array number, and places the resultant address on the current
                                                                                     ; level of the workspace stack.
                                                                                     ; - Enter with (5),Y pointing to the second array character (@ to Z), the
                                                                                     ; accumulator containing the array character, and the Carry flag set.
                                                                                     ; 
61579 01 | F08B C8         | INY                                                     ; Point to first character of array number
61580 02 | F08C 84 03      | STY #3                                                  ; Save interpreter index
61582 02 | F08E E9 40      | SBC @#40                                                ; Convert so '@'=0 to "Z"=26
61584 01 | F090 48         | PHA                                                     ; ..and save the resulting array number
61585 03 | F091 20 BC C8   | JSR #C8BC                                               ; Evaluate array number onto the w/s stack
61588 01 | F094 68         | PLA                                                     ; Restore the array number
61589 01 | F095 A8         | TAY                                                     ; This is the index tothe array stack
61590 02 | F096 B5 15      | LDA #15,X                                               ; )
61592 01 | F098 0A         | ASL A                                                   ; )
61593 02 | F099 36 24      | ROL #24,X                                               ; )
61595 01 | F09B 0A         | ASL A                                                   ; ) Multiply the 2-byte array number by 4
61596 02 | F09C 36 24      | ROL #24,X                                               ; ) to get the array offset
61598 01 | F09E 18         | CLC                                                     ; )
61599 03 | F09F 79 EB 02   | ADC #2EB,Y                                              ; )
61602 02 | F0A2 95 15      | STA #15,X                                               ; )
61604 02 | F0A4 B5 24      | LDA #24,X                                               ; ) Add the array offset to the base address
61606 03 | F0A6 79 06 03   | ADC #306,Y                                              ; ) and put the result on the last level of
61609 02 | F0A9 95 24      | STA #24,X                                               ; ) the w/s stack
61611 02 | F0AB B0 D7      | BCS #F084                                               ; ..if the array had not been dimensioned,
                                                                                     ; then overflow will occur as the arrays are
                                                                                     ; initialised to #FFFF. Hence execute BRK
61613 01 | F0AD 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'DIM'
                                                                                     ; -------------------------
                                                                                     ; 
                                                                                     ; - If in Direct Mode then BRK is executed.
                                                                                     ; 
61614 02 | F0AE A5 01      | LDA #1                                                  ; If the MSB line number is 0..
61616 02 | F0B0 05 02      | ORA #2                                                  ; ..and the LSB line number is 0..
61618 02 | F0B2 F0 22      | BEQ #F0D6                                               ; ..then in Direct Mode, so BRK
                                                                                     ; 
                                                                                     ; TEST FOR NUMERIC OR STRING ARRAY
                                                                                     ; 
61620 03 | F0B4 20 34 C4   | JSR #C434                                               ; Get the first non-space character onto
                                                                                     ; the w/s stack if it's alphabetic
61623 02 | F0B7 90 1E      | BCC #F0D7                                               ; Branch if the first character is not
                                                                                     ; alphabetic or the first two characters
                                                                                     ; are - possibly indicating a numeric array
                                                                                     ; 
                                                                                     ; DIMENSION A STRING ARRAY
                                                                                     ; 
61625 03 | F0B9 20 BC C8   | JSR #C8BC                                               ; Interpret array length onto the w/s stack
61628 01 | F0BC CA         | DEX                                                     ; Point to array length on the w/s stack
61629 01 | F0BD CA         | DEX                                                     ; Point to array character no. on w/s stack
61630 02 | F0BE 86 04      | STX #4                                                  ; Update w/s stack pointer
61632 02 | F0C0 B4 16      | LDY #16,X                                               ; Get character number from LSB w/s stack
61634 01 | F0C2 38         | SEC                                                     ; 
61635 02 | F0C3 A5 23      | LDA #23                                                 ; Copy LSB free space pointer..
61637 03 | F0C5 99 21 03   | STA #321,Y                                              ; ..to LSB variable - this is string address
61640 02 | F0C8 75 17      | ADC #17,X                                               ; Add array length from w/s stack
61642 02 | F0CA 85 23      | STA #23                                                 ; Update LSB free space pointer
61644 02 | F0CC A5 24      | LDA #24                                                 ; Copy MSB free space pointer..
61646 03 | F0CE 99 3C 03   | STA #33C,Y                                              ; ..to MSB variable - this is string address
61649 02 | F0D1 75 26      | ADC #26,X                                               ; Add array length from w/s stack
61651 03 | F0D3 4C 19 F1   | JMP #F119                                               ; Update MSB free space pointer and test for
                                                                                     ; memory at the free space pointer address
61654 01 | F0D6 00         | BRK                                                     ; 
                                                                                     ; 
                                                                                     ; DIMENSION A NUMERIC ARRAY
                                                                                     ; FIRST TEST FOR VALID ARRAY VARIABLE
                                                                                     ; IN THE RANGE '@@' TO 'ZZ'
                                                                                     ; 
61655 02 | F0D7 A4 03      | LDY #3                                                  ; Get the interpeter pointer
61657 02 | F0D9 B1 05      | LDA (#5),Y                                              ; Get first non-space character from text
61659 02 | F0DB C9 40      | CMP @#40                                                ; Is it alphabetic, ie >= '@' ?
61661 02 | F0DD 90 F7      | BCC #F0D6                                               ; ..no, execute BRK
61663 02 | F0DF C9 5B      | CMP @#5B                                                ; Is it alphabetic, ie < '[' ?
61665 02 | F0E1 B0 F3      | BCS #F0D6                                               ; ..no, execute BRK
                                                                                     ; 
                                                                                     ; EVALUATE ARRAY VARIABLE AND LENGTH
                                                                                     ; 
61667 01 | F0E3 C8         | INY                                                     ; Point to next character
61668 02 | F0E4 D1 05      | CMP (#5),Y                                              ; Is this the same as the first character
                                                                                     ; indicating a valid array variable ?
61670 02 | F0E6 D0 EE      | BNE #F0D6                                               ; ..no, execute BRK
61672 02 | F0E8 E9 40      | SBC @#40                                                ; ..yes, convert so '@'=0 to 'Z'=26
61674 01 | F0EA 48         | PHA                                                     ; Save this array variable number
61675 01 | F0EB C8         | INY                                                     ; Point to first character of array dimension
61676 02 | F0EC 84 03      | STY #3                                                  ; Update text pointer
61678 03 | F0EE 20 BC C8   | JSR #C8BC                                               ; Evaluate arbitrarily complex array length
                                                                                     ; onto the w/s stack
61681 01 | F0F1 68         | PLA                                                     ; Restore the array variable number
61682 01 | F0F2 A8         | TAY                                                     ; ..as the index to the array table
                                                                                     ; 
                                                                                     ; SET ARRAY VARIABLE TO FREE SPACE POINTER
                                                                                     ; 
61683 02 | F0F3 A5 23      | LDA #23                                                 ; Copy the LSB free space pointer..
61685 03 | F0F5 99 EB 02   | STA #2EB,Y                                              ; ..to the LSB array variable table
61688 02 | F0F8 A5 24      | LDA #24                                                 ; Copy the MSB free space pointer..
61690 03 | F0FA 99 06 03   | STA #306,Y                                              ; ..to the MSB array variable table
61693 01 | F0FD CA         | DEX                                                     ; 
61694 02 | F0FE 86 04      | STX #4                                                  ; Decrement the w/s pointer
                                                                                     ; 
                                                                                     ; MULTIPLY ARRAY LENGTH BY 4 AS IT'S NUMERIC
                                                                                     ; 
61696 02 | F100 B4 16      | LDY #16,X                                               ; Get the LSB array length
61698 01 | F102 C8         | INY                                                     ; Increment - a dimension of 0 uses 1 byte !
61699 02 | F103 D0 02      | BNE #F107                                               ; 
61701 02 | F105 F6 25      | INC #25,X                                               ; Increment MSB array length if overflowed
61703 01 | F107 98         | TYA                                                     ; Get the LSB array length
61704 01 | F108 0A         | ASL A                                                   ; Double it
61705 02 | F109 36 25      | ROL #25,X                                               ; ..and double the MSB array length
61707 01 | F10B 0A         | ASL A                                                   ; Double it again
61708 02 | F10C 36 25      | ROL #25,X                                               ; ..and double the MSB array length again
                                                                                     ; 
                                                                                     ; ADD (4*LENGTH) TO FREE SPACE POINTER
                                                                                     ; 
61710 01 | F10E 18         | CLC                                                     ; 
61711 02 | F10F 65 23      | ADC #23                                                 ; Add the old LSB free space pointer
61713 02 | F111 85 23      | STA #23                                                 ; And update the LSB free space pointer
61715 02 | F113 B5 25      | LDA #25,X                                               ; Get MSB (4*length)
61717 02 | F115 65 24      | ADC #24                                                 ; Add the old MSB free space pointer
61719 02 | F117 B0 BD      | BCS #F0D6                                               ; Execute BRK if overflows
61721 02 | F119 85 24      | STA #24                                                 ; And update the MSB free space pointer
                                                                                     ; 
                                                                                     ; TEST FOR MEMORY AT FREE SPACE POINTER
                                                                                     ; 
61723 02 | F11B A0 00      | LDY @#0                                                 ; 
61725 02 | F11D A9 AA      | LDA @#AA                                                ; Get first test byte
61727 02 | F11F 91 23      | STA (#23),Y                                             ; ..and dump to free space pointer address
61729 02 | F121 D1 23      | CMP (#23),Y                                             ; Can it be read back ?
61731 02 | F123 D0 F7      | BNE #F11C                                               ; ..no, execute BRK
61733 01 | F125 4A         | LSR A                                                   ; Get second test byte, ie #55
61734 02 | F126 91 23      | STA (#23),Y                                             ; ..and dump to free space pointer address
61736 02 | F128 D1 23      | CMP (#23),y                                             ; Can it be read back ?
61738 02 | F12A D0 F0      | BNE #F11C                                               ; ..no, execute BRK
                                                                                     ; 
                                                                                     ; CONTINUE DIMENSIONING OTHER VARIABLES
                                                                                     ; 
61740 03 | F12C 20 34 C4   | JSR #C434                                               ; Get first non-space character
61743 02 | F12F B0 A5      | BCS #F0D6                                               ; Execute BRK if it's alphabetic - a ','
                                                                                     ; is expected separating DIM terms
61745 02 | F131 A4 03      | LDY #3                                                  ; Get interpreter pointer
61747 02 | F133 B1 05      | LDA (#5),Y                                              ; Get first non-space character
61749 02 | F135 C9 2C      | CMP @#2C                                                ; Is it ',' ?
61751 02 | F137 D0 05      | BNE #F13E                                               ; ..no, no more variables to dimension
61753 02 | F139 E6 03      | INC #3                                                  ; ..yes, Point past the ','
61755 03 | F13B 4C AE F0   | JMP #F0AE                                               ; ..and dimension the next variable
                                                                                     ; 
61758 03 | F13E 4C 58 C5   | JMP #C558                                               ; Back to the interpreter
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'RUN'
                                                                                     ; -------------------------
                                                                                     ; 
                                                                                     ; - Sets the free space pointer at (#23) to TOP at (#D) and then jumps to
                                                                                     ; - the continuation at #CE83.
                                                                                     ; 
61761 02 | F141 A5 0D      | LDA #D                                                  ; Get LSB TOP
61763 02 | F143 85 23      | STA #23                                                 ; ..and set the LSB Free Space pointer
61765 02 | F145 A5 0E      | LDA #E                                                  ; Get MSB TOP
61767 02 | F147 85 24      | STA #24                                                 ; ..and set the MSB Free Space pointer
61769 03 | F149 4C 83 CE   | JMP #CE83                                               ; Set the text pointer to the start of text
                                                                                     ; and jump to the interpreter at #C55B
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'WAIT'
                                                                                     ; --------------------------
                                                                                     ; 
                                                                                     ; - Returns to the main interpreter at #C558.
                                                                                     ; 
61772 03 | F14C 20 E4 C4   | JSR #C4E4                                               ; Do the interpreter post test
61775 03 | F14F 20 66 FE   | JSR #FE66                                               ; Wait for next complete VDU flyback
61778 03 | F152 4C 5B C5   | JMP #C558                                               ; ..back to the interpreter
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Table of Compressed Assembler Mnemonic (MSB)
                                                                                     ; --------------------------------------------
                                                                                     ; 
61781 11 | F155 1C 8A 1C 23 5D 8B 1B A1 9D 8A 1D                                     ; 
61792 16 | F160 23 9D 8B 1D A1 00 29 19 AE 69 A8 19 23 24 53 1B                      ; 
61808 16 | F170 23 24 53 19 A1 00 1A 5B 5B A5 69 24 24 AE AE A8                      ; 
61824 16 | F180 AD 29 00 7C 00 15 9C 6D 9C A5 69 29 53 84 13 34                      ; 
61840 05 | F190 11 A5 69 23 A0                                                       ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Table of Compressed Assembler Mnemonic (LSB)
                                                                                     ; --------------------------------------------
                                                                                     ; 
61845 11 | F195 D8 62 5A 48 26 62 94 88 54 44 C8                                     ; 
61856 16 | F1A0 54 68 44 E8 94 00 B4 08 84 74 B4 28 6E 74 F4 CC                      ; 
61872 16 | F1B0 4A 72 F2 A4 8A 00 AA A2 A2 74 74 74 72 44 68 B2                      ; 
61888 16 | F1C0 32 B2 00 22 00 1A 1A 26 26 72 72 88 C8 C4 CA 26                      ; 
61904 05 | F1D0 48 44 44 A2 C8                                                       ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Table of Bit Masks for Address Modes (LSB)
                                                                                     ; ------------------------------------------
                                                                                     ; 
61909 11 | F1D5 00 02 00 08 F2 FF 80 01 C0 E2 C0                                     ; 
61920 04 | F1E0 C0 FF 00 00                                                          ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Table of Bit Masks for Address Modes (MSB)
                                                                                     ; ------------------------------------------
                                                                                     ; 
61924 12 | F1E4 08 00 10 80 40 C0 00 C0 00 40 00 00                                  ; 
61936 03 | F1F0 E4 20 80                                                             ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Table of Offset from Base for Address Modes
                                                                                     ; -------------------------------------------
                                                                                     ; 
61939 13 | F1F3 00 FC 00 08 08 F8 FC F4 0C 10 04 F4 00                               ; 
61952 16 | F200 20 10 00 00 0F 01 01 01 11 11 02 02 11 11 02 12                      ; 
61968 01 | F210 02                                                                   ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Table of Base Address Value for Mnemonics Modes
                                                                                     ; -----------------------------------------------
                                                                                     ; 
61969 15 | F211 00 08 10 18 20 28 30 38 40 48 50 58 60 68 70                         ; 
61984 16 | F220 78 80 88 90 98 A0 A8 B0 B8 C0 C8 D0 D8 E0 E8 F0                      ; 
62000 16 | F230 F8 0C 2C 4C 4C 8C AC CC EC 8A 9A AA BA CA DA EA                      ; 
62016 16 | F240 FA 0E 2E 4E 6E 8E AE CE EE 0D 2D 4D 6D 8D AD CD                      ; 
62032 01 | F250 ED                                                                   ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Table of Base Address Value for Mnemonics
                                                                                     ; -----------------------------------------
                                                                                     ; 
62033 15 | F251 0D 0D 0C 0D 0E 0D 0C 0D 0D 0D 0C 0D 0D 0D 0C                         ; 
62048 16 | F260 0D 0F 0D 0C 0D 09 0D 0C 0D 08 0D 0C 0D 08 0D 0C                      ; 
62064 16 | F270 0D 0F 06 0B 0B 04 0A 08 08 0D 0D 0D 0D 0D 0F 0D                      ; 
62080 16 | F280 0F 07 07 07 07 05 09 03 03 01 01 01 01 02 01 01                      ; 
62096 01 | F290 01                                                                   ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Get to the First Non-Space Character subroutine
                                                                                     ; -----------------------------------------------
                                                                                     ; 
                                                                                     ; - Gets the first non-space character into the accumulator using the (5),Y
                                                                                     ; pointer where Y=?3.
                                                                                     ; - Returns with (5),Y pointing to the following character and ?3 updated.
                                                                                     ; 
62097 02 | F291 A4 03      | LDY #3                                                  ; Get the interpreter pointer
62099 02 | F293 B1 05      | LDA (#5),Y                                              ; Get character from text
62101 02 | F295 E6 03      | INC #3                                                  ; Increment interpreter pointer
62103 02 | F297 C9 20      | CMP @#20                                                ; Is this character a <SPC> ?
62105 02 | F299 F0 F6      | BEQ #F291                                               ; ..yes, keep searching
62107 01 | F29B 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command ']'
                                                                                     ; -----------------------
                                                                                     ; 
62108 02 | F29C E6 03      | INC #3                                                  ; Skip past the ']' symbol
62110 03 | F29E 4C 1B C3   | JMP #C31B                                               ; ..and return to the main interpreter
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command '['
                                                                                     ; -----------------------
                                                                                     ; 
62113 02 | F2A1 B1 05      | LDA (#5),Y                                              ; Get the current character from text
62115 02 | F2A3 C9 5D      | CMP @#5D                                                ; Is it the assembler terminator ']' ?
62117 02 | F2A5 F0 F5      | BEQ #F29C                                               ; ..yes, return to the main interpreter
                                                                                     ; 
62119 03 | F2A7 20 F6 C4   | JSR #C4F6                                               ; Consolidate the (5),Y pointer, check <ESC>
62122 02 | F2AA C6 03      | DEC #3                                                  ; Point to the current character
62124 03 | F2AC 20 8E F3   | JSR #F38E                                               ; Interpret the assembly statement into w/s
62127 02 | F2AF C6 03      | DEC #3                                                  ; Decrement the interpreter pointer
62129 02 | F2B1 A5 52      | LDA #52                                                 ; 
62131 01 | F2B3 48         | PHA                                                     ; Save the LSB current assembly address
62132 02 | F2B4 A5 53      | LDA #53                                                 ; 
62134 01 | F2B6 48         | PHA                                                     ; Save the MSB current assembly address
                                                                                     ; 
                                                                                     ; PRINT THE TEXT LINE NUMBER
                                                                                     ; 
62135 03 | F2B7 AD 21 03   | LDA #321                                                ; Get print field width, LSB variable '@'
62138 01 | F2BA 48         | PHA                                                     ; ..and save it
62139 02 | F2BB A9 00      | LDA @#0                                                 ; 
62141 02 | F2BD 85 34      | STA #34                                                 ; Clear second MSB lowest level of w/s stack
62143 02 | F2BF 85 43      | STA #43                                                 ; Clear MSB lowest level of w/s stack
62145 02 | F2C1 A9 05      | LDA @#5                                                 ; ) Set the print field width in order to
62147 03 | F2C3 8D 21 03   | STA #321                                                ; ) print the text line number
62150 02 | F2C6 A5 01      | LDA #1                                                  ; Get the LSB text line number
62152 02 | F2C8 85 16      | STA #16                                                 ; ..into LSB lowest level of w/s stack
62154 02 | F2CA A5 02      | LDA #2                                                  ; Get the MSB text line number
62156 02 | F2CC 85 25      | STA #25                                                 ; ..into second LSB lowest level of w/s stack
62158 03 | F2CE 20 89 C5   | JSR #C589                                               ; Print line number in decimal in field @
62161 03 | F2D1 20 79 F3   | JSR #F379                                               ; Print a space
62164 01 | F2D4 68         | PLA                                                     ; 
62165 03 | F2D5 8D 21 03   | STA #321                                                ; Restore origional print field width
62168 01 | F2D8 68         | PLA                                                     ; Restore the LSB current assembly address
62169 03 | F2D9 20 7E F3   | JSR #F37E                                               ; ..and print it in hex
62172 01 | F2DC 68         | PLA                                                     ; Restore the MSB current assembly address
62173 03 | F2DD 20 76 F3   | JSR #F376                                               ; ..and print it in hex followed by a space
                                                                                     ; 
                                                                                     ; PRINT ASSEMBLED CODE IN HEX
                                                                                     ; 
62176 02 | F2E0 A0 00      | LDY @#0                                                 ; Initialise code byte pointer
62178 02 | F2E2 C4 00      | CPY #0                                                  ; printed all the code bytes ?
62180 02 | F2E4 F0 09      | BEQ #F2EF                                               ; ..yes
62182 03 | F2E6 B9 66 00   | LDA #66,Y                                               ; get byte of code
62185 03 | F2E9 20 76 F3   | JSR #F376                                               ; ..and print it in hex followed by a space
62188 01 | F2EC C8         | INY                                                     ; Point to the next byte of code
62189 02 | F2ED D0 F3      | BNE #F2E2                                               ; ..and loop round to deal with that
62191 02 | F2EF C0 03      | CPY @#3                                                 ; 
62193 02 | F2F1 F0 0C      | BEQ #F2FF                                               ; 
62195 03 | F2F3 20 79 F3   | JSR #F379                                               ; Print a space
62198 03 | F2F6 20 4C CA   | JSR #CA4C                                               ; 
62201 03 | F2F9 20 4C CA   | JSR #CA4C                                               ; 
62204 01 | F2FC C8         | INY                                                     ; 
62205 02 | F2FD D0 F0      | BNE #F2EF                                               ; 
62207 02 | F2FF A0 00      | LDY @#0                                                 ; 
62209 02 | F301 B1 05      | LDA (#5),Y                                              ; Get character from text
62211 02 | F303 C9 3B      | CMP @#3B                                                ; Is it ';' statement separator ?
62213 02 | F305 F0 0A      | BEQ #F311                                               ; ..yes,
62215 02 | F307 C9 0D      | CMP @#D                                                 ; Is it <CR> line terminator ?
62217 02 | F309 F0 06      | BEQ #F311                                               ; ..yes,
62219 03 | F30B 20 4C CA   | JSR #CA4C                                               ; 
62222 01 | F30E C8         | INY                                                     ; 
62223 02 | F30F D0 F0      | BNE #F301                                               ; 
62225 03 | F311 20 54 CD   | JSR #CD54                                               ; 
62228 03 | F314 20 E4 C4   | JSR #C4E4                                               ; 
62231 01 | F317 88         | DEY                                                     ; 
62232 02 | F318 B1 05      | LDA (#5),Y                                              ; Get character from text
62234 01 | F31A C8         | INY                                                     ; Point to next character
62235 02 | F31B C9 3B      | CMP @#3B                                                ; Is it ';' statement separator ?
62237 02 | F31D F0 0C      | BEQ #F32B                                               ; ..yes,
62239 02 | F31F A5 06      | LDA #6                                                  ; 
62241 02 | F321 C9 01      | CMP @#1                                                 ; 
62243 02 | F323 D0 03      | BNE #F328                                               ; 
62245 03 | F325 4C CF C2   | JMP #C2CF                                               ; 
                                                                                     ; 
62248 03 | F328 20 1D C5   | JSR #C51D                                               ; 
62251 03 | F32B 4C A1 F2   | JMP #F2A1                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with Assembler Label Definition
                                                                                     ; ------------------------------------
                                                                                     ; 
                                                                                     ; - Interprets a label (array variable) and sets the label to the current
                                                                                     ; value of the assembler memory pointer P.
                                                                                     ; - Enter with the ":" having been interpreted, and with (5),?3 pointing
                                                                                     ; to the first character of the array variable.
                                                                                     ; 
62254 03 | F32E 20 91 F2   | JSR #F291                                               ; Get the next non-space character
62257 02 | F331 85 66      | STA #66                                                 ; Store this - it's the first array
                                                                                     ; character
62259 03 | F333 20 91 F2   | JSR #F291                                               ; Get the next non-space character
62262 02 | F336 C5 66      | CMP #66                                                 ; Is the second array character the same as
                                                                                     ; the first - ie is it a valid array ?
62264 02 | F338 D0 10      | BNE #F34A                                               ; ..no, invalid label - execute BRK
62266 02 | F33A C9 40      | CMP @#40                                                ; Is the label character < '`' ?
62268 02 | F33C 90 0C      | BCC #F34A                                               ; ..yes, invalid label - execute BRK
62270 02 | F33E C9 5B      | CMP @#5B                                                ; Is the label character >= '[' ?
62272 02 | F340 B0 08      | BCS #F34A                                               ; ..yes, invalid label - execute BRK
62274 01 | F342 38         | SEC                                                     ; 
62275 03 | F343 20 8E F0   | JSR #F08E                                               ; Evaluate array address onto the w/s stack
62278 03 | F346 20 CB C3   | JSR #C3CB                                               ; Copy last level of w/s stack to #52..#55
62281 02 | F349 A0 00      | LDY @#0                                                 ; 
62283 03 | F34B AD 31 03   | LDA #331                                                ; Get LSB variable 'P' (memory pointer)
62286 02 | F34E 91 52      | STA (#52),Y                                             ; ..and set LSB label
62288 03 | F350 AD 4C 03   | LDA #34C                                                ; Get the second LSB of integer variable 'P'
                                                                                     ; (assembler memory pointer)
62291 01 | F353 C8         | INY                                                     ; 
62292 02 | F354 91 52      | STA (#52),Y                                             ; ..and set second LSB label
62294 02 | F356 A9 00      | LDA @#0                                                 ; 
62296 01 | F358 C8         | INY                                                     ; 
62297 02 | F359 91 52      | STA (#52),Y                                             ; Clear second MSB label
62299 01 | F35B C8         | INY                                                     ; 
62300 02 | F35C 91 52      | STA (#52),Y                                             ; Clear MSB label
62302 02 | F35E D0 36      | BNE #F396                                               ; Go on to interpret assembler statement
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with Assembler Comments
                                                                                     ; ----------------------------
                                                                                     ; 
                                                                                     ; - Only returns to the assembler interpreter at the end of the text line
                                                                                     ; or when the asssembler statement separator ';' is encountered.
                                                                                     ; 
62304 03 | F360 20 91 F2   | JSR #F291                                               ; Get the next non-space character from text
62307 02 | F363 C9 3B      | CMP @#3B                                                ; Is it the statement separator ';' ?
62309 02 | F365 F0 04      | BEQ #F36B                                               ; ..yes, set up the memory pointer , and go
                                                                                     ; 
                                                                                     ; on to interpret the next statement
62311 02 | F367 C9 0D      | CMP @#D                                                 ; Is the text line terminator <CR> ?
62313 02 | F369 D0 F5      | BNE #F360                                               ; No, so character is skipped as a comment
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Get the Integer Variable 'P' into the Workspace Stack subroutine
                                                                                     ; ----------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Puts the two LSBs of integer variable 'P' into workspace #52, #53.
                                                                                     ; 
62315 03 | F36B AD 31 03   | LDA #331                                                ; Get LSB integer variable 'P'
62318 02 | F36E 85 52      | STA #52                                                 ; ..into w/s
62320 03 | F370 AD 4C 03   | LDA #34C                                                ; Get second LSB integer variable 'P'
62323 02 | F373 85 53      | STA #53                                                 ; ..into w/s
62325 01 | F375 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print Accumulator in Hexadecimal followed by a Space subroutine
                                                                                     ; ---------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Prints the accumulator as two hex digits followed by a space.
                                                                                     ; - COUNT is incremented 3 times.
                                                                                     ; - Returns with Acc=#20, X=#FD, Y preserved.
                                                                                     ; 
62326 03 | F376 20 7E F3   | JSR #F37E                                               ; Print the accumulator as two hex digits
62329 02 | F379 A9 20      | LDA @#20                                                ; Get <SPC>
62331 03 | F37B 4C 4C CA   | JMP #CA4C                                               ; Increment COUNT and send char to OSWRCH
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print Accumulator in Hexadecimal subroutine
                                                                                     ; -------------------------------------------
                                                                                     ; 
                                                                                     ; - Prints the accumulator as two hex digits.
                                                                                     ; - COUNT is incremented twice.
                                                                                     ; - Returns with X=#FD, Y preserved.
                                                                                     ; 
62334 02 | F37E A2 FF      | LDX @#FF                                                ; Required to return from #C5F9
62336 01 | F380 48         | PHA                                                     ; Save number
62337 01 | F381 4A         | LSR A                                                   ; )
62338 01 | F382 4A         | LSR A                                                   ; )
62339 01 | F383 4A         | LSR A                                                   ; )
62340 01 | F384 4A         | LSR A                                                   ; ) Bring upper nibble to lower
62341 03 | F385 20 F9 C5   | JSR #C5F9                                               ; Convert to hex and print
62344 01 | F388 68         | PLA                                                     ; Restore number
62345 02 | F389 29 0F      | AND @#F                                                 ; Clear upper nibble
62347 03 | F38B 4C F9 C5   | JMP #C5F9                                               ; Convert to hex and print
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Deal with Assembler Statement
                                                                                     ; -----------------------------
                                                                                     ; 
62350 02 | F38E A2 00      | LDX @#0                                                 ; 
62352 02 | F390 86 00      | STX #0                                                  ; Clear error number
62354 02 | F392 86 64      | STX #64                                                 ; Clear w/s
62356 02 | F394 86 65      | STX #65                                                 ; Clear w/s
                                                                                     ; 
                                                                                     ; GET OPCODE
                                                                                     ; 
62358 03 | F396 20 91 F2   | JSR #F291                                               ; Get the next non-space chracter from text
62361 02 | F399 C9 3A      | CMP @#3A                                                ; Is it ':', indicating label definition ?
62363 02 | F39B F0 91      | BEQ #F32E                                               ; ..yes, set up label to memory pointer P
62365 02 | F39D C9 3B      | CMP @#3B                                                ; Is it statement separator ';' ?
62367 02 | F39F F0 CA      | BEQ #F36B                                               ; ..yes, set up the memory pointer P
62369 02 | F3A1 C9 0D      | CMP @#D                                                 ; Is it the text line terminator <CR> ?
62371 02 | F3A3 F0 C6      | BEQ #F36B                                               ; ..yes, set up the memory pointer P
62373 02 | F3A5 C9 5C      | CMP @#5C                                                ; Is it '\', indicating a comment field ?
62375 02 | F3A7 F0 B7      | BEQ #F360                                               ; ..yes, skip to end of comment field
                                                                                     ; 
                                                                                     ; ENCODE CHARACTER OF OPCODE INTO #6A, #69
                                                                                     ; 
62377 02 | F3A9 A0 05      | LDY @#5                                                 ; 
62379 01 | F3AB 38         | SEC                                                     ; 
62380 02 | F3AC 69 00      | ADC @#0                                                 ; Add 1 and clear carry
62382 01 | F3AE 0A         | ASL A                                                   ; )
62383 01 | F3AF 0A         | ASL A                                                   ; ) Shift into upper nibble, with MS bit of
62384 01 | F3B0 0A         | ASL A                                                   ; ) lower nibble clear
62385 01 | F3B1 0A         | ASL A                                                   ; )
62386 02 | F3B2 26 6A      | ROL #6A                                                 ; )
62388 02 | F3B4 26 69      | ROL #69                                                 ; )
62390 01 | F3B6 88         | DEY                                                     ; ) Shift it 5 bits into #6A, #69
62391 02 | F3B7 D0 F8      | BNE #F3B1                                               ; )
62393 01 | F3B9 E8         | INX                                                     ; Increment opcode character counter
62394 02 | F3BA E0 03      | CPX @#3                                                 ; Fetched all 3 characters of opcode ?
62396 02 | F3BC D0 D8      | BNE #F396                                               ; ..no, fetch & encode the next character
62398 02 | F3BE 06 6A      | ASL #6A                                                 ; 
62400 02 | F3C0 26 69      | ROL #69                                                 ; 
                                                                                     ; 
                                                                                     ; TRY TO MATCH OPCODE AGAINST TABLES
                                                                                     ; 
62402 02 | F3C2 A2 40      | LDX @#40                                                ; Pointer to compressed mnemonic tables
62404 02 | F3C4 A5 69      | LDA #69                                                 ; Get LSB compressed encoded opcode
62406 03 | F3C6 DD 54 F1   | CMP #F154,X                                             ; Match in table ?
62409 02 | F3C9 F0 04      | BEQ #F3CF                                               ; ..yes, now try to match MSB
62411 01 | F3CB CA         | DEX                                                     ; ..no, decrement the  table counter
62412 02 | F3CC D0 F8      | BNE #F3C6                                               ; ..and try to match the next tabled opcode
62414 01 | F3CE 00         | BRK                                                     ; ..unless run out of table !
62415 03 | F3CF BC 94 F1   | LDY #F194,X                                             ; Get MSB code from table
62418 02 | F3D2 C4 6A      | CPY #6A                                                 ; Match MSB compressed encoded opcode ?
62420 02 | F3D4 D0 F5      | BNE #F3CB                                               ; ..no, try the next code from the table
                                                                                     ; 
                                                                                     ; SUCCESSFUL OPCODE MATCH
                                                                                     ; 
62422 03 | F3D6 BD 10 F2   | LDA #F210,X                                             ; Get Base address value (???) from table
62425 02 | F3D9 85 66      | STA #66                                                 ; ...into w/s
62427 03 | F3DB BC 50 F2   | LDY #F250,X                                             ; Get Base address value (???) from table
62430 02 | F3DE 84 0F      | STY #F                                                  ; ...into w/s
62432 02 | F3E0 66 64      | ROR #64                                                 ; 
62434 02 | F3E2 66 65      | ROR #65                                                 ; 
62436 01 | F3E4 88         | DEY                                                     ; 
62437 02 | F3E5 D0 F9      | BNE #F3E0                                               ; 
62439 02 | F3E7 A4 0F      | LDY #F                                                  ; 
62441 02 | F3E9 C0 0D      | CPY @#D                                                 ; 
62443 02 | F3EB D0 05      | BNE #F3F2                                               ; 
62445 02 | F3ED A2 00      | LDX @#0                                                 ; 
62447 03 | F3EF 4C 9B F4   | JMP #F49B                                               ; Construct opcode and data
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Get Assembler Addressing Mode Data and Type
                                                                                     ; -------------------------------------------
                                                                                     ; 
62450 03 | F3F2 20 91 F2   | JSR #F291                                               ; Get the next non-space character from text
62453 02 | F3F5 C9 40      | CMP @#40                                                ; Is it '@', signifying immediate address ?
62455 02 | F3F7 F0 5B      | BEQ #F454                                               ; ..yes, deal with immediate address mode
62457 02 | F3F9 C9 28      | CMP @#28                                                ; Is it '(', signifying indirect address ?
62459 02 | F3FB F0 65      | BEQ #F462                                               ; ..yes, deal with indirect address mode
62461 02 | F3FD A2 01      | LDX @#1                                                 ; 
62463 02 | F3FF C9 41      | CMP @#41                                                ; Is it 'A', signifying accumulator
                                                                                     ; addressing mode ?
62465 02 | F401 F0 EC      | BEQ #F3EF                                               ; ..yes, construct opcode
62467 02 | F403 C6 03      | DEC #3                                                  ; 
62469 03 | F405 20 8B C7   | JSR #C78B                                               ; Evaluate address onto the w/s stack
62472 03 | F408 20 91 F2   | JSR #F291                                               ; Get next non-space character from text
62475 02 | F40B C9 2C      | CMP @#2C                                                ; Is it ',', signifying indexed addressing ?
62477 02 | F40D D0 31      | BNE #F440                                               ; ..no,
                                                                                     ; 
                                                                                     ; DEAL WITH INDEXED ADDRESSING
                                                                                     ; 
62479 03 | F40F 20 91 F2   | JSR #F291                                               ; ..yes, Get the next non-space character
                                                                                     ; from text
62482 02 | F412 A4 25      | LDY #25                                                 ; 
62484 02 | F414 F0 15      | BEQ #F42B                                               ; 
62486 02 | F416 A2 09      | LDX @#9                                                 ; 
62488 02 | F418 C9 58      | CMP @#58                                                ; Is the index 'X' ?
62490 02 | F41A F0 7F      | BEQ #F49B                                               ; ..yes, construct opcode and data
62492 01 | F41C CA         | DEX                                                     ; 
62493 02 | F41D C9 59      | CMP @#59                                                ; Is the index 'Y'
62495 02 | F41F D0 79      | BNE #F49A                                               ; ..no, but nothing else is valid ! - BRK
62497 02 | F421 A5 0F      | LDA #F                                                  ; 
62499 02 | F423 C9 09      | CMP @#9                                                 ; 
62501 02 | F425 D0 74      | BNE #F49B                                               ; Construct opcode and data
62503 02 | F427 A2 0E      | LDX @#E                                                 ; 
62505 02 | F429 D0 70      | BNE #F49B                                               ; Construct opcode and data
62507 02 | F42B A2 04      | LDX @#4                                                 ; 
62509 02 | F42D C9 58      | CMP @#58                                                ; 
62511 02 | F42F F0 6A      | BEQ #F49B                                               ; Construct opcode and data
62513 02 | F431 C9 59      | CMP @#59                                                ; 
62515 02 | F433 D0 65      | BNE #F49A                                               ; 
62517 01 | F435 CA         | DEX                                                     ; 
62518 02 | F436 A4 0F      | LDY #F                                                  ; 
62520 02 | F438 C0 03      | CPY @#3                                                 ; 
62522 02 | F43A B0 5F      | BCS #F49B                                               ; Construct opcode and data
62524 02 | F43C A2 08      | LDX @#8                                                 ; 
62526 02 | F43E D0 5B      | BNE #F49B                                               ; Construct opcode and data
                                                                                     ; 
                                                                                     ; Act on Assembler ??? Mode
                                                                                     ; -------------------------
                                                                                     ; 
62528 02 | F440 C6 03      | DEC #3                                                  ; 
62530 02 | F442 A2 02      | LDX @#2                                                 ; 
62532 02 | F444 A4 0F      | LDY #F                                                  ; 
62534 02 | F446 C0 0C      | CPY @#C                                                 ; 
62536 02 | F448 F0 51      | BEQ #F49B                                               ; Construct opcode and data
62538 02 | F44A A2 05      | LDX @#5                                                 ; 
62540 02 | F44C A5 25      | LDA #25                                                 ; 
62542 02 | F44E F0 4B      | BEQ #F49B                                               ; Construct opcode and data
62544 02 | F450 A2 0C      | LDX @#C                                                 ; 
62546 02 | F452 D0 47      | BNE #F49B                                               ; Construct opcode and data
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Act on Assembler Immediate Mode
                                                                                     ; -------------------------------
                                                                                     ; 
62548 03 | F454 20 8B C7   | JSR #C78B                                               ; 
62551 02 | F457 A5 0F      | LDA #F                                                  ; 
62553 02 | F459 A2 06      | LDX @#6                                                 ; 
62555 02 | F45B C9 01      | CMP @#1                                                 ; 
62557 02 | F45D F0 3C      | BEQ #F49B                                               ; Construct opcode and data
62559 01 | F45F E8         | INX                                                     ; 
62560 02 | F460 D0 39      | BNE #F49B                                               ; Construct opcode and data
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Act on Assembler Indirect Mode
                                                                                     ; ------------------------------
                                                                                     ; 
62562 03 | F462 20 8B C7   | JSR #C78B                                               ; 
62565 03 | F465 20 91 F2   | JSR #F291                                               ; 
62568 02 | F468 C9 29      | CMP @#29                                                ; 
62570 02 | F46A F0 16      | BEQ #F482                                               ; 
62572 02 | F46C C9 2C      | CMP @#2C                                                ; 
62574 02 | F46E D0 2A      | BNE #F49A                                               ; 
62576 03 | F470 20 91 F2   | JSR #F291                                               ; 
62579 02 | F473 C9 58      | CMP @#58                                                ; 
62581 02 | F475 D0 23      | BNE #F49A                                               ; 
62583 03 | F477 20 91 F2   | JSR #F291                                               ; 
62586 02 | F47A C9 29      | CMP @#29                                                ; 
62588 02 | F47C D0 1C      | BNE #F49A                                               ; 
62590 02 | F47E A2 0B      | LDX @#B                                                 ; 
62592 02 | F480 D0 19      | BNE #F49B                                               ; Construct opcode and data
62594 02 | F482 A2 0D      | LDX @#D                                                 ; 
62596 02 | F484 A5 0F      | LDA #F                                                  ; 
62598 02 | F486 C9 0B      | CMP @#B                                                 ; 
62600 02 | F488 F0 11      | BEQ #F49B                                               ; Construct opcode and data
62602 02 | F48A A2 0A      | LDX @#A                                                 ; 
62604 03 | F48C 20 91 F2   | JSR #F291                                               ; 
62607 02 | F48F C9 2C      | CMP @#2C                                                ; 
62609 02 | F491 D0 07      | BNE #F49A                                               ; 
62611 03 | F493 20 91 F2   | JSR #F291                                               ; 
62614 02 | F496 C9 59      | CMP @#59                                                ; 
62616 02 | F498 F0 01      | BEQ #F49B                                               ; Construct opcode and data
62618 01 | F49A 00         | BRK                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Construct Assembler Opcode and Data
                                                                                     ; -----------------------------------
                                                                                     ; 
62619 03 | F49B 20 60 F3   | JSR #F360                                               ; 
62622 03 | F49E BD D5 F1   | LDA #F1D5,X                                             ; 
62625 02 | F4A1 F0 04      | BEQ #F4A7                                               ; 
62627 02 | F4A3 25 64      | AND #64                                                 ; 
62629 02 | F4A5 D0 07      | BNE #F4AE                                               ; 
62631 03 | F4A7 BD E4 F1   | LDA #F1E4,X                                             ; 
62634 02 | F4AA 25 65      | AND #65                                                 ; 
62636 02 | F4AC F0 EC      | BEQ #F49A                                               ; 
62638 01 | F4AE 18         | CLC                                                     ; 
62639 03 | F4AF BD F3 F1   | LDA #F1F3,X                                             ; 
62642 02 | F4B2 65 66      | ADC #66                                                 ; 
62644 02 | F4B4 85 66      | STA #66                                                 ; 
62646 03 | F4B6 BD 02 F2   | LDA #F202,X                                             ; 
62649 02 | F4B9 A2 00      | LDX @#0                                                 ; 
62651 02 | F4BB 86 04      | STX #4                                                  ; 
62653 02 | F4BD A4 16      | LDY #16                                                 ; 
62655 02 | F4BF 84 67      | STY #67                                                 ; 
62657 02 | F4C1 A4 25      | LDY #25                                                 ; 
62659 02 | F4C3 84 68      | STY #68                                                 ; 
62661 02 | F4C5 C9 0F      | CMP @#F                                                 ; 
62663 02 | F4C7 F0 23      | BEQ #F4EC                                               ; 
62665 02 | F4C9 29 0F      | AND @#F                                                 ; 
62667 01 | F4CB A8         | TAY                                                     ; 
62668 01 | F4CC C8         | INY                                                     ; 
62669 02 | F4CD 84 00      | STY #0                                                  ; 
62671 02 | F4CF C0 02      | CPY @#2                                                 ; 
62673 02 | F4D1 D0 04      | BNE #F4D7                                               ; 
62675 02 | F4D3 A4 68      | LDY #68                                                 ; 
62677 02 | F4D5 D0 C3      | BNE #F49A                                               ; 
62679 02 | F4D7 A0 00      | LDY @#0                                                 ; 
62681 03 | F4D9 B9 66 00   | LDA #66,Y                                               ; 
62684 02 | F4DC 91 52      | STA (#52),Y                                             ; 
62686 01 | F4DE C8         | INY                                                     ; 
62687 03 | F4DF EE 31 03   | INC #331                                                ; 
62690 02 | F4E2 D0 03      | BNE #F4E7                                               ; 
62692 03 | F4E4 EE 4C 03   | INC #34C                                                ; 
62695 02 | F4E7 C4 00      | CPY #0                                                  ; 
62697 02 | F4E9 D0 EE      | BNE #F4D9                                               ; 
62699 01 | F4EB 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle Assembler Relative Addressing
                                                                                     ; ------------------------------------
                                                                                     ; 
62700 02 | F4EC A9 02      | LDA @#2                                                 ; 
62702 02 | F4EE 85 00      | STA #0                                                  ; 
62704 01 | F4F0 38         | SEC                                                     ; 
62705 02 | F4F1 A5 67      | LDA #67                                                 ; 
62707 03 | F4F3 ED 31 03   | SBC #331                                                ; 
62710 02 | F4F6 85 67      | STA #67                                                 ; 
62712 02 | F4F8 A5 68      | LDA #68                                                 ; 
62714 03 | F4FA ED 4C 03   | SBC #34C                                                ; 
62717 02 | F4FD 85 68      | STA #68                                                 ; 
62719 01 | F4FF 38         | SEC                                                     ; 
62720 02 | F500 A5 67      | LDA #67                                                 ; 
62722 02 | F502 E9 02      | SBC @#2                                                 ; 
62724 02 | F504 85 67      | STA #67                                                 ; 
62726 01 | F506 A8         | TAY                                                     ; 
62727 02 | F507 A5 68      | LDA #68                                                 ; 
62729 02 | F509 E9 00      | SBC @#0                                                 ; 
62731 02 | F50B F0 1F      | BEQ #F52C                                               ; 
62733 02 | F50D C9 FF      | CMP @#FF                                                ; 
62735 02 | F50F F0 16      | BEQ #F527                                               ; 
62737 03 | F511 20 D1 F7   | JSR #F7D1                                               ; 
                                                                                     ; 
62740 15 | F514 4F 55 54 20 4F 46 20 52 41 4E 47 45 3A 0A 0D                         ; OUT OF RANGE:..
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'OLD'
                                                                                     ; -------------------------
                                                                                     ; 
                                                                                     ; - Exits to END at #CD98 and hence to Direct Mode.
                                                                                     ; 
;;ERR missing data curr: 62769 should be next: 62755
62769 03 | F531 20 E4 C4   | JSR #C4E4                                               ; Do the interpreter post test
62772 01 | F534 88         | DEY                                                     ; Now Y=0
62773 02 | F535 84 52      | STY #52                                                 ; Set w/s to LSB start of text
62775 02 | F537 A5 12      | LDA #12                                                 ; Get text page
62777 02 | F539 85 53      | STA #53                                                 ; Set w/s to MSB start of text
62779 01 | F53B 98         | TYA                                                     ; Clear accumulator
62780 01 | F53C C8         | INY                                                     ; Point to the MSB first line number
62781 02 | F53D 91 52      | STA (#52),Y                                             ; ..and clear it, killing any previous NEW
62783 03 | F53F 4C 9B CD   | JMP #CD9B                                               ; Evaluate END, updating TOP, and returning
                                                                                     ; to the Direct Mode.
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'DRAW'
                                                                                     ; --------------------------
                                                                                     ; 
                                                                                     ; - Executes PLOT 5,X,Y.
                                                                                     ; 
62786 02 | F542 A2 05      | LDX @#5                                                 ; DRAW is PLOT 5
62788 02 | F544 D0 02      | BNE #F548                                               ; ..so dump the PLOT number to the w/s
                                                                                     ; stack , interpret the (X,Y) coordinates
                                                                                     ; and execute as per the PLOT routine
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'MOVE'
                                                                                     ; --------------------------
                                                                                     ; 
                                                                                     ; - Executes PLOT 12,X,Y.
                                                                                     ; 
62790 02 | F546 A2 0C      | LDX @#C                                                 ; MOVE is PLOT 12
62792 02 | F548 86 16      | STX #16                                                 ; ..so dump the PLOT number to the w/s stack
62794 02 | F54A E6 04      | INC #4                                                  ; Increment w/s stack pointer
62796 02 | F54C D0 06      | BNE #F554                                               ; Interpret the (X,Y) coordinates and
                                                                                     ; execute as per the PLOT routine
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'PLOT'
                                                                                     ; --------------------------
                                                                                     ; 
                                                                                     ; EVALUATE PLOT NUMBER INTO #16, AND THE
                                                                                     ; X & Y COORDINATES INTO (#5A,#5B),(#5C,#5D)
                                                                                     ; 
62798 03 | F54E 20 BC C8   | JSR #C8BC                                               ; Evaluate PLOT number onto the w/s stack
62801 03 | F551 20 31 C2   | JSR #C231                                               ; Search for ',', executing BRK if failure
62804 03 | F554 20 BC C8   | JSR #C8BC                                               ; Evaluate X coordinate onto the w/s stack
62807 03 | F557 20 31 C2   | JSR #C231                                               ; Search for ',', executing BRK if failure
62810 03 | F55A 20 BC C8   | JSR #C8BC                                               ; Evaluate Y coordinate onto the w/s stack
62813 03 | F55D 20 E4 C4   | JSR #C4E4                                               ; Do the interpreter post test
62816 02 | F560 B5 15      | LDA #15,X                                               ; Get LSB Y coordinate from the w/s stack
62818 02 | F562 85 5C      | STA #5C                                                 ; ..into w/s
62820 02 | F564 B5 24      | LDA #24,X                                               ; Get MSB Y coordinate from the w/s stack
62822 02 | F566 85 5D      | STA #5D                                                 ; ..into w/s
62824 02 | F568 B5 14      | LDA #14,X                                               ; Get LSB X coordinate from the w/s stack
62826 02 | F56A 85 5A      | STA #5A                                                 ; ..into w/s
62828 02 | F56C B5 23      | LDA #23,X                                               ; Get MSB X coordinate from the w/s stack
62830 02 | F56E 85 5B      | STA #5B                                                 ; ..into w/s
62832 02 | F570 A2 00      | LDX @#0                                                 ; 
62834 02 | F572 86 04      | STX #4                                                  ; Clear w/s stack pointer
                                                                                     ; 
                                                                                     ; GET LAST PLOTTED COORDINATE INTO
                                                                                     ; (#52,#53) FOR X, AND (#54,#55) FOR Y
                                                                                     ; 
62836 02 | F574 A2 03      | LDX @#3                                                 ; 
62838 03 | F576 BD C1 03   | LDA #3C1,X                                              ; )
62841 02 | F579 95 52      | STA #52,X                                               ; )
62843 01 | F57B CA         | DEX                                                     ; ) Get data from the LPP stack #3C1..#3C4
62844 02 | F57C 10 F8      | BPL #F576                                               ; ) and store in w/s #52..#55
                                                                                     ; 
                                                                                     ; DEAL WITH ABSOLUTE AND RELATIVE PLOTS
                                                                                     ; 
62846 02 | F57E A5 16      | LDA #16                                                 ; Get PLOT number
62848 02 | F580 29 04      | AND @#4                                                 ; Is it MOVE/DRAW to an absolute position ?
62850 02 | F582 D0 13      | BNE #F597                                               ; ..yes, so the LPP is not used
                                                                                     ; 
                                                                                     ; ADD OLD (X,Y) COORDINATE TO NEW (X,Y)
                                                                                     ; COORDINATE FOR RELATIVE PLOTS
                                                                                     ; 
62852 02 | F584 A2 02      | LDX @#2                                                 ; 
62854 01 | F586 18         | CLC                                                     ; 
62855 02 | F587 B5 5A      | LDA #5A,X                                               ; Get new X or Y LSB coordinate
62857 02 | F589 75 52      | ADC #52,X                                               ; Add to old X or Y LSB coordinate
62859 02 | F58B 95 5A      | STA #5A,X                                               ; ..and store resultant relative coordinate
62861 02 | F58D B5 5B      | LDA #5B,X                                               ; Get new X or Y MSB coordinate
62863 02 | F58F 75 53      | ADC #53,X                                               ; Add to old X or Y LSB coordinate
62865 02 | F591 95 5B      | STA #5B,X                                               ; ..and store resultant relative coordinate
62867 01 | F593 CA         | DEX                                                     ; 
62868 01 | F594 CA         | DEX                                                     ; 
62869 02 | F595 10 EF      | BPL #F586                                               ; ..do both X and Y coordinates
                                                                                     ; 
                                                                                     ; COPY NEW PLOT POSITION TO THE
                                                                                     ; LAST PLOTTED POINT STACK
                                                                                     ; 
62871 02 | F597 A2 03      | LDX @#3                                                 ; )
62873 02 | F599 B5 5A      | LDA #5A,X                                               ; )
62875 03 | F59B 9D C1 03   | STA #3C1,X                                              ; )
62878 01 | F59E CA         | DEX                                                     ; ) Get data from w/s #5A..#5D
62879 02 | F59F 10 F8      | BPL #F599                                               ; ) and store in the LPP stack #3C1..#3C4
                                                                                     ; 
                                                                                     ; EXECUTE POINT PLOT OR LINE DRAW AS RQD
                                                                                     ; 
62881 02 | F5A1 A5 16      | LDA #16                                                 ; Get PLOT number
62883 02 | F5A3 29 03      | AND @#3                                                 ; Is it just a MOVE ?
62885 02 | F5A5 F0 0B      | BEQ #F5B2                                               ; ..yes, return to interpreter
62887 02 | F5A7 85 5E      | STA #5E                                                 ; Save these 3 bits as Clear/Set/Invert flag
62889 02 | F5A9 A5 16      | LDA #16                                                 ; Get PLOT number
62891 02 | F5AB 29 08      | AND @#8                                                 ; Is it a point plot or a line draw ?
62893 02 | F5AD F0 06      | BEQ #F5B5                                               ; Branch if it's a line draw
62895 03 | F5AF 20 78 F6   | JSR #F678                                               ; Otherwise plot a point
62898 03 | F5B2 4C 5B C5   | JMP #C55B                                               ; ..and return to the interpreter
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Draw a Line Routine
                                                                                     ; -------------------
                                                                                     ; 
                                                                                     ; - Uses the point plot routine at (#3FE).
                                                                                     ; - Returns to the interpreter at #C55B.
                                                                                     ; - Entry: Old position X coordinate (#52,#53)
                                                                                     ; Old position Y coordinate (#54,#55)
                                                                                     ; New position X coordinate (#5A,#5B)
                                                                                     ; New position Y coordinate (#5C,#5D)
                                                                                     ; #5E=0,1,2 to Clear, Set or Invert the line.
                                                                                     ; 
                                                                                     ; - Uses:  Change  in   X coordinate (#52,#53)
                                                                                     ; Change  in   Y coordinate (#54,#55)
                                                                                     ; Old position X coordinate (#5A,#5B)
                                                                                     ; Old position Y coordinate (#5C,#5D)
                                                                                     ; 
                                                                                     ; CALCULATE (NEW X) - (OLD X) INTO (#56,#57)
                                                                                     ; CALCULATE (NEW Y) - (OLD Y) INTO (#58,#59)
                                                                                     ; 
62901 02 | F5B5 A2 02      | LDX @#2                                                 ; 
62903 01 | F5B7 38         | SEC                                                     ; 
62904 02 | F5B8 B5 5A      | LDA #5A,X                                               ; Get LSB new X or Y
62906 02 | F5BA F5 52      | SBC #52,X                                               ; Subtract LSB old X or Y
62908 02 | F5BC B4 52      | LDY #52,X                                               ; Get LSB old X or Y
62910 02 | F5BE 94 5A      | STY #5A,X                                               ; ..and store LSB X or Y in new w/s
62912 02 | F5C0 95 52      | STA #52,X                                               ; Store LSB X or Y change in w/s
62914 02 | F5C2 B4 53      | LDY #53,X                                               ; Get MSB old X or Y
62916 02 | F5C4 B5 5B      | LDA #5B,X                                               ; Get MSB new X or Y
62918 02 | F5C6 F5 53      | SBC #53,X                                               ; Subtract MSB old X or Y
62920 02 | F5C8 94 5B      | STY #5B,X                                               ; ..and store MSB old X or Y in new w/s
62922 02 | F5CA 95 53      | STA #53,X                                               ; Store MSB X or Y change in w/s
62924 02 | F5CC 95 56      | STA #56,X                                               ; Keep a copy of MSB change for testing
62926 02 | F5CE 10 0D      | BPL #F5DD                                               ; Branch if New >= Old
                                                                                     ; 
                                                                                     ; OFFSET IS NEGATIVE - NEGATE IT
                                                                                     ; 
62928 02 | F5D0 A9 00      | LDA @#0                                                 ; 
62930 01 | F5D2 38         | SEC                                                     ; 
62931 02 | F5D3 F5 52      | SBC #52,X                                               ; Negate LSB change
62933 02 | F5D5 95 52      | STA #52,X                                               ; ..and store it
62935 02 | F5D7 A9 00      | LDA @#0                                                 ; 
62937 02 | F5D9 F5 53      | SBC #53,X                                               ; Negate MSB change
62939 02 | F5DB 95 53      | STA #53,X                                               ; ..and store it
62941 01 | F5DD CA         | DEX                                                     ; 
62942 01 | F5DE CA         | DEX                                                     ; 
62943 02 | F5DF 10 D6      | BPL #F5B7                                               ; ..deal with both X and Y coordinates
                                                                                     ; 
62945 02 | F5E1 A5 54      | LDA #54                                                 ; Get LSB Y change
62947 02 | F5E3 C5 52      | CMP #52                                                 ; Clear carry if LSB Y < LSB X
62949 02 | F5E5 A5 55      | LDA #55                                                 ; Get MSB X change
62951 02 | F5E7 E5 53      | SBC #53                                                 ; Subtract  MSB Y change
62953 02 | F5E9 90 31      | BCC #F61C                                               ; ..deal with Y change < X change
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Plot a Line with (X change) <= (Y change)
                                                                                     ; -----------------------------------------
                                                                                     ; 
62955 02 | F5EB A9 00      | LDA @#0                                                 ; 
62957 02 | F5ED E5 54      | SBC #54                                                 ; 
62959 02 | F5EF 85 57      | STA #57                                                 ; 
62961 02 | F5F1 A9 00      | LDA @#0                                                 ; 
62963 02 | F5F3 E5 55      | SBC #55                                                 ; 
62965 01 | F5F5 38         | SEC                                                     ; 
62966 01 | F5F6 6A         | ROR A                                                   ; 
62967 02 | F5F7 85 59      | STA #59                                                 ; 
62969 02 | F5F9 66 57      | ROR #57                                                 ; 
62971 03 | F5FB 20 78 F6   | JSR #F678                                               ; 
62974 02 | F5FE A5 5C      | LDA #5C                                                 ; 
62976 03 | F600 CD C3 03   | CMP #3C3                                                ; 
62979 02 | F603 D0 0A      | BNE #F60F                                               ; 
62981 02 | F605 A5 5D      | LDA #5D                                                 ; 
62983 03 | F607 CD C4 03   | CMP #3C4                                                ; 
62986 02 | F60A D0 03      | BNE #F60F                                               ; 
62988 03 | F60C 4C 5B C5   | JMP #C55B                                               ; 
                                                                                     ; 
62991 03 | F60F 20 55 F6   | JSR #F655                                               ; 
62994 02 | F612 A5 59      | LDA #59                                                 ; 
62996 02 | F614 30 E5      | BMI #F5FB                                               ; 
62998 03 | F616 20 44 F6   | JSR #F644                                               ; 
63001 03 | F619 4C FB F5   | JMP #F5FB                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Plot a Line with (X change) > (Y change)
                                                                                     ; ----------------------------------------
                                                                                     ; 
63004 02 | F61C A5 53      | LDA #53                                                 ; 
63006 01 | F61E 4A         | LSR A                                                   ; 
63007 02 | F61F 85 59      | STA #59                                                 ; 
63009 02 | F621 A5 52      | LDA #52                                                 ; 
63011 01 | F623 6A         | ROR A                                                   ; 
63012 02 | F624 85 57      | STA #57                                                 ; 
63014 03 | F626 20 78 F6   | JSR #F678                                               ; 
63017 02 | F629 A5 5A      | LDA #5A                                                 ; 
63019 03 | F62B CD C1 03   | CMP #3C1                                                ; 
63022 02 | F62E D0 07      | BNE #F637                                               ; 
63024 02 | F630 A5 5B      | LDA #5B                                                 ; 
63026 03 | F632 CD C2 03   | CMP #3C2                                                ; 
63029 02 | F635 F0 D5      | BEQ #F60C                                               ; 
63031 03 | F637 20 44 F6   | JSR #F644                                               ; 
63034 02 | F63A A5 59      | LDA #59                                                 ; 
63036 02 | F63C 10 E8      | BPL #F626                                               ; 
63038 03 | F63E 20 55 F6   | JSR #F655                                               ; 
63041 03 | F641 4C 26 F6   | JMP #F626                                               ; 
                                                                                     ; 
                                                                                     ; 
63044 01 | F644 38         | SEC                                                     ; 
63045 02 | F645 A5 57      | LDA #57                                                 ; 
63047 02 | F647 E5 54      | SBC #54                                                 ; 
63049 02 | F649 85 57      | STA #57                                                 ; 
63051 02 | F64B A5 59      | LDA #59                                                 ; 
63053 02 | F64D E5 55      | SBC #55                                                 ; 
63055 02 | F64F 85 59      | STA #59                                                 ; 
63057 02 | F651 A2 00      | LDX @#0                                                 ; 
63059 02 | F653 F0 0F      | BEQ #F664                                               ; 
63061 01 | F655 18         | CLC                                                     ; 
63062 02 | F656 A5 57      | LDA #57                                                 ; 
63064 02 | F658 65 52      | ADC #52                                                 ; 
63066 02 | F65A 85 57      | STA #57                                                 ; 
63068 02 | F65C A5 59      | LDA #59                                                 ; 
63070 02 | F65E 65 53      | ADC #53                                                 ; 
63072 02 | F660 85 59      | STA #59                                                 ; 
63074 02 | F662 A2 02      | LDX @#2                                                 ; 
63076 02 | F664 B5 56      | LDA #56,X                                               ; 
63078 02 | F666 10 09      | BPL #F671                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Decrement the Vector (#5A),X subroutine
                                                                                     ; ---------------------------------------
                                                                                     ; 
63080 02 | F668 B5 5A      | LDA #5A,X                                               ; 
63082 02 | F66A D0 02      | BNE #F66E                                               ; 
63084 02 | F66C D6 5B      | DEC #5B,X                                               ; 
63086 02 | F66E D6 5A      | DEC #5A,X                                               ; 
63088 01 | F670 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Increment the Vector (#5A),X subroutine
                                                                                     ; ---------------------------------------
                                                                                     ; 
63089 02 | F671 F6 5A      | INC #5A,X                                               ; 
63091 02 | F673 D0 FB      | BNE #F670                                               ; 
63093 02 | F675 F6 5B      | INC #5B,X                                               ; 
63095 01 | F677 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Plot a Point Subroutine
                                                                                     ; -----------------------
                                                                                     ; 
63096 03 | F678 6C FE 03   | JMP (#3FE)                                              ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command 'CLEAR'
                                                                                     ; ---------------------------
                                                                                     ; 
                                                                                     ; - Sets up the appropriate word at #B000 for the 6847 VDG.
                                                                                     ; - Places the appropriate point plot routine address in vector #3FE, #3FF.
                                                                                     ; 
63099 03 | F67B 20 C8 C3   | JSR #C3C8                                               ; Evaluate the Clear Mode number
63102 02 | F67E A0 00      | LDY @#0                                                 ; 
63104 02 | F680 A5 52      | LDA #52                                                 ; Get the Mode number
63106 02 | F682 F0 3E      | BEQ #F6C2                                               ; ..do CLEAR 0
63108 02 | F684 C9 05      | CMP @#5                                                 ; Is the Mode number>4 ?
63110 02 | F686 90 02      | BCC #F68A                                               ; ..no
63112 02 | F688 A9 04      | LDA @#4                                                 ; ..yes, set it to 4
63114 02 | F68A A2 80      | LDX @#80                                                ; 
63116 02 | F68C 86 54      | STX #54                                                 ; Set MSB pointer to MSB start of screen
63118 02 | F68E 84 53      | STY #53                                                 ; Set LSB pointer to LSB start of screen
63120 02 | F690 85 52      | STA #52                                                 ; Save Mode number
63122 01 | F692 AA         | TAX                                                     ; Now X=Mode number
63123 03 | F693 BD CE F6   | LDA #F6CE,X                                             ; Get page AFTER the last to be cleared
                                                                                     ; 
                                                                                     ; CHECK THAT TEXT IS NOT IN GRAPHICS AREA
                                                                                     ; 
63126 02 | F696 A6 12      | LDX #12                                                 ; Get text page
63128 02 | F698 10 04      | BPL #F69E                                               ; Branch if in lower text space
63130 02 | F69A C5 12      | CMP #12                                                 ; Otherwise test if Text is above Graphics
63132 02 | F69C B0 E1      | BCS #F67F                                               ; ..no, Text is in graphics area - BRK
63134 01 | F69E AA         | TAX                                                     ; This is the page AFTER the last to clear
63135 01 | F69F 98         | TYA                                                     ; Clear accumulator
                                                                                     ; 
                                                                                     ; CLEAR GRAPHICS MEMORY - A PAGE AT A TIME
                                                                                     ; 
63136 02 | F6A0 91 53      | STA (#53),Y                                             ; Clear graphics memory byte to zero
63138 01 | F6A2 88         | DEY                                                     ; 
63139 02 | F6A3 D0 FB      | BNE #F6A0                                               ; ..do the complete page
63141 02 | F6A5 E6 54      | INC #54                                                 ; Point to the next page
63143 02 | F6A7 E4 54      | CPX #54                                                 ; Cleared all the graphics pages ?
63145 02 | F6A9 D0 F5      | BNE #F6A0                                               ; ..no, so clear this page too
                                                                                     ; 
                                                                                     ; SET UP POINT PLOT VECTORS & INITIALISE VDG
                                                                                     ; 
63147 02 | F6AB A4 52      | LDY #52                                                 ; Get the graphics Mode number
63149 03 | F6AD B9 D8 F6   | LDA #F6D8,Y                                             ; Get the MSB point plot routine address
63152 03 | F6B0 8D FF 03   | STA #3FF                                                ; ..into the MSB point plot vector
63155 03 | F6B3 B9 D3 F6   | LDA #F6D3,Y                                             ; Get the LSB point plot routine address
63158 03 | F6B6 8D FE 03   | STA #3FE                                                ; ..into the LSB point plot vector
63161 03 | F6B9 B9 DD F6   | LDA #F6DD,Y                                             ; Get the 6847 VDG Control Byte
63164 03 | F6BC 8D 00 B0   | STA #B000                                               ; ..and set up the VDG graphic mode
63167 03 | F6BF 4C 58 C5   | JMP #C558                                               ; ..back to the interpreter
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Perform 'CLEAR 0'
                                                                                     ; -----------------
                                                                                     ; 
                                                                                     ; - Enter with Y=0
                                                                                     ; 
63170 02 | F6C2 A9 40      | LDA @#40                                                ; Get graphics space character
63172 03 | F6C4 99 00 80   | STA #8000,Y                                             ; Clear byte of upper screen page
63175 03 | F6C7 99 00 81   | STA #8100,Y                                             ; Clear byte of lower screen page
63178 01 | F6CA 88         | DEY                                                     ; 
63179 02 | F6CB D0 F7      | BNE #F6C4                                               ; ..clear all 512 bytes of the screen
63181 02 | F6CD F0 DC      | BEQ #F6AB                                               ; Set up point plot vectors & initialise VDG
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Graphics Mode Control Data
                                                                                     ; --------------------------
                                                                                     ; 
                                                                                     ; Graphics Page Limit used by CLEAR 1 to Clear 4
                                                                                     ; ----------------------------------------------
                                                                                     ; 
63183 04 | F6CF 84 86 8C 98                                                          ; 
                                                                                     ; 
                                                                                     ; Point Plot Routine LSBs for Graphic Modes 0 to 4
                                                                                     ; ------------------------------------------------
                                                                                     ; 
63187 05 | F6D3 E2 3B 54 6D AA                                                       ; 
                                                                                     ; 
                                                                                     ; Point Plot Routine MSBs for Graphic Modes 0 to 4
                                                                                     ; ------------------------------------------------
                                                                                     ; 
63192 05 | F6D8 F6 F7 F7 F7 F7                                                       ; 
                                                                                     ; 
                                                                                     ; VDG Control Byte for Graphic Modes 0 to 4
                                                                                     ; -----------------------------------------
                                                                                     ; 
63197 05 | F6DD 00 30 70 B0 F0                                                       ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Mode 0 Point PLot Routine
                                                                                     ; -------------------------
                                                                                     ; 
                                                                                     ; - Screen Resolution: X=0 to 63, Y=0 TO 47.
                                                                                     ; - Requires : #5A, #5B = X coordinate.
                                                                                     ; #5C, #5D = Y coordinate.
                                                                                     ; #5E=0,1,2  to clear, set, or invert the point.
                                                                                     ; - Destroys A,X,Y registers.
                                                                                     ; 
63202 02 | F6E2 A5 5B      | LDA #5B                                                 ; If MSB X>0..
63204 02 | F6E4 05 5D      | ORA #5D                                                 ; ..and MSB Y>0..
63206 02 | F6E6 D0 52      | BNE #F73A                                               ; ..then RTS, since out of range
63208 02 | F6E8 A5 5A      | LDA #5A                                                 ; Get X coordinate
63210 02 | F6EA C9 40      | CMP @#40                                                ; Is it >=64 ?
63212 02 | F6EC B0 4C      | BCS #F73A                                               ; ..yes, out of range - return
63214 01 | F6EE 4A         | LSR A                                                   ; Divide by 2 to get X byte
63215 02 | F6EF 85 5F      | STA #5F                                                 ; Save byte in the X direction
63217 02 | F6F1 A9 2F      | LDA @#2F                                                ; Get Ymax = 47
63219 01 | F6F3 38         | SEC                                                     ; 
63220 02 | F6F4 E5 5C      | SBC #5C                                                 ; ..and subtract the Y coordinate
63222 02 | F6F6 C9 30      | CMP @#30                                                ; Is the Y coordinate out of range ?
63224 02 | F6F8 B0 40      | BCS #F73A                                               ; ..yes, return
                                                                                     ; 
                                                                                     ; DIVIDE Y COORDINATE BY 3 BY SUBTRACTION
                                                                                     ; 
63226 02 | F6FA A2 FF      | LDX @#FF                                                ; 
63228 01 | F6FC 38         | SEC                                                     ; 
63229 01 | F6FD E8         | INX                                                     ; Y byte counter
63230 02 | F6FE E9 03      | SBC @#3                                                 ; Subtract 3, since there are 3 pixels to
                                                                                     ; a byte in the Y direction
63232 02 | F700 B0 FB      | BCS #F6FD                                               ; 
63234 02 | F702 69 03      | ADC @#3                                                 ; 
63236 02 | F704 85 61      | STA #61                                                 ; Save remainder - this is the bit in the
                                                                                     ; graphics byte block
63238 01 | F706 8A         | TXA                                                     ; This is the byte in the Y direction
63239 01 | F707 0A         | ASL A                                                   ; )
63240 01 | F708 0A         | ASL A                                                   ; )
63241 01 | F709 0A         | ASL A                                                   ; )
63242 01 | F70A 0A         | ASL A                                                   ; ) Multiply by 16 to get the row offset
63243 01 | F70B 0A         | ASL A                                                   ; )       (32 bytes to a row)
63244 02 | F70C 05 5F      | ORA #5F                                                 ; Includes the bytes in the Y direction
63246 02 | F70E 85 5F      | STA #5F                                                 ; ..and save the LSB screen byte
63248 02 | F710 A9 80      | LDA @#80                                                ; Get the MSB first screen address
63250 02 | F712 69 00      | ADC @#0                                                 ; Include any carry from the previous shifts
63252 02 | F714 85 60      | STA #60                                                 ; ..and save the MSB screen byte
63254 02 | F716 A5 5A      | LDA #5A                                                 ; Get the X coordinate
63256 01 | F718 4A         | LSR A                                                   ; If it's odd, set the Carry flag
63257 02 | F719 A5 61      | LDA #61                                                 ; Get the Y byte remainder
63259 01 | F71B 2A         | ROL A                                                   ; Include the X position
63260 01 | F71C A8         | TAY                                                     ; ..and use as pointer to the bit mask table
63261 03 | F71D B9 CB F7   | LDA #F7CB,Y                                             ; Get the appropriate bit mask from table
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Point Clear/Set/Invert subroutine
                                                                                     ; ---------------------------------
                                                                                     ; 
                                                                                     ; - Entry: (#5F) = Byte address
                                                                                     ; Acc = Bit mask
                                                                                     ; #5E = 0, 1, 2 to clear, set, or invert the point
                                                                                     ; 
63264 02 | F720 A0 00      | LDY @#0                                                 ; 
63266 02 | F722 A6 5E      | LDX #5E                                                 ; 
63268 01 | F724 CA         | DEX                                                     ; 
63269 02 | F725 F0 0F      | BEQ #F736                                               ; ..branch to set the point
63271 01 | F727 CA         | DEX                                                     ; 
63272 02 | F728 F0 07      | BEQ #F731                                               ; ..branch to invert the point
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Clear point subroutine
                                                                                     ; ----------------------
                                                                                     ; 
63274 02 | F72A 49 FF      | EOR @#FF                                                ; 
63276 02 | F72C 31 5F      | AND (#5F),Y                                             ; 
63278 02 | F72E 91 5F      | STA (#5F),Y                                             ; 
63280 01 | F730 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Invert point subroutine
                                                                                     ; -----------------------
                                                                                     ; 
63281 02 | F731 51 5F      | EOR (#5F),Y                                             ; 
63283 02 | F733 91 5F      | STA (#5F),Y                                             ; 
63285 01 | F735 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Set point sbroutine
                                                                                     ; -------------------
                                                                                     ; 
63286 02 | F736 11 5F      | ORA (#5F),Y                                             ; 
63288 02 | F738 91 5F      | STA (#5F),Y                                             ; 
63290 01 | F73A 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Mode 1 Point Plot subroutine
                                                                                     ; ----------------------------
                                                                                     ; 
                                                                                     ; - Screen Resolution: X=0 to 127, Y=0 TO 64.
                                                                                     ; - Requires : #5A, #5B = X coordinate
                                                                                     ; #5C, #5D = Y coordinate
                                                                                     ; #5E=0,1,2  to clear, set, or invert the point.
                                                                                     ; - Destroys A,X,Y registers.
                                                                                     ; 
63291 02 | F73B A5 5B      | LDA #5B                                                 ; If MSB X>0..
63293 02 | F73D 05 5D      | ORA #5D                                                 ; ..and MSB Y>0..
63295 02 | F73F D0 F9      | BNE #F73A                                               ; ..then RTS, since out of range
63297 02 | F741 A5 5A      | LDA #5A                                                 ; Get X coordinate
63299 02 | F743 30 F5      | BMI #F73A                                               ; If >127 then RTS, since out of range
63301 01 | F745 4A         | LSR A                                                   ; )
63302 01 | F746 4A         | LSR A                                                   ; )
63303 01 | F747 4A         | LSR A                                                   ; ) Divide by 8 to get X
63304 02 | F748 85 5F      | STA #5F                                                 ; Save the byte in the X direction
63306 02 | F74A A9 3F      | LDA @#3F                                                ; Get Ymax = 63
63308 01 | F74C 38         | SEC                                                     ; 
63309 02 | F74D E5 5C      | SBC #5C                                                 ; ..and subtract the Y coordinate
63311 02 | F74F C9 40      | CMP @#40                                                ; Is the Y coordinate out of range ?
63313 02 | F751 90 32      | BCC #F785                                               ; ..no, multiply Y offset by 16 to get
                                                                                     ; bytes/row, calculate byte address, get bit
                                                                                     ; mask and clear/set/invert as appropriate
63315 01 | F753 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Mode 2 Point Plot subroutine
                                                                                     ; ----------------------------
                                                                                     ; 
                                                                                     ; - Screen Resolution: X=0 to 127, Y=0 TO 95.
                                                                                     ; - Requires : #5A, #5B = X coordinate
                                                                                     ; #5C, #5D = Y coordinate
                                                                                     ; #5E=0,1,2  to clear, set, or invert the point.
                                                                                     ; - Destroys A,X,Y registers.
                                                                                     ; 
63316 02 | F754 A5 5B      | LDA #5B                                                 ; If MSB X>0..
63318 02 | F756 05 5D      | ORA #5D                                                 ; ..and MSB Y>0..
63320 02 | F758 D0 E0      | BNE #F73A                                               ; ..then RTS, since out of range
63322 02 | F75A A5 5A      | LDA #5A                                                 ; Get X coordinate
63324 02 | F75C 30 DC      | BMI #F73A                                               ; If >127 then RTS, since out of range
63326 01 | F75E 4A         | LSR A                                                   ; )
63327 01 | F75F 4A         | LSR A                                                   ; )
63328 01 | F760 4A         | LSR A                                                   ; ) Divide by 8 to get X
;;ERR missing data curr: 63331 should be next: 63329
63331 02 | F763 A9 5F      | LDA @#5F                                                ; Get Ymax = 95
63333 01 | F765 38         | SEC                                                     ; 
63334 02 | F766 E5 5C      | SBC #5C                                                 ; ..and subtract the Y coordinate
63336 02 | F768 C9 60      | CMP @#60                                                ; Is the Y coordinate out of range ?
63338 02 | F76A 90 19      | BCC #F785                                               ; ..no, multiply Y offset by 16 to get
                                                                                     ; bytes/row, calculate byte address, get bit
                                                                                     ; mask and clear/set/invert as appropriate
63340 01 | F76C 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Mode 3 Point Plot subroutine
                                                                                     ; ----------------------------
                                                                                     ; 
                                                                                     ; - Screen Resolution: X=0 to 127, Y=0 TO 191.
                                                                                     ; - Requires : #5A, #5B = X coordinate
                                                                                     ; #5C, #5D = Y coordinate
                                                                                     ; #5E=0,1,2  to clear, set, or invert the point.
                                                                                     ; - Destroys A,X,Y registers.
                                                                                     ; 
63341 02 | F76D A5 5B      | LDA #5B                                                 ; If MSB X>0..
63343 02 | F76F 05 5D      | ORA #5D                                                 ; ..and MSB Y>0..
63345 02 | F771 D0 C7      | BNE #F73A                                               ; ..then RTS, since out of range
63347 02 | F773 A5 5A      | LDA #5A                                                 ; Get X coordinate
63349 02 | F775 30 C3      | BMI #F73A                                               ; If >127 then RTS, since out of range
63351 01 | F777 4A         | LSR A                                                   ; )
63352 01 | F778 4A         | LSR A                                                   ; )
63353 01 | F779 4A         | LSR A                                                   ; ) Divide by 8 to get X
63354 02 | F77A 85 5F      | STA #5F                                                 ; Save the byte in the X direction
63356 02 | F77C A9 BF      | LDA @#BF                                                ; Get Ymax = 191
63358 01 | F77E 38         | SEC                                                     ; 
63359 02 | F77F E5 5C      | SBC #5C                                                 ; ..and subtract the Y coordinate
63361 02 | F781 C9 C0      | CMP @#C0                                                ; Is the Y coordinate out of range ?
63363 02 | F783 B0 B5      | BCS #F73A                                               ; ..yes, RTS
                                                                                     ; 
                                                                                     ; HERE: ACC = Y IN ROWS DOWN FROM SCREEN TOP
                                                                                     ; ?#5F = X BYTE
                                                                                     ; ?#5A = X BIT IN THE BYTE
                                                                                     ; 
                                                                                     ; MULTIPLY Y BY 16 TO GET ROW OFFSET
                                                                                     ; 
63365 02 | F785 A0 00      | LDY @#0                                                 ; 
63367 02 | F787 84 60      | STY #60                                                 ; Clear w/s
63369 01 | F789 0A         | ASL A                                                   ; ) LSB * 2
63370 02 | F78A 26 60      | ROL #60                                                 ; ) ..and MSB * 2
63372 01 | F78C 0A         | ASL A                                                   ; ) LSB * 4
63373 02 | F78D 26 60      | ROL #60                                                 ; ) ..and MSB * 4
63375 01 | F78F 0A         | ASL A                                                   ; ) LSB * 8
63376 02 | F790 26 60      | ROL #60                                                 ; ) ..and MSB * 8
63378 01 | F792 0A         | ASL A                                                   ; ) LSB * 16
63379 02 | F793 26 60      | ROL #60                                                 ; ) ..and MSB * 16
63381 02 | F795 65 5F      | ADC #5F                                                 ; Add X byte to LSB total address
63383 02 | F797 85 5F      | STA #5F                                                 ; ..and store it
63385 02 | F799 A5 60      | LDA #60                                                 ; Get MSB Y offset
63387 02 | F79B 69 80      | ADC @#80                                                ; Add MSB screen start address
63389 02 | F79D 85 60      | STA #60                                                 ; ..and store it
63391 02 | F79F A5 5A      | LDA #5A                                                 ; Get LSB X coordinate
63393 02 | F7A1 29 07      | AND @#7                                                 ; Clear all but the 3 LSBs
63395 01 | F7A3 A8         | TAY                                                     ; ..which is the index to the bit mask table
63396 03 | F7A4 B9 C9 F7   | LDA #F7C9,Y                                             ; Get the appropriate bit mask
63399 03 | F7A7 4C 20 F7   | JMP #F720                                               ; ..and clear/set/invert the bit as required
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Mode 4 Point Plot subroutine
                                                                                     ; ----------------------------
                                                                                     ; 
                                                                                     ; - Screen Resolution: X=0 to 255, Y=0 TO 191.
                                                                                     ; - Requires : #5A, #5B = X coordinate
                                                                                     ; #5C, #5D = Y coordinate
                                                                                     ; #5E=0,1,2  to clear, set, or invert the point.
                                                                                     ; - Destroys A,X,Y registers.
                                                                                     ; 
63402 02 | F7AA A5 5B      | LDA #5B                                                 ; If MSB X>0..   LSR A
63404 02 | F7AC 05 5D      | ORA #5D                                                 ; ..and MSB Y>0..
63406 02 | F7AE D0 BC      | BNE #F76C                                               ; ..then RTS, since out of range
63408 02 | F7B0 A5 5A      | LDA #5A                                                 ; Get X coordinate
63410 01 | F7B2 4A         | LSR A                                                   ; )
63411 01 | F7B3 4A         | LSR A                                                   ; )
63412 01 | F7B4 4A         | LSR A                                                   ; )
63413 02 | F7B5 85 5F      | STA #5F                                                 ; Save the byte in the X direction
63415 02 | F7B7 A9 BF      | LDA @#BF                                                ; Get Ymax = 191
63417 01 | F7B9 38         | SEC                                                     ; 
63418 02 | F7BA E5 5C      | SBC #5C                                                 ; ..and subtract the Y coordinate
63420 02 | F7BC C9 C0      | CMP @#C0                                                ; Is the Y coordinate out of range ?
63422 02 | F7BE B0 AC      | BCS #F76C                                               ; ..yes, RTS
63424 02 | F7C0 A0 00      | LDY @#0                                                 ; 
63426 02 | F7C2 84 60      | STY #60                                                 ; Clear MSB Y offset
63428 01 | F7C4 0A         | ASL A                                                   ; Multiply row LSB by 2
63429 02 | F7C5 26 60      | ROL #60                                                 ; and multiply row MSB by 2
63431 02 | F7C7 10 C0      | BPL #F789                                               ; Multiply Y offset by 16 to get 32
                                                                                     ; bytes/row, calculate byte address, get bit
                                                                                     ; mask and clear/set/invert as appropriate
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Graphics Bit Mask Table
                                                                                     ; -----------------------
                                                                                     ; 
                                                                                     ; - Used by Mode 1 to 4 point plot routines.
                                                                                     ; 
63433 04 | F7C9 80 40 20 10                                                          ; 8  4  2  1
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print ASCII String subroutine
                                                                                     ; -----------------------------
                                                                                     ; 
                                                                                     ; - Prints the string following the subroutine call up to a negative byte
                                                                                     ; at which execution is recommenced.
                                                                                     ; 
;;ERR missing data curr: 63441 should be next: 63437
63441 01 | F7D1 68         | PLA                                                     ; Get the return address LSB from stack
63442 02 | F7D2 85 E8      | STA #E8                                                 ; ..into w/s
63444 01 | F7D4 68         | PLA                                                     ; Get the return address MSB from stack
63445 02 | F7D5 85 E9      | STA #E9                                                 ; ..into w/s
63447 02 | F7D7 A0 00      | LDY @#0                                                 ; 
63449 02 | F7D9 E6 E8      | INC #E8                                                 ; Point to the next byte of embedded text
63451 02 | F7DB D0 02      | BNE #F7DF                                               ; 
63453 02 | F7DD E6 E9      | INC #E9                                                 ; Increment MSB text pointerif carried over
63455 02 | F7DF B1 E8      | LDA (#E8),Y                                             ; Get the next character of embedded text
63457 02 | F7E1 30 06      | BMI #F7E9                                               ; ..reached terminator - execute from here
63459 03 | F7E3 20 F4 FF   | JSR #FFF4                                               ; Send character to OSWRCH
63462 03 | F7E6 4C D7 F7   | JMP #F7D7                                               ; ..and go for the next character
                                                                                     ; 
63465 03 | F7E9 6C E8 00   | JMP (#E8)                                               ; Continue execution from the negative byte
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print the (#D4) Word in Hexadecimal Followed by a space subroutine
                                                                                     ; -------------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Prints ?#D5, ?#D4 in hex, then a space, ?#D7, ?#D6 in hex, then another
                                                                                     ; space.
                                                                                     ; - Returns with X=#D8, Y register preserved.
                                                                                     ; 
63468 02 | F7EC A2 D4      | LDX @#D4                                                ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print a 4 Byte Word in Hexadecimal followed by a Space subroutine
                                                                                     ; -----------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Prints a word in hex in the order X+1, X, space, X+3, X+2, space.
                                                                                     ; - Preserves the Y resister and increments the X register 4 times.
                                                                                     ; 
63470 03 | F7EE 20 F1 F7   | JSR #F7F1                                               ; print 1st vector in hex
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print a 2 Byte Vector in Hexadecimal followed by a Space subroutine
                                                                                     ; -------------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Prints in hex a vector in the order X+1, X and then a space.
                                                                                     ; - Preserves the Y resister and increments the X register twice.
                                                                                     ; 
63473 02 | F7F1 B5 01      | LDA #1,X                                                ; Get MSB of vector
63475 03 | F7F3 20 02 F8   | JSR #F802                                               ; Print in hex followed by a space
63478 01 | F7F6 E8         | INX                                                     ; 
63479 01 | F7F7 E8         | INX                                                     ; 
63480 02 | F7F8 B5 FE      | LDA #FE,X                                               ; Get LSB of vector
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print a Byte in Hexadecimal followed by a Space subroutine
                                                                                     ; ----------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Prints the contents of the accumulator in hex followed by a space.
                                                                                     ; - X and Y registers preserved.
                                                                                     ; 
63482 03 | F7FA 20 02 F8   | JSR #F802                                               ; Print character in acc in hex via OSWRCH
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print a Space subroutine
                                                                                     ; ------------------------
                                                                                     ; 
63485 02 | F7FD A9 20      | LDA @#20                                                ; Get <SPC>
63487 03 | F7FF 4C F4 FF   | JMP #FFF4                                               ; Print via OSWRCH
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print a Byte in Hexadecimal subroutine
                                                                                     ; --------------------------------------
                                                                                     ; 
                                                                                     ; - Prints the contents of the accumulator in hex
                                                                                     ; - X and Y registers preserved.
                                                                                     ; 
63490 01 | F802 48         | PHA                                                     ; Save number
63491 01 | F803 4A         | LSR A                                                   ; (
63492 01 | F804 4A         | LSR A                                                   ; (
63493 01 | F805 4A         | LSR A                                                   ; ( Shift the upper nibble down to the
63494 01 | F806 4A         | LSR A                                                   ; ( lower
63495 03 | F807 20 0B F8   | JSR #F80B                                               ; Print nibble in hex via OSWRCH
63498 01 | F80A 68         | PLA                                                     ; Restore number
63499 02 | F80B 29 0F      | AND @#F                                                 ; Clear upper nibble
63501 02 | F80D C9 0A      | CMP @#A                                                 ; Is it a letter ?
63503 02 | F80F 90 02      | BCC #F813                                               ; ..yes
63505 02 | F811 69 06      | ADC @#6                                                 ; ..no, it's a numeric digit
63507 02 | F813 69 30      | ADC @#30                                                ; Convert to ASCII
63509 03 | F815 4C F4 FF   | JMP #FFF4                                               ; ..and print via OSWRCH
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Copy String from #100 Buffer to #140 Buffer subroutine
                                                                                     ; ------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Copies a quoted string from the Direct Mode buffer at #100 to the String
                                                                                     ; Buffer at #140, terminating the string with #D.
                                                                                     ; - If <"> is not the first non-space character found, returns with
                                                                                     ; a null string at #140.
                                                                                     ; - Sets up the pointer (#C9) to point to the start of the string at #140.
                                                                                     ; - Enter with Y register pointing to (spaces leading to) the quotes at the
                                                                                     ; start of the string.
                                                                                     ; - Returns with Y pointing to the string termination quotes.
                                                                                     ; - Returns with Acc=1, X=#C9.
                                                                                     ; 
63512 03 | F818 30 76 F8   | JSR #F876                                               ; Get to the first non-space character
63515 02 | F81B A2 00      | LDX @#0                                                 ; Clear pointer to #140 buffer
63517 02 | F81D C9 22      | CMP @#22                                                ; Is the 1st non-space character '"' ?
63519 02 | F81F F0 06      | BEQ #F827                                               ; ..yes, found start of string
63521 01 | F821 E8         | INX                                                     ; ..no, point to #140
63522 02 | F822 D0 1B      | BNE #F83F                                               ; ..and terminate the string there with #D
63524 03 | F824 4C 7D FA   | JMP #FA7D                                               ; ..unless ran out of buffer - 'SYN?' & BRK
                                                                                     ; 
                                                                                     ; COPY STRING FROM #100 TO #140
                                                                                     ; 
63527 01 | F827 C8         | INY                                                     ; Point to next character in #100 buffer
63528 03 | F828 B9 00 01   | LDA #100,Y                                              ; ..and get it
63531 02 | F82B C9 0D      | CMP @#D                                                 ; Is it <CR> ?
63533 02 | F82D F0 F5      | BEQ #F824                                               ; ..yes, run out of buffer - 'SYN?' & BRK
63535 03 | F82F 9D 40 01   | STA #140,X                                              ; Copy to #140 buffer
63538 01 | F832 E8         | INX                                                     ; Point to next position in #140 buffer
63539 02 | F833 C9 22      | CMP @#22                                                ; Was this the '"' string terminator ?
63541 02 | F835 D0 F0      | BNE #F827                                               ; ..no, keep copying until it's reached
63543 01 | F837 C8         | INY                                                     ; Point past the '"' in the #100 buffer
63544 03 | F838 B9 00 01   | LDA #100,Y                                              ; ..and get this character
63547 02 | F83B C9 22      | CMP @#22                                                ; Is this '"' as well ?
63549 02 | F83D F0 E8      | BEQ #F827                                               ; ..yes, double quotes mean use single
                                                                                     ; quotes in string - NOT the end of string
                                                                                     ; so keep searching
                                                                                     ; 
                                                                                     ; TERMINATE #140 STRING AND RETURN
                                                                                     ; 
63551 02 | F83F A9 0D      | LDA @#D                                                 ; Get <CR>
63553 03 | F841 9D 3F 01   | STA #13F,X                                              ; ..and terminate the #140 string
63556 02 | F844 A9 40      | LDA @#40                                                ; )
63558 02 | F846 85 C9      | STA #C9                                                 ; )
63560 02 | F848 A9 01      | LDA @#1                                                 ; ) Set (#CA) to point to start of #140
63562 02 | F84A 85 CA      | STA #CA                                                 ; ) string
63564 02 | F84C A2 C9      | LDX @#C9                                                ; 
63566 01 | F84E 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Transfer Tape File Control Block and Test Name subroutine
                                                                                     ; ---------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Transfers the 10 bytes in zero page starting at X to workspace starting
                                                                                     ; at #C9.
                                                                                     ; - Checks that the filename at (#C9) is less than 14 bytes long - if it
                                                                                     ; exceeds this length, the message 'NAME' is printed, and BRK executed.
                                                                                     ; - Returns with zero flag set if the string length is zero.
                                                                                     ; 
63567 02 | F84F A0 00      | LDY @#0                                                 ; 
63569 02 | F851 B5 00      | LDA #0,X                                                ; Get byte from here..
63571 03 | F853 99 C9 00   | STA #C9,Y                                               ; ..into there
63574 01 | F856 E8         | INX                                                     ; 
63575 01 | F857 C8         | INY                                                     ; 
63576 02 | F858 C0 0A      | CPY @#A                                                 ; Done all 10 bytes ?
63578 02 | F85A 90 F5      | BCC #F851                                               ; ..no, keep copying
63580 02 | F85C A0 FF      | LDY @#FF                                                ; Initialise string pointer
63582 02 | F85E A9 0D      | LDA @#D                                                 ; Get <CR> string terminator
63584 01 | F860 C8         | INY                                                     ; Point to next character in filename
63585 02 | F861 C0 0E      | CPY @#E                                                 ; Exceeded allowing string length ?
63587 02 | F863 B0 07      | BCS #F86C                                               ; ..yes, print 'NAME' and execute BRK
63589 02 | F865 D1 C9      | CMP (#C9),Y                                             ; ..no, but is this char the terminator ?
63591 02 | F867 D0 F7      | BNE #F860                                               ; ..no, keep checking
63593 02 | F869 C0 00      | CPY @#0                                                 ; Set zero flag if string length is zero
63595 01 | F86B 60         | RTS                                                     ; 
                                                                                     ; 
63596 03 | F86C 20 D1 F7   | JSR #F7D1                                               ; Print the following text string
                                                                                     ; 
63599 04 | F86F 4E 41 4D 45                                                          ; NAME
                                                                                     ; 
;;ERR missing data curr: 63602 should be next: 63603
63602 01 | F872 EA         | NOP                                                     ; String terminator
;;ERR missing data curr: 63604 should be next: 63603
63604 01 | F874 00         | BRK                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Get Next Non-Space Character from #100 Buffer subroutine
                                                                                     ; --------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Increments Y to return pointing to the first non-space character in the
                                                                                     ; Direct Mode Buffer at #100.
                                                                                     ; - Enter at #F876.
                                                                                     ; 
63605 01 | F875 C8         | INY                                                     ; Point to next character
63606 03 | F876 B9 00 01   | LDA #100,Y                                              ; Get character from Direct Mode Buffer
63609 02 | F879 C9 20      | CMP @#20                                                ; Is it <SPC> ?
63611 02 | F87B F0 F8      | BEQ #F875                                               ; ..no, try the next character
63613 01 | F87D 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Convert ASCII Hexadecimal Digit to Binary subroutine
                                                                                     ; ----------------------------------------------------
                                                                                     ; 
                                                                                     ; - Converts an ASCII Hexadecimal character in the accumulator to its binary
                                                                                     ; value.
                                                                                     ; - If valid hex, returns with binary value in accumulator and Carry clear.
                                                                                     ; - X and Y registers preserved.
                                                                                     ; 
63614 02 | F87E C9 30      | CMP @#30                                                ; Is it > '0' ?
63616 02 | F880 90 0F      | BCC #F891                                               ; ..no, invalid hex character - return
63618 02 | F882 C9 3A      | CMP @#3A                                                ; Is it < '9' ?
63620 02 | F884 90 08      | BCC #F88E                                               ; ..yes, valid hex character
63622 02 | F886 E9 07      | SBC @#7                                                 ; Convert so 'A'=#3A to 'F'=#3F
63624 02 | F888 90 07      | BCC #F891                                               ; Invalid if it was < 'A' but not a number
63626 02 | F88A C9 40      | CMP @#40                                                ; Is it a letter higher than 'F' ?
63628 02 | F88C B0 02      | BCS #F890                                               ; ..yes, invalid hex character - return
63630 02 | F88E 29 0F      | AND @#F                                                 ; Mask off top nibble
63632 01 | F890 60         | RTS                                                     ; Return with carry clear
                                                                                     ; 
63633 01 | F891 38         | SEC                                                     ; 
63634 01 | F892 60         | RTS                                                     ; Return with carry set
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Read 4 Hexadecimal Characters from #100 buffer subroutine
                                                                                     ; ---------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Reads a hex number as an ASCII string in the Direct Mode buffer pointed
                                                                                     ; to by #100,Y and stores the 2 byte result in the zero page vector
                                                                                     ; X (LSB) to X+1 (MSB).
                                                                                     ; - Interpretation stops at the first invalid hex digit, and returns with
                                                                                     ; the Y register pointing to this character.
                                                                                     ; - The zero page byte X+2 is used for workspace.
                                                                                     ; - Sets Zero flag if the first character is invalid.
                                                                                     ; 
63635 02 | F893 A9 00      | LDA @#0                                                 ; 
63637 02 | F895 95 00      | STA #0,X                                                ; Clear LSB vector
63639 02 | F897 95 01      | STA #1,X                                                ; Clear MSB vector
63641 02 | F899 95 02      | STA #2,X                                                ; Clear w/s
63643 03 | F89B 20 76 F8   | JSR #F876                                               ; Get to next non-space char in #100 buffer
63646 03 | F89E B9 00 01   | LDA #100,Y                                              ; Get character from buffer
63649 03 | F8A1 20 7E F8   | JSR #F87E                                               ; Convert ASCII hex digit to binary nibble
63652 02 | F8A4 B0 15      | BCS #F8BB                                               ; ..invalid hex, quit
63654 01 | F8A6 0A         | ASL A                                                   ; )
63655 01 | F8A7 0A         | ASL A                                                   ; )
63656 01 | F8A8 0A         | ASL A                                                   ; )
63657 01 | F8A9 0A         | ASL A                                                   ; ) Transfer lower nibble to upper nibble
63658 02 | F8AA 94 02      | STY #2,X                                                ; Save current state of buffer pointer
                                                                                     ; 
                                                                                     ; SHIFT NEW NIBBLE INTO THE VECTOR
                                                                                     ; 
63660 02 | F8AC A0 04      | LDY @#4                                                 ; 4 bits to a nibble
63662 01 | F8AE 0A         | ASL A                                                   ; Shift into carry..
63663 02 | F8AF 36 00      | ROL #0,X                                                ; ..into LSB vector..
63665 02 | F8B1 36 01      | ROL #1,X                                                ; ..and into MSB vector
63667 01 | F8B3 88         | DEY                                                     ; 
63668 02 | F8B4 D0 F8      | BNE #F8AE                                               ; ..do all 4 bits
                                                                                     ; 
63670 02 | F8B6 B4 02      | LDY #2,X                                                ; Restore buffer pointer
63672 01 | F8B8 C8         | INY                                                     ; Point to next character
63673 02 | F8B9 D0 E3      | BNE #F89E                                               ; ..and try to decode that too
                                                                                     ; 
63675 02 | F8BB B5 02      | LDA #2,X                                                ; This will be zero if failed to decode
                                                                                     ; the first hex digit successfully
63677 01 | F8BD 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; COS Interpreter Command Table
                                                                                     ; -----------------------------
                                                                                     ; 
63678 03 | F8BE 43 41                CA                                              ; 
;;ERR missing data curr: 63680 should be next: 63681
63680 16 | F8C0 54 FA 2A 4C 4F 41 44 F9 58 53 41 56 45 FA BB 52                      ; T..LOAD..SAVE..R
63696 16 | F8D0 55 4E FA 20 4D 4F 4E FA 1A 4E 4F 4D 4F 4E FA 19                      ; UN..MON..NOMON..
63712 15 | F8E0 46 4C 4F 41 44 F9 55 44 4F 53 0D E0 00 F9 26                         ; FLOAD..DOS.....
                                                                                     ; 
                                                                                     ; 
                                                                                     ; COS Interpreter subroutine
                                                                                     ; --------------------------
                                                                                     ; 
                                                                                     ; - All '*' prefixed commands are interpreted here.
                                                                                     ; - Exits to all COS routines with carry clear, decimal mode flag cleared
                                                                                     ; and X register = 0
                                                                                     ; - Jumps to default COS error handler at #F926 if cannot match command.
                                                                                     ; - Clears the FLOAD flag #DD to zero.
                                                                                     ; 
63727 02 | F8EF A2 FF      | LDX @#FF                                                ; Initialise the command table pointer
63729 01 | F8F1 D8         | CLD                                                     ; 
63730 02 | F8F2 A0 00      | LDY @#0                                                 ; 
63732 02 | F8F4 84 DD      | STY #DD                                                 ; Clear FLOAD flag (to not FLOAD mode)
63734 03 | F8F6 20 76 F8   | JSR #F876                                               ; Get next non-space char from #100 buffer
63737 01 | F8F9 88         | DEY                                                     ; 
63738 01 | F8FA C8         | INY                                                     ; Point to next character in #100 buffer
63739 01 | F8FB E8         | INX                                                     ; 
63740 03 | F8FC BD BE F8   | LDA #F8BE,X                                             ; Get next character of the command word
                                                                                     ; under comparison from the command table
63743 02 | F8FF 30 18      | BMI #F919                                               ; ..reached MSB command address - success !
63745 03 | F901 D9 00 01   | CMP #100,Y                                              ; Same as character under interpretation ?
63748 02 | F904 F0 F4      | BEQ #F8FA                                               ; ..yes, now try to match the next character
                                                                                     ; 
                                                                                     ; COMMAND WORD MATCH FAILED - SKIP TO
                                                                                     ; THE END OF THE WORD IN THE TABLE
                                                                                     ; 
63750 01 | F906 CA         | DEX                                                     ; 
63751 01 | F907 E8         | INX                                                     ; Point to next character of failed word
63752 03 | F908 BD BE F8   | LDA #F8BE,X                                             ; ..and get it
63755 02 | F90B 10 FA      | BPL #F907                                               ; ..not reached MSB address - keep searching
63757 01 | F90D E8         | INX                                                     ; Point to LSB address in command table
63758 03 | F90E B9 00 01   | LDA #100,Y                                              ; Get the failed character from the buffer
63761 02 | F911 C9 2E      | CMP @#2E                                                ; Is it the command abbreviator '.' ?
63763 02 | F913 D0 DD      | BNE #F8F2                                               ; ..no, so try to match the next command
                                                                                     ; 
                                                                                     ; SUCCESSFUL MATCH OF ABBREVIATED COMMAND
                                                                                     ; 
63765 01 | F915 C8         | INY                                                     ; Skip past the '.' abbreviator
63766 01 | F916 CA         | DEX                                                     ; Point to the MSB address in command table
63767 02 | F917 B0 E3      | BCS #F8FC                                               ; ..and fetch it
                                                                                     ; 
                                                                                     ; COMMAND WORD MATCH ( OR OUT OF TABLE )
                                                                                     ; 
63769 02 | F919 85 CA      | STA #CA                                                 ; Store MSB address in w/s
63771 03 | F91B BD BF F8   | LDA #F8BF,X                                             ; Get LSB address from command table
63774 02 | F91E 85 C9      | STA #C9                                                 ; Store LSB address in w/s
63776 01 | F920 18         | CLC                                                     ; 
63777 02 | F921 A2 00      | LDX @#0                                                 ; Clear X register before exit
63779 03 | F923 6C C9 00   | JMP (#C9)                                               ; Jump to execute the COS command
                                                                                     ; 
                                                                                     ; 
;;ERR missing data curr: 57082 should be next: 63782
57082 00 | Defa                                                                      ; ult COS Error Handler
                                                                                     ; -------------------------
                                                                                     ; 
                                                                                     ; - Sends the string 'COM?' to OSWRCH and then executes BRK.
                                                                                     ; 
;;ERR missing data curr: 63782 should be next: 57082
63782 03 | F926 20 D1 F7   | JSR #F7D1                                               ; Send the following string to WRCHAR
                                                                                     ; 
63785 04 | F929 43 4F 4D 3F                                                          ; COM?
                                                                                     ; 
63789 01 | F92D EA         | NOP                                                     ; Negative string termination byte
63790 01 | F92E 00         | BRK                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Load an Un-Named File subroutine
                                                                                     ; --------------------------------
                                                                                     ; File format : <MSB file  end  address>
                                                                                     ; <LSB file  end  address>
                                                                                     ; <MSB file start address>
                                                                                     ; <LSB file start address>
                                                                                     ; <.........data.........>
                                                                                     ; 
                                                                                     ; - Used by OSLOAD.
                                                                                     ; - Entry: #CB = LSB User specified load address
                                                                                     ; #CC = MSB User specified load address
                                                                                     ; #CD = *LOAD flag - if bit 7 is set then the load address at
                                                                                     ; (#CB) is to be used instead of the file's load address
                                                                                     ; - Uses:  #D4 = LSB Data start address from header
                                                                                     ; #D5 = MSB Data start address from header
                                                                                     ; #D6 = LSB Data  end  address from header
                                                                                     ; #D7 = MSB Data  end  address from header
                                                                                     ; 
63791 03 | F92F 20 8E FB   | JSR #FB8E                                               ; Wait for high tone leader, read the 4 byte
                                                                                     ; header preamble, and test it for '****'
63794 02 | F932 50 FA      | BVC #F92E                                               ; ..<CTRL> key was pressed - execute BRK
63796 02 | F934 F0 F9      | BEQ #F92F                                               ; ..found '****' - skip this named file
                                                                                     ; 
                                                                                     ; FOUND UN-NAMED FILE
                                                                                     ; 
63798 03 | F936 20 2B FC   | JSR #FC2B                                               ; Get file start address to (#CB)
                                                                                     ; 
                                                                                     ; GET DATA FROM TAPE INTO MEMORY
                                                                                     ; 
63801 02 | F939 A0 00      | LDY @#0                                                 ; Clear memory pointer
63803 03 | F93B 20 D4 FF   | JSR #FFD4                                               ; Get byte of data from tape via OSBGET
63806 02 | F93E 91 CB      | STA (#CB),Y                                             ; ..and dump to memory
63808 02 | F940 E6 CB      | INC #CB                                                 ; Increment LSB memory pointer
63810 02 | F942 D0 02      | BNE #F946                                               ; 
63812 02 | F944 E6 CC      | INC #CC                                                 ; Increment MSB memory pointer if overflow
63814 02 | F946 A2 D4      | LDX @#D4                                                ; Point to start address
63816 03 | F948 20 08 FA   | JSR #FA08                                               ; Increment start address, test to see if
                                                                                     ; have reached the end address
63819 02 | F94B D0 EE      | BNE #F93B                                               ; ..not loaded all the file, get next byte
                                                                                     ; 
                                                                                     ; FILE LOADED - RETURN
                                                                                     ; 
63821 01 | F94D 38         | SEC                                                     ; )
63822 02 | F94E 66 DD      | ROR #DD                                                 ; )
63824 01 | F950 18         | CLC                                                     ; )
63825 02 | F951 66 DD      | ROR #DD                                                 ; ) Set bit 6 and clear bit 7 of FLOAD flag
63827 01 | F953 28         | PLP                                                     ; Restore interrupt status, pushed by OSLOAD
63828 01 | F954 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command '*FLOAD' subroutine
                                                                                     ; ---------------------------------------
                                                                                     ; 
63829 01 | F955 38         | SEC                                                     ; 
63830 02 | F956 66 DD      | ROR #DD                                                 ; Set bit 7 of FLOAD flag, indicating FLOAD
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command '*LOAD' subroutine
                                                                                     ; --------------------------------------
                                                                                     ; 
                                                                                     ; - Exits via the LODVEC (#20C)
                                                                                     ; 
63832 03 | F958 20 18 F8   | JSR #F818                                               ; Copy quoted filename from #100 buffer to
                                                                                     ; the #140 buffer
63835 02 | F95B A2 CB      | LDX @#CB                                                ; Point to the vector at #CB, #CC
63837 03 | F95D 20 93 F8   | JSR #F893                                               ; ..and interpret the load address to store
                                                                                     ; it here
63840 02 | F960 F0 04      | BEQ #F966                                               ; ..can't interpret load address - so the
                                                                                     ; file's own load address is to be used
63842 02 | F962 A9 FF      | LDA @#FF                                                ; 
63844 02 | F964 85 CD      | STA #CD                                                 ; Set the load flag, so that the interpreted
                                                                                     ; start address is used, not the file's one
63846 03 | F966 20 76 FA   | JSR #FA76                                               ; Do COS interpreter post test
63849 02 | F969 A2 C9      | LDX @#C9                                                ; File data starts at #C9
63851 03 | F96B 6C 0C 02   | JMP (#20C)                                              ; Jump to OSLOAD
                                                                                     ; 
                                                                                     ; 
                                                                                     ; OSLOAD Load File subroutine
                                                                                     ; ---------------------------
                                                                                     ; 
                                                                                     ; - Entry: 0,X = LSB File name string address
                                                                                     ; 1,X = MSB File name string address
                                                                                     ; 2,X = LSB Data dump start address
                                                                                     ; 3,X = MSB Data dump start address
                                                                                     ; 4,X : If bit 7 is clear, then the file's own start address is
                                                                                     ; to be used
                                                                                     ; #DD = FLOAD flag - bit 7 is set if in FLOAD mode
                                                                                     ; 
                                                                                     ; - Uses:  #C9 = LSB File name string address
                                                                                     ; #CA = MSB File name string address
                                                                                     ; #CB = LSB Data dump start address
                                                                                     ; #CC = MSB Data dump start address
                                                                                     ; #CD = load flag - if bit 7 is set, then the load address at
                                                                                     ; (#CB) is to be used instead of the file's load address
                                                                                     ; #D0 = MSB Current block number
                                                                                     ; #D1 = LSB Current block number
                                                                                     ; 
                                                                                     ; - Header format: <*>                      )
                                                                                     ; <*>                      )
                                                                                     ; <*>                      )
                                                                                     ; <*>                      ) Header preamble
                                                                                     ; <Filename>               ) Name is 1 to 13 bytes long
                                                                                     ; <Status Flag>            ) Bit 7 clear if last block
                                                                                     ; ) Bit 6 clear to skip block
                                                                                     ; ) Bit 5 clear if first block
                                                                                     ; <LSB block number>
                                                                                     ; <MSB block number>       ) Always zero
                                                                                     ; <Bytes in block>
                                                                                     ; <MSB run address>
                                                                                     ; <LSB run address>
                                                                                     ; <MSB block load address>
                                                                                     ; <LSB block load address>
                                                                                     ; 
                                                                                     ; - Data format:   <....data....>           ) 1 to #FF bytes
                                                                                     ; <Checksum>               ) LSB sum of all data bytes
                                                                                     ; 
63854 01 | F96E 08         | PHP                                                     ; Save interrupt status
63855 01 | F96F 78         | SEI                                                     ; No interrupts !
63856 03 | F970 20 4F F8   | JSR #F84F                                               ; Transfer file data to w/s starting at #C9
                                                                                     ; and test length of filename
63859 01 | F973 08         | PHP                                                     ; Save result of filename test
63860 03 | F974 20 3E FC   | JSR #FC3E                                               ; Send message 'PLAY TAPE' to WRCHAR & wait
                                                                                     ; for keypress
63863 01 | F977 28         | PLP                                                     ; Restore result of filename test
63864 02 | F978 F0 B5      | BEQ #F92F                                               ; ..it's zero - load un-named file
63866 02 | F97A A9 00      | LDA @#0                                                 ; 
63868 02 | F97C 85 D0      | STA #D0                                                 ; Clear LSB current block number
63870 02 | F97E 85 D1      | STA #D1                                                 ; Clear MSB current block number
63872 03 | F980 20 A2 F9   | JSR #F9A2                                               ; Load the block into memory
63875 02 | F983 90 C9      | BCC #F94E                                               ; ..done last block - exit
63877 02 | F985 E6 D0      | INC #D0                                                 ; Increment LSB current block number
63879 02 | F987 E6 CC      | INC #CC                                                 ; Increment MSB data dump address
63881 02 | F989 D0 F5      | BNE #F980                                               ; ..and load the next block
63883 01 | F98B 18         | CLC                                                     ; ..unless overflowed address range
63884 02 | F98C 90 C0      | BCC #F94E                                               ; Exit to clear bit 6 of FLOAD flag to
                                                                                     ; indicate failure
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print Filename subroutine
                                                                                     ; -------------------------
                                                                                     ; 
                                                                                     ; - Enter at #F992 with Y=0.
                                                                                     ; - Prints the filename starting at #ED and terminated with <CR>.
                                                                                     ; - Pads out the filename with spaces to a length of 15 characters.
                                                                                     ; - Returns with carry set.
                                                                                     ; 
63886 03 | F98E 20 F4 FF   | JSR #FFF4                                               ; Send character to WRCHAR
63889 01 | F991 C8         | INY                                                     ; Point to next character of filename
                                                                                     ; 
                                                                                     ; ENTER HERE
                                                                                     ; 
63890 03 | F992 B9 ED 00   | LDA #ED,Y                                               ; Get character of filename
63893 02 | F995 C9 0D      | CMP @#D                                                 ; Is it the filename terminator, <CR> ?
63895 02 | F997 D0 F5      | BNE #F98E                                               ; ..no, print it & fetch the next character
                                                                                     ; 
                                                                                     ; PAD OUT PRINT LINE TO 15 CHARACTERS
                                                                                     ; 
63897 01 | F999 C8         | INY                                                     ; Increment character counter
63898 03 | F99A 20 FD F7   | JSR #F7FD                                               ; Send a space to WRCHAR
63901 02 | F99D C0 0E      | CPY @#E                                                 ; Reached a count of 14 ?
63903 02 | F99F 90 F8      | BCC #F999                                               ; ..no, send another space to WRCHAR
63905 01 | F9A1 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Load Current Block subroutine
                                                                                     ; -----------------------------
                                                                                     ; 
                                                                                     ; - Entry: #C9 = LSB File name string address
                                                                                     ; #CA = MSB File name string address
                                                                                     ; #CB = LSB Data dump start  address
                                                                                     ; #CC = MSB Data dump start  address
                                                                                     ; #CD = load flag - if bit 7 is set, then the load address at
                                                                                     ; (#CB) is to be used instead of the file's load address
                                                                                     ; #D0 = MSB Current block number
                                                                                     ; #D1 = LSB Current block number
                                                                                     ; #DD = FLOAD flag - bit 7 is set if in FLOAD mode
                                                                                     ; 
                                                                                     ; Uses:    #D4 = MSB block address of block under examination
                                                                                     ; #D5 = MSB block address of block under examination
                                                                                     ; #D6 = LSB  run  address of block under examination
                                                                                     ; #D7 = MSB  run  address of block under examination
                                                                                     ; #D8 = Number of  bytes  in block under examination
                                                                                     ; #D9 = LSB block  number of block under examination
                                                                                     ; #DA = MSB block  number of block under examination
                                                                                     ; #DB = Status flag of block under examination
                                                                                     ; #DC = Computed checksum of block loaded into memory
                                                                                     ; #ED = Start of filename of block under examination
                                                                                     ; 
63906 02 | F9A2 A9 00      | LDA @#0                                                 ; 
63908 02 | F9A4 85 DC      | STA #DC                                                 ; Clear checksum
                                                                                     ; 
                                                                                     ; GET HEADER PREAMBLE OF 4 ASTERISKS
                                                                                     ; 
63910 03 | F9A6 20 8E FB   | JSR #FB8E                                               ; Wait for high tone leader, read the 4 byte
                                                                                     ; header preamble, and test it for '****'
63913 02 | F9A9 50 F8      | BVC #F9A3                                               ; ..<CTRL> key was pressed - execute BRK
63915 02 | F9AB D0 F5      | BNE #F9A2                                               ; Preamble not correct - try again
                                                                                     ; 
                                                                                     ; GET FILENAME AND TEST IT'S THE RIGHT ONE
                                                                                     ; 
63917 03 | F9AD 20 C9 FB   | JSR #FBC9                                               ; Get filename from tape, and check it
                                                                                     ; against the reference at (#C9)
63920 01 | F9B0 08         | PHP                                                     ; Save the result of the filename test
63921 03 | F9B1 20 E2 FB   | JSR #FBE2                                               ; Get the remaining 8 bytes of the header
63924 01 | F9B4 28         | PLP                                                     ; Restore the result of the filename test
63925 02 | F9B5 F0 10      | BEQ #F9C7                                               ; ..it's correct
                                                                                     ; 
                                                                                     ; DEAL WITH INCORRECT FILENAME ENCOUNTERED
                                                                                     ; 
63927 02 | F9B7 A5 DB      | LDA #DB                                                 ; Get the header status flag
63929 02 | F9B9 29 20      | AND @#20                                                ; Is bit 5 Clear, indicating 1st block ?
63931 02 | F9BB 05 EA      | ORA #EA                                                 ; 
                                                                                     ; ENTER HERE
                                                                                     ; 
;;ERR missing data curr: 63890 should be next: 63933
63890 03 | F992 B9 ED 00   | LDA #ED,Y                                               ; Get character of filename
63893 02 | F995 C9 0D      | CMP @#D                                                 ; Is it the filename terminator, <CR> ?
63895 02 | F997 D0 F5      | BNE #F98E                                               ; ..no, print it & fetch the next character
                                                                                     ; 
                                                                                     ; PAD OUT PRINT LINE TO 15 CHARACTERS
                                                                                     ; 
63897 01 | F999 C8         | INY                                                     ; Increment character counter
63898 03 | F99A 20 FD F7   | JSR #F7FD                                               ; Send a space to WRCHAR
63901 02 | F99D C0 0E      | CPY @#E                                                 ; Reached a count of 14 ?
63903 02 | F99F 90 F8      | BCC #F999                                               ; ..no, send another space to WRCHAR
63905 01 | F9A1 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Load Current Block subroutine
                                                                                     ; -----------------------------
                                                                                     ; 
                                                                                     ; - Entry: #C9 = LSB File name string address
                                                                                     ; #CA = MSB File name string address
                                                                                     ; #CB = LSB Data dump start  address
                                                                                     ; #CC = MSB Data dump start  address
                                                                                     ; #CD = load flag - if bit 7 is set, then the load address at
                                                                                     ; (#CB) is to be used instead of the file's load address
                                                                                     ; #D0 = MSB Current block number
                                                                                     ; #D1 = LSB Current block number
                                                                                     ; #DD = FLOAD flag - bit 7 is set if in FLOAD mode
                                                                                     ; 
                                                                                     ; Uses:    #D4 = MSB block address of block under examination
                                                                                     ; #D5 = MSB block address of block under examination
                                                                                     ; #D6 = LSB  run  address of block under examination
                                                                                     ; #D7 = MSB  run  address of block under examination
                                                                                     ; #D8 = Number of  bytes  in block under examination
                                                                                     ; #D9 = LSB block  number of block under examination
                                                                                     ; #DA = MSB block  number of block under examination
                                                                                     ; #DB = Status flag of block under examination
                                                                                     ; #DC = Computed checksum of block loaded into memory
                                                                                     ; #ED = Start of filename of block under examination
                                                                                     ; 
63906 02 | F9A2 A9 00      | LDA @#0                                                 ; 
63908 02 | F9A4 85 DC      | STA #DC                                                 ; Clear checksum
                                                                                     ; 
                                                                                     ; GET HEADER PREAMBLE OF 4 ASTERISKS
                                                                                     ; 
63910 03 | F9A6 20 8E FB   | JSR #FB8E                                               ; Wait for high tone leader, read the 4 byte
                                                                                     ; header preamble, and test it for '****'
63913 02 | F9A9 50 F8      | BVC #F9A3                                               ; ..<CTRL> key was pressed - execute BRK
63915 02 | F9AB D0 F5      | BNE #F9A2                                               ; Preamble not correct - try again
                                                                                     ; 
                                                                                     ; GET FILENAME AND TEST IT'S THE RIGHT ONE
                                                                                     ; 
63917 03 | F9AD 20 C9 FB   | JSR #FBC9                                               ; Get filename from tape, and check it
                                                                                     ; against the reference at (#C9)
63920 01 | F9B0 08         | PHP                                                     ; Save the result of the filename test
63921 03 | F9B1 20 E2 FB   | JSR #FBE2                                               ; Get the remaining 8 bytes of the header
63924 01 | F9B4 28         | PLP                                                     ; Restore the result of the filename test
63925 02 | F9B5 F0 10      | BEQ #F9C7                                               ; ..it's correct
                                                                                     ; 
                                                                                     ; DEAL WITH INCORRECT FILENAME ENCOUNTERED
                                                                                     ; 
63927 02 | F9B7 A5 DB      | LDA #DB                                                 ; Get the header status flag
63929 02 | F9B9 29 20      | AND @#20                                                ; Is bit 5 Clear, indicating 1st block ?
63931 02 | F9BB 05 EA      | ORA #EA                                                 ; ..and is the NOMON flag clear ?
63933 02 | F9BD D0 E3      | BNE #F9A2                                               ; ..no, go on to try the next block
63935 03 | F9BF 20 92 F9   | JSR #F992                                               ; ..yes, print the erroneous filename
63938 03 | F9C2 20 ED FF   | JSR #FFED                                               ; ..followed by <CR><LF>
63941 02 | F9C5 D0 DB      | BNE #F9A2                                               ; ..and go on to try the next block
                                                                                     ; 
                                                                                     ; CHECK BLOCK NUMBER
                                                                                     ; 
63943 02 | F9C7 A2 02      | LDX @#2                                                 ; Point to LSB block number
63945 02 | F9C9 A5 DD      | LDA #DD                                                 ; In FLOAD mode ?
63947 02 | F9CB 30 13      | BMI #F9E0                                               ; ..yes, load block no matter what it is
63949 02 | F9CD B5 CF      | LDA #CF,X                                               ; Get LSB OR MSB current block number
63951 02 | F9CF D5 D8      | CMP #D8,X                                               ; Is this the block under examination ?
63953 02 | F9D1 B0 08      | BCS #F9DB                                               ; ..Perhaps, it's less than or equal to
                                                                                     ; 
                                                                                     ; BLOCK NUMBER LARGER THAN THAT REQUIRED
                                                                                     ; 
63955 02 | F9D3 A9 05      | LDA @#5                                                 ; 
63957 03 | F9D5 20 40 FC   | JSR #FC40                                               ; Print message 'REWIND TAPE'
63960 03 | F9D8 20 3E FC   | JSR #FC3E                                               ; Print message 'PLAY TAPE'
63963 02 | F9DB D0 C5      | BNE #F9A2                                               ; ..and try the next block
                                                                                     ; 
63965 01 | F9DD CA         | DEX                                                     ; 
63966 02 | F9DE D0 ED      | BNE #F9CD                                               ; ..test the MSB block number too
                                                                                     ; 
                                                                                     ; LOAD BLOCK INTO MEMORY
                                                                                     ; 
63968 03 | F9E0 20 2B FC   | JSR #FC2B                                               ; Set up file loading address
63971 02 | F9E3 24 DB      | BIT #DB                                                 ; Test status - allowed to load this block ?
63973 02 | F9E5 50 0B      | BVC #F9F2                                               ; ..no, do 'SUM' error
63975 01 | F9E7 88         | DEY                                                     ; 
63976 01 | F9E8 C8         | INY                                                     ; Point to next data memory location
63977 03 | F9E9 20 D4 FF   | JSR #FFD4                                               ; Get data byte from tape via OSBGET
63980 02 | F9EC 91 CB      | STA (#CB),Y                                             ; ..and dump to memory
63982 02 | F9EE C4 D8      | CPY #D8                                                 ; Got all the bytes in the block ?
63984 02 | F9F0 D0 F6      | BNE #F9E8                                               ; ..no, keep loading
63986 02 | F9F2 A5 DC      | LDA #DC                                                 ; Get checksum
63988 02 | F9F4 85 CE      | STA #CE                                                 ; ..into w/s
63990 03 | F9F6 20 D4 FF   | JSR #FFD4                                               ; Get checksum from tape via OSBGET
63993 02 | F9F9 C5 CE      | CMP #CE                                                 ; Same as checksum calculated during load ?
63995 02 | F9FB F0 08      | BEQ #FA05                                               ; ..yes, test for last block and return
                                                                                     ; 
                                                                                     ; DEAL WITH CHECKSUM ERROR
                                                                                     ; 
63997 03 | F9FD 20 D1 F7   | JSR #F7D1                                               ; Send the follwing string to WRCHAR
                                                                                     ; 
64000 03 | FA00 53 55 4D                                                             ; SUM
                                                                                     ; 
64003 01 | FA03 EA         | NOP                                                     ; String termination byte
64004 01 | FA04 00         | BRK                                                     ; 
                                                                                     ; 
64005 02 | FA05 26 DB      | ROL #DB                                                 ; Clear carry if last block flag clear
64007 01 | FA07 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Increment and Test Vector subroutine
                                                                                     ; ------------------------------------
                                                                                     ; 
                                                                                     ; - Increments the 2 byte vector at (0),X and compares with (2),X.
                                                                                     ; - Returns with Zero flag set if the two vectors are equal.
                                                                                     ; 
64008 02 | FA08 F6 00      | INC #0,X                                                ; Increment LSB vector 1
64010 02 | FA0A D0 02      | BNE #FA0E                                               ; 
64012 02 | FA0C F6 01      | INC #1,X                                                ; Increment MSB vector 1 if overflow
64014 02 | FA0E B5 00      | LDA #0,X                                                ; Get LSB vector 1
64016 02 | FA10 D5 02      | CMP #2,X                                                ; Same as LSB vector 2 ?
64018 02 | FA12 D0 04      | BNE #FA18                                               ; ..no, return with Z flag clear
64020 02 | FA14 B5 01      | LDA #1,X                                                ; Get MSB vector 1
64022 02 | FA16 D5 03      | CMP #3,X                                                ; Same as MSB vector 2 ?
64024 01 | FA18 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command '*NOMON' subroutine
                                                                                     ; ---------------------------------------
                                                                                     ; 
                                                                                     ; - Sets all the bits of the NOMON flag at #EA.
                                                                                     ; - Enter with X=0.
                                                                                     ; 
64025 01 | FA19 CA         | DEX                                                     ; Now X=#FF
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command '*MON' subroutine
                                                                                     ; -------------------------------------
                                                                                     ; 
                                                                                     ; - Clears all the bits of the NOMON flag at #EA.
                                                                                     ; - Enter with X=0.
                                                                                     ; 
64026 03 | FA1A 20 76 FA   | JSR #FA76                                               ; Do COS interpreter post test
64029 02 | FA1D 86 EA      | STX #EA                                                 ; Set/clear the NOMON flag as appropriate
64031 01 | FA1F 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command '*RUN'
                                                                                     ; --------------------------
                                                                                     ; 
64032 03 | FA20 20 58 F9   | JSR #F958                                               ; Execute '*LOAD'
64035 02 | FA23 24 DD      | BIT #DD                                                 ; 
64037 02 | FA25 70 4C      | BVS #FA73                                               ; If bit 6 of #DD is set then jump via (#CB)
64039 03 | FA27 6C D6 00   | JMP (#D6)                                               ; ..otherwise
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command '*CAT'
                                                                                     ; --------------------------
                                                                                     ; 
64042 01 | FA2A 08         | PHP                                                     ; Save status
64043 03 | FA2B 20 76 FA   | JSR #FA76                                               ; Do COS interpreter post test
64046 03 | FA2E 20 3E FC   | JSR #FC3E                                               ; Print message 'PLAY TAPE' & get keypress
64049 03 | FA31 20 8E FB   | JSR #FB8E                                               ; Wait for high tone leader, read the 4 byte
                                                                                     ; header preamble, and test it
64052 02 | FA34 70 02      | BVS #FA38                                               ; ..if <CTRL> not pressed, print header
64054 01 | FA36 28         | PLP                                                     ; Restore status
64055 01 | FA37 60         | RTS                                                     ; 
                                                                                     ; 
64056 02 | FA38 F0 0A      | BEQ #FA44                                               ; ..deal with named block
                                                                                     ; 
                                                                                     ; DEAL WITH UN-NAMED FILE
                                                                                     ; 
64058 02 | FA3A A0 00      | LDY @#0                                                 ; 
64060 03 | FA3C 20 99 F9   | JSR #F999                                               ; Print blank filename
64063 03 | FA3F 20 EC F7   | JSR #F7EC                                               ; Print start & last+1 address in hex
64066 02 | FA42 D0 19      | BNE #FA5D                                               ; Send <CR><LF> to WRCHAR, go for next block
                                                                                     ; 
                                                                                     ; DEAL WITH NAMED BLOCK
                                                                                     ; 
64068 03 | FA44 20 C9 FB   | JSR #FBC9                                               ; Get filename from tape via OSBGET
64071 03 | FA47 20 E2 FB   | JSR #FBE2                                               ; Get rest of header from tape via OSBGET
64074 03 | FA4A 20 92 F9   | JSR #F992                                               ; Print header, padded out to 15 characters
64077 03 | FA4D 20 EC F7   | JSR #F7EC                                               ; Print the block address at (#D4), a space,
                                                                                     ; then the run address at (#D6) in hex
64080 02 | FA50 26 DB      | ROL #DB                                                 ; If bit 6 of the block status flag is clear
64082 02 | FA52 10 09      | BPL #FA5D                                               ; ..then omit printing the block number
64084 01 | FA54 E8         | INX                                                     ; Now X=#D9
64085 03 | FA55 20 F1 F7   | JSR #F7F1                                               ; Print the block number at (#D9) in hex
64088 02 | FA58 B5 FD      | LDA #FD,X                                               ; Get the number of bytes in the block (#D8)
64090 03 | FA5A 20 02 F8   | JSR #F802                                               ; ..and print it in hex
64093 03 | FA5D 20 ED FF   | JSR #FFED                                               ; Send <CR><LF> to WRCHAR
64096 02 | FA60 D0 CF      | BNE #FA31                                               ; ..and go on to read the next header
                                                                                     ; 
                                                                                     ; 
64098 03 | FA62 4C ED FF   | JMP #FFED                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Read 4 Hex Characters from #100 buffer with Invalid Test subroutine
                                                                                     ; -------------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Reads a hex number as an ASCII string in the Direct Mode buffer pointed
                                                                                     ; to by #100,Y and stores the 2 byte result in the zero page vector
                                                                                     ; X (LSB) to X+1 (MSB).
                                                                                     ; - Interpretation stops at the first invalid hex digit, and returns with
                                                                                     ; the Y register pointing to this character.
                                                                                     ; - The zero page byte X+2 is used for workspace.
                                                                                     ; - The Zero flag is set if the first character is invalid.
                                                                                     ; - 'SYN?' is printed and BRK executed if the first character is invalid.
                                                                                     ; 
64101 03 | FA65 20 93 F8   | JSR #F893                                               ; Interpret hex number into vector X, X+1
64104 02 | FA68 F0 13      | BEQ #FA7D                                               ; ..failed - print 'SYN?' and execute BRK
64106 01 | FA6A 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Get a Hexadecimal Number and Jump There
                                                                                     ; ---------------------------------------
                                                                                     ; 
64107 02 | FA6B A2 CB      | LDX @#CB                                                ; Point to vector at #CB, #CC
64109 03 | FA6D 20 65 FA   | JSR #FA65                                               ; ..and interpret the hex number at #100,Y
64112 03 | FA70 20 76 FA   | JSR #FA76                                               ; Do the interpreter post test
64115 03 | FA73 6C CB 00   | JMP (#CB)                                               ; Jump to the address just interpreted
                                                                                     ; 
                                                                                     ; 
                                                                                     ; COS Post Test subroutine
                                                                                     ; ------------------------
                                                                                     ; 
                                                                                     ; - Checks for <CR> or spaces leading to a <CR> in the #100 buffer after the
                                                                                     ; current position pointed to by the Y register on entry.
                                                                                     ; - Prints 'SYN?' and executes BRK on failure.
                                                                                     ; 
64118 03 | FA76 20 76 F8   | JSR #F876                                               ; Get the first non-space character from the
                                                                                     ; #100,Y buffer
64121 02 | FA79 C9 0D      | CMP @#D                                                 ; Is it <CR> ?
64123 02 | FA7B F0 A2      | BEQ #FA1F                                               ; ..yes, RTS
64125 03 | FA7D 20 D1 F7   | JSR #F7D1                                               ; ..no, send the following string to WRCHAR
                                                                                     ; 
64128 04 | FA80 53 59 4E 3F                                                          ; SYN?
                                                                                     ; 
64132 01 | FA84 EA         | NOP                                                     ; String termination byte
64133 01 | FA85 00         | BRK                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Save an Un-Named File subroutine
                                                                                     ; --------------------------------
                                                                                     ; 
                                                                                     ; - File format : <MSB file  end  address>
                                                                                     ; <LSB file  end  address>
                                                                                     ; <MSB file start address>
                                                                                     ; <LSB file start address>
                                                                                     ; <.........data.........>
                                                                                     ; 
                                                                                     ; - Used by OSSAVE.
                                                                                     ; - Entry: #CB = LSB File reload start address
                                                                                     ; #CC = MSB File reload start address
                                                                                     ; #CD = LSB File reload end address+1
                                                                                     ; #CE = MSB File reload end address+1
                                                                                     ; #CF = LSB File start address
                                                                                     ; #D0 = MSB File start address
                                                                                     ; #D1 = LSB File  end  address+1
                                                                                     ; #D2 = MSB File  end  address+1
                                                                                     ; 
                                                                                     ; CALCULATE RELOAD ADDRESSES
                                                                                     ; 
64134 01 | FA86 38         | SEC                                                     ; 
64135 02 | FA87 A5 D1      | LDA #D1                                                 ; Get LSB end address+1
64137 02 | FA89 E5 CF      | SBC #CF                                                 ; Subtract LSB start address
64139 01 | FA8B 48         | PHA                                                     ; ..and save LSB file length
64140 02 | FA8C A5 D2      | LDA #D2                                                 ; Get MSB end address+1
64142 02 | FA8E E5 D0      | SBC #D0                                                 ; Subtract MSB start address
64144 01 | FA90 A8         | TAY                                                     ; ..and save MSB file length
64145 01 | FA91 68         | PLA                                                     ; Restore LSB file length
64146 01 | FA92 18         | CLC                                                     ; 
64147 02 | FA93 65 CB      | ADC #CB                                                 ; Add LSB file reload address
64149 02 | FA95 85 CD      | STA #CD                                                 ; ..and store LSB last reloaded byte+1
64151 01 | FA97 98         | TYA                                                     ; Restore MSB file length
64152 02 | FA98 65 CC      | ADC #CC                                                 ; Add MSB file reload address
64154 02 | FA9A 85 CE      | STA #CE                                                 ; ..and store MSB last reloaded byte+1
                                                                                     ; 
                                                                                     ; SEND FILE HEADER TO TAPE
                                                                                     ; 
64156 02 | FA9C A0 04      | LDY @#4                                                 ; Set up byte counter - 4 bytes in header
64158 03 | FA9E B9 CA 00   | LDA #CA,Y                                               ; Get file reload start and end addresses
64161 03 | FAA1 20 D1 FF   | JSR #FFD1                                               ; ..and send to tape via OSBPUT
64164 01 | FAA4 88         | DEY                                                     ; Point to next address byte
64165 02 | FAA5 D0 F7      | BNE #FA9E                                               ; ..and send all 4 bytes
                                                                                     ; 
                                                                                     ; SEND DATA AS ONE CONTINUOUS FILE
                                                                                     ; 
64167 02 | FAA7 B1 CF      | LDA (#CF),Y                                             ; Get data from memory
64169 03 | FAA9 20 D1 FF   | JSR #FFD1                                               ; ..and send it to tape via OSBPUT
64172 02 | FAAC E6 CF      | INC #CF                                                 ; Increment LSB memory address
64174 02 | FAAE D0 02      | BNE #FAB2                                               ; 
64176 02 | FAB0 E6 D0      | INC #D0                                                 ; Increment MSB memory address if overflow
64178 02 | FAB2 A2 CB      | LDX @#CB                                                ; Point to vectors (#CB) and (#CD)
64180 03 | FAB4 20 08 FA   | JSR #FA08                                               ; Increment (#CB) and compare with (#CD)
64183 02 | FAB7 D0 EE      | BNE #FAA7                                               ; ..not reached end of file
64185 01 | FAB9 28         | PLP                                                     ; Restore interrupt status pushed by OSSAVE
64186 01 | FABA 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Execute the Command '*SAVE'
                                                                                     ; ---------------------------
                                                                                     ; 
                                                                                     ; - Sets up the file address data from #C9 to #D1, and then calls the file
                                                                                     ; save routine indirected by SAVVEC at (#20E), which is normally #FAE5.
                                                                                     ; 
                                                                                     ; - Uses:  #C9 = LSB File name string address
                                                                                     ; #CA = MSB File name string address
                                                                                     ; #CB = LSB Data Reload address
                                                                                     ; #CC = MSB Data Reload address
                                                                                     ; #CD = LSB Data Execution address
                                                                                     ; #CE = MSB Data Execution address
                                                                                     ; #CF = LSB Data start address
                                                                                     ; #D0 = MSB Data start address
                                                                                     ; #D1 = LSB Data end address + 1
                                                                                     ; #D2 = MSB Data end address + 1
                                                                                     ; 
64187 03 | FABB 20 18 F8   | JSR #F818                                               ; Copy filename string from #100 buffer to
                                                                                     ; the #140 buffer
64190 02 | FABE A2 CB      | LDX @#CB                                                ; Point to vector at #CB, #CC
64192 03 | FAC0 20 65 FA   | JSR #FA65                                               ; ..and interpret start address to this
                                                                                     ; vector, printing 'SYN?' & BRK if fail
64195 02 | FAC3 A2 D1      | LDX @#D1                                                ; Point to vector at #D1, #D2
64197 03 | FAC5 20 65 FA   | JSR #FA65                                               ; ..and interpret end address to this
                                                                                     ; vector, printing 'SYN?' & BRK if fail
64200 02 | FAC8 A2 CD      | LDX @#CD                                                ; Point to vector at #CD, #CE
64202 03 | FACA 20 93 F8   | JSR #F893                                               ; ..and interpret run address to this
                                                                                     ; vector, if it has been specified
64205 01 | FACD 08         | PHP                                                     ; Save success/failure flag for the run
                                                                                     ; address interpretation
64206 02 | FACE A5 CB      | LDA #CB                                                 ; Get LSB start address
64208 02 | FAD0 A6 CC      | LDX #CC                                                 ; Get MSB start address
64210 01 | FAD2 28         | PLP                                                     ; Restore run address success/failure flag
64211 02 | FAD3 D0 04      | BNE #FAD9                                               ; ..run address was specified
                                                                                     ; 
                                                                                     ; FILE RUN ADDRESS NOT SPECIFIED - SET RUN
                                                                                     ; ADDRESS TO FILE START ADDRESS AS DEFAULT
                                                                                     ; 
64213 02 | FAD5 85 CD      | STA #CD                                                 ; Set LSB run address = LSB start address
64215 02 | FAD7 86 CE      | STX #CE                                                 ; Set MSB run address = MSB start address
                                                                                     ; 
                                                                                     ; SET FILE START ADDRESS = RELOAD ADDRESS
                                                                                     ; 
64217 02 | FAD9 85 CF      | STA #CF                                                 ; Set LSB start address = LSB reload address
64219 02 | FADB 86 D0      | STX #D0                                                 ; Set MSB start address = MSB reload address
64221 03 | FADD 20 76 FA   | JSR #FA76                                               ; Do COS interpreter post test
64224 02 | FAE0 A2 C9      | LDX @#C9                                                ; Point to file address data starting at #C9
64226 03 | FAE2 6C 0E 02   | JMP (#20E)                                              ; ..and jump to OSSAVE
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Save File subroutine
                                                                                     ; --------------------
                                                                                     ; 
                                                                                     ; - Enter with X pointing to the start of the file address data.
                                                                                     ; Note: X=#52 when OSSAVE is called by the SAVE routine at #CF0A.
                                                                                     ; X=#C9 when OSSAVE is called by the *SAVE routine at #FABB.
                                                                                     ; 
                                                                                     ; - Entry: 0,X = LSB File name string address
                                                                                     ; 1,X = MSB File name string address
                                                                                     ; 2,X = LSB Data Reload address
                                                                                     ; 3,X = MSB Data Reload address
                                                                                     ; 4,X = LSB Data Execution address
                                                                                     ; 5,X = MSB Data Execution address
                                                                                     ; 6,X = LSB Data start address
                                                                                     ; 7,X = MSB Data start address
                                                                                     ; 8,X = LSB Data end address + 1
                                                                                     ; 9,X = MSB Data end address + 1
                                                                                     ; 
                                                                                     ; - Uses:  #CF = Number of bytes in current block
                                                                                     ; #D0 = LSB current block number
                                                                                     ; #D1 = MSB current block number
                                                                                     ; #D2 = Block flag - Bit 7 clear if last block
                                                                                     ; Bit 6 clear if block not to be loadable
                                                                                     ; Bit 5 set if first block
                                                                                     ; #D3 = LSB current data start address
                                                                                     ; #D4 = MSB current data start address
                                                                                     ; #D5 = LSB current data  end  address
                                                                                     ; #D6 = MSB current data  end  address
                                                                                     ; #DC = LSB current data block arithmetic checksum
                                                                                     ; 
                                                                                     ; - Header format: <*>                     )
                                                                                     ; <*>                     )
                                                                                     ; <*>                     )
                                                                                     ; <*>                     ) Header preamble
                                                                                     ; <Filename>              ) Name is 1 to 13 bytes long
                                                                                     ; <Status Flag>           ) Bit 7 clear if last block
                                                                                     ; ) Bit 6 clear to skip block
                                                                                     ; ) Bit 5 clear if first block
                                                                                     ; <LSB block number>
                                                                                     ; <MSB block number>      ) Always zero
                                                                                     ; <Bytes in block>
                                                                                     ; <MSB run address>
                                                                                     ; <LSB run address>
                                                                                     ; <MSB block load address>
                                                                                     ; <LSB block load address>
                                                                                     ; 
                                                                                     ; - Data format:   <....data....>          ) 1 to #FF bytes
                                                                                     ; <Checksum>              ) LSB sum of all data bytes
                                                                                     ; 
64229 01 | FAE5 08         | PHP                                                     ; Save flags
64230 01 | FAE6 78         | SEI                                                     ; No interrupts !
64231 03 | FAE7 20 4F F8   | JSR #F84F                                               ; Transfer file data to w/s starting at #C9
                                                                                     ; Test filename - set Zero flag if length
                                                                                     ; of filename is zero
64234 01 | FAEA 08         | PHP                                                     ; Save filename test flag
64235 02 | FAEB A9 06      | LDA @#6                                                 ; Code to print 'RECORD TAPE'
64237 03 | FAED 20 40 FC   | JSR #FC40                                               ; Start high tone, print 'RECORD TAPE' and
                                                                                     ; wait for a keypress before return
                                                                                     ; 
                                                                                     ; SEND 2 SECONDS OF HIGH TONE LEADER
                                                                                     ; 
64240 02 | FAF0 A2 07      | LDX @#7                                                 ; Get code to set 3 LSB's of port B high
64242 03 | FAF2 20 7A FB   | JSR #FB7A                                               ; Wait 2 seconds with high tone enabled
64245 01 | FAF5 28         | PLP                                                     ; Restore result of filename test
64246 02 | FAF6 F0 8E      | BEQ #FA86                                               ; ..deal with un-named file
                                                                                     ; 
                                                                                     ; COPY DATA START & END ADDRESSES TO W/S
                                                                                     ; 
64248 02 | FAF8 A2 04      | LDX @#4                                                 ; 
64250 02 | FAFA B5 CE      | LDA #CE,X                                               ; Get data from here
64252 02 | FAFC 95 D2      | STA #D2,X                                               ; ..and store it there
64254 01 | FAFE CA         | DEX                                                     ; Decrement counter
64255 02 | FAFF D0 F9      | BNE #FAFA                                               ; ..copy all 4 bytes
                                                                                     ; 
                                                                                     ; CLEAR BLOCK NUMBER
                                                                                     ; 
64257 02 | FB01 86 D0      | STX #D0                                                 ; Clear LSB block number
64259 02 | FB03 86 D1      | STX #D1                                                 ; Clear MSB block number
                                                                                     ; 
                                                                                     ; DECREMENT (END ADDRESS + 1) TO GET THE
                                                                                     ; CORRECT END ADDRESS
                                                                                     ; 
64261 02 | FB05 A5 D5      | LDA #D5                                                 ; Get LSB end address + 1
64263 02 | FB07 D0 02      | BNE #FB0B                                               ; ..it's not zero
64265 02 | FB09 C6 D6      | DEC #D6                                                 ; If LSB is zero, decrement MSB too
64267 02 | FB0B C6 D5      | DEC #D5                                                 ; Decrement LSB end address + 1
                                                                                     ; 
64269 01 | FB0D 18         | CLC                                                     ; Clear block flag bit to indicate 1st block
64270 02 | FB0E 66 D2      | ROR #D2                                                 ; This gets shifted down to bit 5
                                                                                     ; 
                                                                                     ; CALCULATE BLOCK SIZE
                                                                                     ; 
64272 01 | FB10 38         | SEC                                                     ; 
64273 02 | FB11 A2 FF      | LDX @#FF                                                ; Get the default block size
64275 02 | FB13 A5 D5      | LDA #D5                                                 ; Get the LSB end address
64277 02 | FB15 E5 D3      | SBC #D3                                                 ; ..and subtract the LSB current address
64279 02 | FB17 85 CF      | STA #CF                                                 ; This is the number of bytes in the block
                                                                                     ; ONLY IF it's the last block
64281 02 | FB19 A5 D6      | LDA #D6                                                 ; Get the MSB end address
64283 02 | FB1B E5 D4      | SBC #D4                                                 ; ..and subtract the MSB current address
64285 01 | FB1D 08         | PHP                                                     ; Save Carry flag
64286 02 | FB1E 66 D2      | ROR #D2                                                 ; ..and shift into block flag, to be shifted
                                                                                     ; to bit 6 - if clear block will not load !
64288 01 | FB20 28         | PLP                                                     ; Restore Carry flag
64289 02 | FB21 90 06      | BCC #FB29                                               ; ..it's the last block, so clear bit 7 of
                                                                                     ; the block flag to indicate this
64291 01 | FB23 18         | CLC                                                     ; 
64292 02 | FB24 F0 03      | BEQ #FB29                                               ; ..it's the last block, so clear bit 7 of
                                                                                     ; the block flag to indicate this
64294 02 | FB26 86 CF      | STX #CF                                                 ; Otherwise set block length to default #FF
64296 01 | FB28 38         | SEC                                                     ; Indicate that it's NOT the last block
64297 02 | FB29 66 D2      | ROR #D2                                                 ; Set/clear last block flag - bit 7 of the
                                                                                     ; block flag - as appropriate
64299 01 | FB2B E8         | INX                                                     ; Unnecessary !!!
64300 03 | FB2C 20 3B FB   | JSR #FB3B                                               ; Send header and data block to tape
64303 02 | FB2F E6 D0      | INC #D0                                                 ; Increment LSB current block number
64305 02 | FB31 E6 D4      | INC #D4                                                 ; Increment MSB current data start address
64307 02 | FB33 E6 CC      | INC #CC                                                 ; Increment MSB current data reload address
64309 02 | FB35 26 D2      | ROL #D2                                                 ; Was the previous block the last block ?
64311 02 | FB37 B0 D5      | BCS #FB0E                                               ; ..no, go to send the next block, with
                                                                                     ; Carry set to set bit 5 of block flag
                                                                                     ; since this block will not be first block
64313 01 | FB39 28         | PLP                                                     ; ..yes, restore interrupt status
64314 01 | FB3A 60         | RTS                                                     ; ..and return
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Send Header and Data Block to Tape subroutine
                                                                                     ; ---------------------------------------------
                                                                                     ; 
64315 02 | FB3B A2 07      | LDX @#7                                                 ; Code for tone on
64317 03 | FB3D 20 7A FB   | JSR #FB7A                                               ; Wait 2 seconds with tone on
64320 02 | FB40 86 DC      | STX #DC                                                 ; Clear checksum
                                                                                     ; 
                                                                                     ; SEND HEADER PREAMBLE OF 4 ASTERISKS
                                                                                     ; 
64322 02 | FB42 A0 04      | LDY @#4                                                 ; Number of asterisks in preamble
64324 02 | FB44 A9 2A      | LDA @#2A                                                ; Get '*'
64326 03 | FB46 20 D1 FF   | JSR #FFD1                                               ; ..and send to tape via OSBPUT
64329 01 | FB49 88         | DEY                                                     ; Decrement asterisk counter
64330 02 | FB4A D0 F8      | BNE #FB44                                               ; ..and send all 4 asterisks
                                                                                     ; 
                                                                                     ; SEND FILENAME
                                                                                     ; 
64332 02 | FB4C B1 C9      | LDA (#C9),Y                                             ; Get character of filename
64334 03 | FB4E 20 D1 FF   | JSR #FFD1                                               ; ..and send to tape via OSBPUT
64337 01 | FB51 C8         | INY                                                     ; Point to the next character of filename
64338 02 | FB52 C9 0D      | CMP @#D                                                 ; Reached <CR> filename terminator ?
64340 02 | FB54 D0 F6      | BNE #FB4C                                               ; ..no, go for the next character
                                                                                     ; 
                                                                                     ; SEND REMAINS OF HEADER
                                                                                     ; 
64342 02 | FB56 A0 08      | LDY @#8                                                 ; Get number of bytes of header data to send
64344 03 | FB58 B9 CA 00   | LDA #CA,Y                                               ; Get header data byte
64347 03 | FB5B 20 D1 FF   | JSR #FFD1                                               ; ..and send it to tape via OSBPUT
64350 01 | FB5E 88         | DEY                                                     ; Point to the next byte
64351 02 | FB5F D0 F7      | BNE #FB58                                               ; ..and send all 8 bytes
64353 03 | FB61 20 81 FB   | JSR #FB81                                               ; Wait 0.5 seconds between header and data
64356 02 | FB64 24 D2      | BIT #D2                                                 ; If bit 6 of block flag is clear..
64358 02 | FB66 50 0B      | BVC #FB73                                               ; ..then don't send the block !
                                                                                     ; 
                                                                                     ; SEND DATA
                                                                                     ; 
64360 01 | FB68 88         | DEY                                                     ; 
64361 01 | FB69 C8         | INY                                                     ; Point to the next byte of data
64362 02 | FB6A B1 D3      | LDA (#D3),Y                                             ; ..and fetch it
64364 03 | FB6C 20 D1 FF   | JSR #FFD1                                               ; Send byte to tape via OSBPUT
64367 02 | FB6F C4 CF      | CPY #CF                                                 ; Sent all the bytes in the block ?
64369 02 | FB71 D0 F6      | BNE #FB69                                               ; ..no, go for the next byte
64371 02 | FB73 A5 DC      | LDA #DC                                                 ; Get checksum
64373 03 | FB75 20 D1 FF   | JSR #FFD1                                               ; ..and send it to tape via OSBPUT
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Wait 2 Seconds with Tape Tone Off subroutine
                                                                                     ; --------------------------------------------
                                                                                     ; 
64376 02 | FB78 A2 04      | LDX @#4                                                 ; Get code to set PC0 and PC1 low
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Wait 2 Seconds subroutine
                                                                                     ; -------------------------
                                                                                     ; 
                                                                                     ; - Tone to tape set by X register.
                                                                                     ; - If X=4, tone is off.
                                                                                     ; - If X=7, tone is on.
                                                                                     ; 
64378 03 | FB7A 8E 02 B0   | STX #B002                                               ; Set bits of 8255 PIA port C
64381 02 | FB7D A2 78      | LDX @#78                                                ; Set counter to 180 60ths of a second
64383 02 | FB7F D0 02      | BNE #FB83                                               ; ..and count this many CRT flybacks
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Wait 0.5 Second subroutine
                                                                                     ; --------------------------
                                                                                     ; 
64385 02 | FB81 A2 1E      | LDX @#1E                                                ; Set counter to 30 60ths of a second
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Wait up to 4.25 Seconds subroutine
                                                                                     ; ----------------------------------
                                                                                     ; 
                                                                                     ; - Waits X 60ths of a second.
                                                                                     ; 
64387 03 | FB83 20 66 FE   | JSR #FE66                                               ; Wait for CRT flyback (one 60th of second)
64390 01 | FB86 CA         | DEX                                                     ; Decrement 60ths of a second counter
64391 02 | FB87 D0 FA      | BNE #FB83                                               ; 
64393 01 | FB89 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Wait 0.1 second subroutine
                                                                                     ; --------------------------
                                                                                     ; 
64394 02 | FB8A A2 06      | LDX @#6                                                 ; Set counter to 6 60ths of a second
64396 02 | FB8C D0 F5      | BNE #FB83                                               ; ..and count this many CRT flybacks
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Read Header from Tape and Test for Un-Named File subroutine
                                                                                     ; -----------------------------------------------------------
                                                                                     ; 
                                                                                     ; 
                                                                                     ; - Waits for 2 seconds of uninterrupted high tone leader, and then loads
                                                                                     ; the first 4 data bytes into workspace #D3..#D6.
                                                                                     ; - If these 4 bytes are a valid header preamble '****', returns with Z set
                                                                                     ; and Y=0.
                                                                                     ; - If <CTRL> key pressed during leader search, returns with V clear.
                                                                                     ; - If <SHIFT> key pressed during leader search, leader search is skipped.
                                                                                     ; 
                                                                                     ; WAIT FOR <SHIFT> & <CTRL> KEYS UNTOUCHED
                                                                                     ; 
64398 03 | FB8E 2C 01 B0   | BIT #B001                                               ; Test keyboard
64401 02 | FB91 10 FB      | BPL #FB8E                                               ; ..wait until <SHIFT> key not pressed
64403 02 | FB93 50 F9      | BVC #FB8E                                               ; ..and until <CTRL> key not pressed
                                                                                     ; 
                                                                                     ; WAIT FOR HIGH TONE LEADER
                                                                                     ; 
64405 02 | FB95 A0 00      | LDY @#0                                                 ; )
64407 02 | FB97 85 C3      | STA #C3                                                 ; ) Set counter to #1000
64409 02 | FB99 A9 10      | LDA @#10                                                ; ) Must detect 4096 cycles of high tone
64411 02 | FB9B 85 C2      | STA #C2                                                 ; ) leader
64413 03 | FB9D 2C 01 B0   | BIT #B001                                               ; Test keyboard
64416 02 | FBA0 10 0F      | BPL #FBB1                                               ; If <SHIFT> pressed, skip leader search
64418 02 | FBA2 50 0D      | BVC #FBB1                                               ; If <CTRL> pressed, return now
64420 03 | FBA4 20 BD FC   | JSR #FCBD                                               ; Count duration of tape pulse
64423 02 | FBA7 B0 EC      | BCS #FB95                                               ; ..low tone detected - reset the leader
                                                                                     ; counter and start searching again
64425 02 | FBA9 C6 C3      | DEC #C3                                                 ; Decrement LSB leader counter
64427 02 | FBAB D0 F0      | BNE #FB9D                                               ; 
64429 02 | FBAD C6 C2      | DEC #C2                                                 ; Decrement MSB leader counter if overflow
64431 02 | FBAF D0 EC      | BNE #FB9D                                               ; ..keep going until counted down to zero
64433 02 | FBB1 70 01      | BVS #FBB4                                               ; If <CTRL> not pressed, go on to load the
                                                                                     ; header preamble
64435 01 | FBB3 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; LOAD HEADER PREAMBLE
                                                                                     ; 
64436 02 | FBB4 A0 04      | LDY @#4                                                 ; Set byte counter to load 4 bytes
64438 01 | FBB6 08         | PHP                                                     ; Save state of overflow flag (it's clear)
64439 03 | FBB7 20 E4 FB   | JSR #FBE4                                               ; Read 4 bytes from tape via OSBGET
64442 01 | FBBA 28         | PLP                                                     ; Restore state of overflow flag (clear)
                                                                                     ; 
                                                                                     ; TEST HEADER PREAMBLE IS IT '****' ?
                                                                                     ; 
64443 02 | FBBB A0 04      | LDY @#4                                                 ; Set preamble byte counter
64445 02 | FBBD A9 2A      | LDA @#2A                                                ; Get '*'
64447 03 | FBBF D9 D3 00   | CMP #D3,Y                                               ; Is this byte of the preamble an asterisk ?
64450 02 | FBC2 D0 03      | BNE #FBC7                                               ; ..no, return with Carry clear - failure
64452 01 | FBC4 88         | DEY                                                     ; ..yes, point to next byte of preamble
64453 02 | FBC5 D0 F8      | BNE #FBBF                                               ; ..and test all 4 bytes
64455 01 | FBC7 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Read Name from Tape and Compare Names subroutine
                                                                                     ; ------------------------------------------------
                                                                                     ; 
                                                                                     ; - Reads bytes from tape up to filename terminator #D (<CR>), and stores
                                                                                     ; the filename in workspace starting at #ED.
                                                                                     ; - Compares the read filename with the filename at (#C9), and returns with
                                                                                     ; Z set if filenames match.
                                                                                     ; - Enter with Y=0 at #FBC9.
                                                                                     ; 
                                                                                     ; GET FILENAME FROM TAPE
                                                                                     ; 
64456 01 | FBC8 C8         | INY                                                     ; Point to the next byte of w/s
64457 03 | FBC9 20 D4 FF   | JSR #FFD4                                               ; Get byte from tape via OSBGET
64460 03 | FBCC 99 ED 00   | STA #ED,Y                                               ; ..and copy to w/s
64463 02 | FBCF C9 0D      | CMP @#D                                                 ; Was it filename terminator <CR> ?
64465 02 | FBD1 D0 F5      | BNE #FBC8                                               ; ..no, keep loading
                                                                                     ; 
                                                                                     ; COMPARE LOADED FILENAME WITH EXPECTED
                                                                                     ; 
64467 02 | FBD3 A0 FF      | LDY @#FF                                                ; Set filename character pointer
64469 01 | FBD5 C8         | INY                                                     ; Point to the next character
64470 02 | FBD6 B1 C9      | LDA (#C9),Y                                             ; Get character of source filename
64472 03 | FBD8 D9 ED 00   | CMP #ED,Y                                               ; ..and compare with loaded filename
64475 02 | FBDB D0 EA      | BNE #FBC7                                               ; ..mismatch - return with Zero flag clear
64477 02 | FBDD C9 0D      | CMP @#D                                                 ; Reached the filename terminator ?
64479 02 | FBDF D0 F4      | BNE #FBD5                                               ; ..no, keep testing
64481 01 | FBE1 60         | RTS                                                     ; ..yes, return with Zero flag set
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Get 8 Bytes from Tape into Workspace subroutine
                                                                                     ; -----------------------------------------------
                                                                                     ; 
                                                                                     ; - Gets 8 bytes from tape via OSBGET into workspace starting at #DB
                                                                                     ; backwards to #D4.
                                                                                     ; - Returns with Y=0 and zero flag set.
                                                                                     ; 
64482 02 | FBE2 A0 08      | LDY @#8                                                 ; Set byte counter
64484 03 | FBE4 20 D4 FF   | JSR #FFD4                                               ; Get byte from tape via OSBGET
64487 03 | FBE7 99 D3 00   | STA #D3,Y                                               ; ..and store in w/s
64490 01 | FBEA 88         | DEY                                                     ; Decrement byte counter
64491 02 | FBEB D0 F7      | BNE #FBE4                                               ; ..fetch and store all 8 bytes
64493 01 | FBED 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; OSBGET Get Byte from Tape subroutine
                                                                                     ; --------------------------------------
                                                                                     ; 
                                                                                     ; - Reads a byte from tape at 300 baud into the accumulator and adds its
                                                                                     ; value to the arithmetic checksum at #DC.
                                                                                     ; - Preserves X,Y registers and flags.
                                                                                     ; - Uses:  #C3 = Temporary storage for Y register
                                                                                     ; #EC = Temporary storage for X register
                                                                                     ; 
                                                                                     ; 
64494 02 | FBEE 86 EC      | STX #EC                                                 ; Save the X register
64496 02 | FBF0 84 C3      | STY #C3                                                 ; Save the Y register
64498 01 | FBF2 08         | PHP                                                     ; Save interrupt status
64499 01 | FBF3 78         | SEI                                                     ; No interrupts !
                                                                                     ; 
                                                                                     ; GET 0 START BIT
                                                                                     ; 
64500 02 | FBF4 A9 78      | LDA @#78                                                ; Count 8 half cycles - from #78 to #80
64502 02 | FBF6 85 C0      | STA #C0                                                 ; Set transition counter
64504 03 | FBF8 20 BD FC   | JSR #FCBD                                               ; Count duration of tape pulse
64507 02 | FBFB 90 F7      | BCC #FBF4                                               ; ..duration less than 8, so it's a 1 bit
64509 02 | FBFD E6 C0      | INC #C0                                                 ; Increment transition counter
64511 02 | FBFF 10 F7      | BPL #FBF8                                               ; ..count 8 half cycles of 1.2 KHz = a 0 bit
                                                                                     ; 
                                                                                     ; GET 8 BIT BYTE FROM TAPE INTO #C0
                                                                                     ; ENTER WITH ?#C0=#80
                                                                                     ; 
64513 02 | FC01 A9 53      | LDA @#53                                                ; Loop counter - this many passes through
                                                                                     ; the loop takes 3.3mS
64515 02 | FC03 85 C4      | STA #C4                                                 ; Set loop counter
64517 02 | FC05 A2 00      | LDX @#0                                                 ; Clear input transition counter
64519 03 | FC07 AC 02 B0   | LDY #B002                                               ; Get input pulse
64522 03 | FC0A 20 CD FC   | JSR #FCCD                                               ; ..and test state of the input pulse
64525 02 | FC0D F0 00      | BEQ #FC0F                                               ; ..no change   ( takes same time whether )
64527 02 | FC0F F0 01      | BEQ #FC12                                               ; ..no change   (      equal or not       )
64529 01 | FC11 E8         | INX                                                     ; Increment input pulse transition counter
64530 02 | FC12 C6 C4      | DEC #C4                                                 ; Decrement loop counter
64532 02 | FC14 D0 F4      | BNE #FC0A                                               ; ..test for one bit time
64534 02 | FC16 E0 0C      | CPX @#C                                                 ; Test whether the bit is 0 or 1
                                                                                     ; - a 0 should give 8 transitions, and a
                                                                                     ; a 1 should give 16 transitions, so this
                                                                                     ; tests against the average of 12 - giving
                                                                                     ; a large error margin !
64536 02 | FC18 66 C0      | ROR #C0                                                 ; Rotate bit into the partial byte
64538 02 | FC1A 90 E5      | BCC #FC01                                               ; ..have done all the 8 bits when the
                                                                                     ; origionally set MSB of #C0 shifts down to
                                                                                     ; the Carry flag
64540 02 | FC1C A5 C0      | LDA #C0                                                 ; Get the resulting complete byte
64542 01 | FC1E 28         | PLP                                                     ; Restore interrupt status
64543 02 | FC1F A4 C3      | LDY #C3                                                 ; Restore the X register
64545 02 | FC21 A6 EC      | LDX #EC                                                 ; Restore the Y register
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Add Byte to Checksum subroutine
                                                                                     ; -------------------------------
                                                                                     ; 
                                                                                     ; - Adds the contents of the accumulator to the arithmetic checksum at #DC.
                                                                                     ; - A,X,Y registers preserved.
                                                                                     ; 
64547 01 | FC23 48         | PHA                                                     ; Save the byte fetched from tape
64548 01 | FC24 18         | CLC                                                     ; 
64549 02 | FC25 65 DC      | ADC #DC                                                 ; ..and add it to the checksum
64551 02 | FC27 85 DC      | STA #DC                                                 ; Update the checksum
64553 01 | FC29 68         | PLA                                                     ; Restore the byte fetched from tape
64554 01 | FC2A 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Set up Block Load Address subroutine
                                                                                     ; ------------------------------------
                                                                                     ; 
                                                                                     ; - If bit 7 of start address flag #CD is clear, then the vector #D4, #D5
                                                                                     ; is copied to #CB, #CC.
                                                                                     ; 
64555 02 | FC2B A5 CD      | LDA #CD                                                 ; Is file's own load address to be used ?
64557 02 | FC2D 30 08      | BMI #FC37                                               ; ..no, return
64559 02 | FC2F A5 D4      | LDA #D4                                                 ; Get the LSB load address from header w/s
64561 02 | FC31 85 CB      | STA #CB                                                 ; ..and set the LSB data dump address
64563 02 | FC33 A5 D5      | LDA #D5                                                 ; Get the MSB load address from header w/s
64565 02 | FC35 85 CC      | STA #CC                                                 ; ..and set the MSB data dump address
64567 01 | FC37 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print "PLAY TAPE" or "RECORD TAPE" subroutine
                                                                                     ; ---------------------------------------------
                                                                                     ; 
                                                                                     ; - Does full test for MON/NOMON, flagged by #EA.
                                                                                     ; - Entry: Carry clear - Prints 'RECORD TAPE' if bits 1 & 2 of #EA are clear
                                                                                     ; Carry set   - Prints 'PLAY TAPE' if bit 2 of #EA is clear
                                                                                     ; - Entry with Acc=5 at #FC40 prints 'REWIND TAPE' if bits 0, 1 & 2 of #EA
                                                                                     ; are clear.
                                                                                     ; - Waits for keypress before return.
                                                                                     ; 
64568 02 | FC38 B0 04      | BCS #FC3E                                               ; ..deal with 'PLAY TAPE'
64570 02 | FC3A A9 06      | LDA @#6                                                 ; Get 'RECORD TAPE' NOMON mask
64572 02 | FC3C D0 02      | BNE #FC40                                               ; ..and go to test
64574 02 | FC3E A9 04      | LDA @#4                                                 ; Get 'PLAY TAPE' NOMON mask
64576 02 | FC40 A2 07      | LDX @#7                                                 ; 
64578 03 | FC42 8E 02 B0   | STX #B002                                               ; Enable high tone leader to tape output
64581 02 | FC45 24 EA      | BIT #EA                                                 ; Is NOMON set for this function ?
64583 02 | FC47 D0 2D      | BNE #FC76                                               ; ..yes, skip message printing
64585 02 | FC49 C9 05      | CMP @#5                                                 ; Is it 'REWIND TAPE' ?
64587 02 | FC4B F0 16      | BEQ #FC63                                               ; ..yes
64589 02 | FC4D B0 09      | BCS #FC58                                               ; ..no, it's 'RECORD'
64591 03 | FC4F 20 D1 F7   | JSR #F7D1                                               ; Send the following string to OSWRCH
                                                                                     ; 
64594 04 | FC52 50 4C 41 59                                                          ; PLAY
                                                                                     ; 
64598 02 | FC56 D0 15      | BNE #FC6D                                               ; Print 'TAPE'
                                                                                     ; 
                                                                                     ; 
64600 03 | FC58 20 D1 F7   | JSR #F7D1                                               ; Send the following string to OSWRCH
                                                                                     ; 
64603 06 | FC5B 52 45 43 4F 52 44                                                    ; RECORD
                                                                                     ; 
64609 02 | FC61 D0 0A      | BNE #FC6D                                               ; Print 'TAPE'
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print "REWIND TAPE" subroutine
                                                                                     ; ------------------------------
                                                                                     ; 
                                                                                     ; - Waits for keypress before return.
                                                                                     ; 
64611 03 | FC63 20 D1 F7   | JSR #F7D1                                               ; Send the following string to OSWRCH
                                                                                     ; 
64614 06 | FC66 52 45 57 49 4E 44                                                    ; REWIND
                                                                                     ; 
64620 01 | FC6C EA         | NOP                                                     ; String termination byte
64621 03 | FC6D 20 D1 F7   | JSR #F7D1                                               ; Send the following string to OSWRCH
                                                                                     ; 
64624 05 | FC70 20 54 41 50 45                                                       ; TAPE
                                                                                     ; 
64629 01 | FC75 EA         | NOP                                                     ; String termination byte
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Wait for Keypress and Print <CR><LF> subroutine
                                                                                     ; -----------------------------------------------
                                                                                     ; 
64630 03 | FC76 20 E3 FF   | JSR #FFE3                                               ; Get keypress via OSRDCH
64633 03 | FC79 4C ED FF   | JMP #FFED                                               ; Send <CR><LF> to OSWRCH
                                                                                     ; 
                                                                                     ; 
                                                                                     ; OSBPUT Put Byte to Tape subroutine
                                                                                     ; ----------------------------------
                                                                                     ; 
                                                                                     ; - Sends the byte in the accumulator to tape at 300 baud and adds it to the
                                                                                     ; checksum at #DC.
                                                                                     ; - Byte format consists of: 1 '0' start bit
                                                                                     ; 8     data bits
                                                                                     ; 1 '1' stop bit
                                                                                     ; - Preserves A,X,Y registers and flags.
                                                                                     ; 
64636 02 | FC7C 86 EC      | STX #EC                                                 ; Save the X register
64638 02 | FC7E 84 C3      | STY #C3                                                 ; Save the Y register
64640 01 | FC80 08         | PHP                                                     ; Save interrupt status
64641 01 | FC81 78         | SEI                                                     ; No interrupts !
64642 01 | FC82 48         | PHA                                                     ; Save byte to be sent
64643 03 | FC83 20 23 FC   | JSR #FC23                                               ; Add byte to checksum at #DC
64646 02 | FC86 85 C0      | STA #C0                                                 ; Save byte to be sent in w/s
64648 03 | FC88 20 D8 FC   | JSR #FCD8                                               ; Wait for 1 falling edge of 2.4 KHz
64651 02 | FC8B A9 0A      | LDA @#A                                                 ; Number of bits = 1 start + 8 data + 1 stop
64653 02 | FC8D 85 C1      | STA #C1                                                 ; Set bit counter
64655 01 | FC8F 18         | CLC                                                     ; 
64656 02 | FC90 90 0A      | BCC #FC9C                                               ; Send '0' start bit then 8 data bits
                                                                                     ; 
                                                                                     ; SEND 8 CYCLES OF 2.4 KHz TO TAPE - '1' BIT
                                                                                     ; 
64658 02 | FC92 A2 07      | LDX @#7                                                 ; Set cycle counter
64660 03 | FC94 8E 02 B0   | STX #B002                                               ; Set 3 LSB's of 8255 PIA port C high, thus
                                                                                     ; enabling the 2.4 KHz clock
64663 03 | FC97 20 DA FC   | JSR #FCDA                                               ; Wait for 7 further falling edges
64666 02 | FC9A 30 13      | BMI #FCAF                                               ; ..and go on to deal with the next bit
                                                                                     ; 
                                                                                     ; SEND 4 CYCLES OF 1.2 KHz TO TAPE - '1' BIT
                                                                                     ; 
64668 02 | FC9C A0 04      | LDY @#4                                                 ; Set cycle counter
64670 02 | FC9E A9 04      | LDA @#4                                                 ; 
64672 03 | FCA0 8D 02 B0   | STA #B002                                               ; Clear the 2 LSB's of 8255 PIA port C, thus
                                                                                     ; disabling the 2.4 KHz clock
64675 03 | FCA3 20 D8 FC   | JSR #FCD8                                               ; Wait for 1 falling edge of the 2.4 KHz
                                                                                     ; clock - tape output is high
64678 03 | FCA6 EE 02 B0   | INC #B002                                               ; Set the LSB of 8255 PIA port C, so that
                                                                                     ; the 2.4 KHz is still disabled, but the
                                                                                     ; tape output is low
64681 03 | FCA9 20 D8 FC   | JSR #FCD8                                               ; Wait for 1 falling edge of 2.4 KHz clock
64684 01 | FCAC 88         | DEY                                                     ; Decrement cycle counter
64685 02 | FCAD D0 EF      | BNE #FC9E                                               ; ..do all 4 cycles
                                                                                     ; 
                                                                                     ; DEAL WITH NEXT BIT
                                                                                     ; 
64687 01 | FCAF 38         | SEC                                                     ; Set Carry so 1 is shifted in and hence
                                                                                     ; the stop bit is '1'
64688 02 | FCB0 66 C0      | ROR #C0                                                 ; Shift the next bit for transmission into
                                                                                     ; the Carry flag
64690 02 | FCB2 C6 C1      | DEC #C1                                                 ; Decrement bit counter
64692 02 | FCB4 D0 DA      | BNE #FC90                                               ; ..send this bit, unless sent all the bits
64694 02 | FCB6 A4 C3      | LDY #C3                                                 ; Restore the Y register
64696 02 | FCB8 A6 EC      | LDX #EC                                                 ; Restore the X register
64698 01 | FCBA 68         | PLA                                                     ; Restore accumulator
64699 01 | FCBB 28         | PLP                                                     ; Restore interrupt status
64700 01 | FCBC 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Count Duration of Tape Pulse subroutine
                                                                                     ; ---------------------------------------
                                                                                     ; 
                                                                                     ; - Returns with Zero flag set if the total number of loops was 8.
                                                                                     ; - Returns with Carry set if total number of loops was > 7.
                                                                                     ; - Returns with Carry clear if total number of loops was < 8.
                                                                                     ; - Returns with X=count, but if X=0 then no change was detected in 256
                                                                                     ; loops.
                                                                                     ; - Stores the on entry state of ?#B002 at #C5, returns with Y=new state.
                                                                                     ; 
64701 02 | FCBD A2 00      | LDX @#0                                                 ; Clear loop counter
64703 03 | FCBF AC 02 B0   | LDY #B002                                               ; Get origional state of input pulse
64706 01 | FCC2 E8         | INX                                                     ; Increment loop counter
64707 02 | FCC3 F0 07      | BEQ #FCCC                                               ; ..failed to detect change in 256 loops
64709 03 | FCC5 20 CD FC   | JSR #FCCD                                               ; Has input pulse level changed ?
64712 02 | FCC8 F0 F8      | BEQ #FCC2                                               ; ..no, increment counter & test again
64714 02 | FCCA E0 08      | CPX @#8                                                 ; Compare loop counter with 8 before return
64716 01 | FCCC 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Test state of #B002 tape input pulse subroutine
                                                                                     ; -----------------------------------------------
                                                                                     ; 
                                                                                     ; - Entry: Y = ?#B002
                                                                                     ; - Exit:  Y = new ?#B002
                                                                                     ; ?#C5 = old #B002
                                                                                     ; - Returns with Z set if no change.
                                                                                     ; 
64717 02 | FCCD 84 C5      | STY #C5                                                 ; Save origional state of input pulse
64719 03 | FCCF AD 02 B0   | LDA #B002                                               ; Get current state of input pulse
64722 01 | FCD2 A8         | TAY                                                     ; ..and keep a copy of the new state
64723 02 | FCD3 45 C5      | EOR #C5                                                 ; Has it changed ?
64725 02 | FCD5 29 20      | AND @#20                                                ; Mask off all but the input bit
64727 01 | FCD7 60         | RTS                                                     ; return with Z set if no change in level
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Wait for 1 Falling Edge of the 2.4KHz Clock subroutine
                                                                                     ; ------------------------------------------------------
                                                                                     ; 
64728 02 | FCD8 A2 00      | LDX @#0                                                 ; Count 1 falling edge
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Wait for 1 to 127 Falling Edges of the 2.4KHz Clock subroutine
                                                                                     ; --------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Waits for X+1 falling edges where 0<=X<=#80.
                                                                                     ; 
64730 02 | FCDA A9 10      | LDA @#10                                                ; Get mask for bit 4 of #B002 input port
64732 03 | FCDC 2C 02 B0   | BIT #B002                                               ; Is clock input low ?
64735 02 | FCDF F0 FB      | BEQ #FCDC                                               ; ..yes, wait for it to go high
64737 03 | FCE1 2C 02 B0   | BIT #B002                                               ; Is clock input high ?
64740 02 | FCE4 D0 FB      | BNE #FCE1                                               ; ..yes, wait for it to go low
64742 01 | FCE6 CA         | DEX                                                     ; Decrement falling edge counter
64743 02 | FCE7 10 F3      | BPL #FCDC                                               ; ..and count the required number of edges
64745 01 | FCE9 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Send ASCII Character to Screen subroutine
                                                                                     ; -----------------------------------------
                                                                                     ; 
                                                                                     ; - Prints non-control codes (#20 to #FF) at the current cursor position on
                                                                                     ; the screen.
                                                                                     ; - Executes the following control codes:
                                                                                     ; 
                                                                                     ; <NUL><ACK><BEL><BS><HT><LF><VT><FF><CR><SO><SI><NAK><ESC>
                                                                                     ; 0    6    7   8   9   #A  #B  #C  #D  #E  #F  #15  #1B
                                                                                     ; 
                                                                                     ; TEST FOR CONTROL CODES
                                                                                     ; 
64746 02 | FCEA C9 06      | CMP @#6                                                 ; Is it <ACK> ?
64748 02 | FCEC F0 1D      | BEQ #FD0B                                               ; ..yes, reset the 6847 VDG to alphanumeric
                                                                                     ; mode and clear the NAK flag
64750 02 | FCEE C9 15      | CMP @#15                                                ; Is it <NAK> ?
64752 02 | FCF0 F0 1F      | BEQ #FD11                                               ; ..yes, set the NAK flag
64754 02 | FCF2 A4 E0      | LDY #E0                                                 ; Get cursor postion - is the NAK flag
                                                                                     ; bit 7 set ?
64756 02 | FCF4 30 23      | BMI #FD19                                               ; ..yes, printing not allowed - return
64758 02 | FCF6 C9 1B      | CMP @#1B                                                ; Is it <ESC> ?
64760 02 | FCF8 F0 11      | BEQ #FD0B                                               ; ..yes, reset VDG to alphanumeric mode and
                                                                                     ; and clear NAK flag
64762 02 | FCFA C9 07      | CMP @#7                                                 ; Is it <BEL> ?
64764 02 | FCFC F0 1C      | BEQ #FD1A                                               ; ..yes, sound a bleep
64766 03 | FCFE 20 44 FD   | JSR #FD44                                               ; Invert char at current cursor position
64769 02 | FD01 A2 0A      | LDX @#A                                                 ; Point to the control code table at #FED5
64771 03 | FD03 20 C5 FE   | JSR #FEC5                                               ; Test character for executable control code
64774 02 | FD06 D0 21      | BNE #FD29                                               ; ..it's not an executable control code
                                                                                     ; so print it
                                                                                     ; it if >#1F, otherwise return
64776 03 | FD08 4C B7 FE   | JMP #FEB7                                               ; ..executable control code - get the code's
                                                                                     ; execution address and jump to it
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <ESC> subroutine
                                                                                     ; -----------------------
                                                                                     ; 
                                                                                     ; - Resets the 6847 VDG to alphanumeric mode.
                                                                                     ; - Clears the NAK flag (bit 7 of #E0).
                                                                                     ; 
64779 01 | FD0B 18         | CLC                                                     ; ..to clear NAK flag
64780 02 | FD0C A2 00      | LDX @#0                                                 ; 
64782 03 | FD0E 8E 00 B0   | STX #B000                                               ; Reset the VDG to alphanumeric mode
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <ACK> or <NAK> subroutine
                                                                                     ; --------------------------------
                                                                                     ; 
                                                                                     ; - Entry: Carry clear to perform <NAK>
                                                                                     ; Carry  set  to perform <ACK>
                                                                                     ; - Returns with Accumulator and Y registers preserved, and with X=2.
                                                                                     ; 
64785 02 | FD11 A2 02      | LDX @#2                                                 ; 
64787 01 | FD13 08         | PHP                                                     ; Save state of Carry flag
64788 02 | FD14 16 DE      | ASL #DE,X                                               ; Get rid of old NAK flag (bit 7)
64790 01 | FD16 28         | PLP                                                     ; Restore state of Carry flag
64791 02 | FD17 76 DE      | ROR #DE,X                                               ; ..and shift in the new NAK flag value
64793 01 | FD19 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <BEL> subroutine
                                                                                     ; -----------------------
                                                                                     ; 
                                                                                     ; - Returns with X=0, Y=128, and the sign flag set.
                                                                                     ; 
64794 02 | FD1A A9 05      | LDA @#5                                                 ; Get control code to set 8255 PIA port bits
                                                                                     ; C0-C3 to input; A, B, and C4-C7 to output
64796 01 | FD1C A8         | TAY                                                     ; Set up outer loop counter
64797 03 | FD1D 8D 03 B0   | STA #B003                                               ; Set port C0-C3 to input, so speaker O/P=1
64800 01 | FD20 CA         | DEX                                                     ; )
64801 02 | FD21 D0 FD      | BNE #FD20                                               ; ) ..a short delay
64803 02 | FD23 49 01      | EOR @#1                                                 ; Toggle C0-C3 between input and output
64805 01 | FD25 C8         | INY                                                     ; Increment outer loop counter
64806 02 | FD26 10 F5      | BPL #FD1D                                               ; ..continue for 122 outer loop cycles
64808 01 | FD28 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Print an ASCII Character on the Screen subroutine
                                                                                     ; -------------------------------------------------
                                                                                     ; 
                                                                                     ; - Control characters (codes less than #20) are ignored.
                                                                                     ; - Increments current cursor position, incrementing the print line and/or
                                                                                     ; scrolling the screen as necessary.
                                                                                     ; - Entry: Accumulator contains ASCII code of character to be printed
                                                                                     ; Y register contains current cursor position ?#E0.
                                                                                     ; - Accumulator preserved.
                                                                                     ; 
64809 02 | FD29 C9 20      | CMP @#20                                                ; Is the character a control code ?
64811 02 | FD2B 90 17      | BCC #FD44                                               ; ..yes, so don't print it
64813 02 | FD2D 69 1F      | ADC @#1F                                                ; )
64815 02 | FD2F 30 02      | BMI #FD33                                               ; )
64817 02 | FD31 49 60      | EOR @#60                                                ; ) Convert to screen character
64819 03 | FD33 20 6B FE   | JSR #FE6B                                               ; Wait for the next or current flyback
64822 02 | FD36 91 DE      | STA (#DE),Y                                             ; Store character at current print position
64824 01 | FD38 C8         | INY                                                     ; Increment cursor position
64825 02 | FD39 C0 20      | CPY @#20                                                ; Reached end of the current print line ?
64827 02 | FD3B 90 05      | BCC #FD42                                               ; ..no, update cursor position and invert
                                                                                     ; the cursor at this position
64829 03 | FD3D 20 EC FD   | JSR #FDEC                                               ; ..yes, do <CR><LF> first
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Reset Cursor to Start of Current Line Without Deletion subroutine
                                                                                     ; -----------------------------------------------------------------
                                                                                     ; 
64832 02 | FD40 A0 00      | LDY @#0                                                 ; Point to start of current line
64834 02 | FD42 84 E0      | STY #E0                                                 ; Update current cursor position register
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Invert Character at Current Cursor Position subroutine
                                                                                     ; ------------------------------------------------------
                                                                                     ; 
                                                                                     ; - EORs the character at the current cursor position with the cursor mask
                                                                                     ; ?#E1.
                                                                                     ; - A, X, Y registers preserved.
                                                                                     ; 
64836 01 | FD44 48         | PHA                                                     ; Save character in accumulator
64837 03 | FD45 20 6B FE   | JSR #FE6B                                               ; Wait for the next or current flyback
64840 02 | FD48 B1 DE      | LDA (#DE),Y                                             ; Get character at current print position
64842 02 | FD4A 45 E1      | EOR #E1                                                 ; Mask it
64844 02 | FD4C 91 DE      | STA (#DE),Y                                             ; ..and return it to the screen
64846 01 | FD4E 68         | PLA                                                     ; Restore character to accumulator
64847 01 | FD4F 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <DEL> subroutine
                                                                                     ; -----------------------
                                                                                     ; 
                                                                                     ; - Enter with Y containing the current cursor position ?#E1.
                                                                                     ; 
64848 03 | FD50 20 35 FE   | JSR #FE35                                               ; Move cursor back one position if possible,
                                                                                     ; otherwise invert character at current
                                                                                     ; cursor position and return
64851 02 | FD53 A9 20      | LDA @#20                                                ; Get <SPC>
64853 03 | FD55 20 6B FE   | JSR #FE6B                                               ; Wait for the next or current flyback
64856 02 | FD58 91 DE      | STA (#DE),                                              ; Blank character at previous cursor pos'n
64858 02 | FD5A 10 E6      | BPL #FD42                                               ; Update cursor position and invert cursor
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <BS> subroutine
                                                                                     ; ----------------------
                                                                                     ; 
                                                                                     ; - Enter with Y containing the current cursor position ?#E1.
                                                                                     ; 
64860 03 | FD5C 20 35 FE   | JSR #FE35                                               ; Move cursor back one position if possible,
                                                                                     ; otherwise invert character at the current
                                                                                     ; cursor position and return
64863 03 | FD5F 4C 42 FD   | JMP #FD42                                               ; Update cursor position and invert cursor
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <LF> subroutine
                                                                                     ; ----------------------
                                                                                     ; 
64866 03 | FD62 20 EC FD   | JSR #FDEC                                               ; Do <LF>, scrolling if necessary
64869 02 | FD65 A4 E0      | LDY #E0                                                 ; Get origional cursor position, which has
                                                                                     ; not changed although the line start
                                                                                     ; address may have
64871 02 | FD67 10 D9      | BPL #FD42                                               ; Update cursor position and invert cursor
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <FF> subroutine
                                                                                     ; ----------------------
                                                                                     ; 
                                                                                     ; - Resets the 8647 VDG to the alphanumeric mode and clears the screen.
                                                                                     ; - Sets the cursor to the top left position.
                                                                                     ; 
64873 02 | FD69 A0 80      | LDY @#80                                                ; 
64875 02 | FD6B 84 E1      | STY #E1                                                 ; Set the cursor mask to default
64877 02 | FD6D A0 00      | LDY @#0                                                 ; Clear screen memory index
64879 03 | FD6F 8C 00 B0   | STY #B000                                               ; Set 6847 VDG to alphanumeric mode
64882 02 | FD72 A9 20      | LDA @#20                                                ; Get <SPC>
64884 03 | FD74 99 00 80   | STA #8000,Y                                             ; Clear byte of upper page of screen
64887 03 | FD77 99 00 81   | STA #8100,Y                                             ; Clear byte of lower page of screen
64890 01 | FD7A C8         | INY                                                     ; Point to the next byte
64891 02 | FD7B D0 F7      | BNE #FD74                                               ; ..and clear both complete pages
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <RS> subroutine
                                                                                     ; ----------------------
                                                                                     ; 
                                                                                     ; - Sets cursor to top left position.
                                                                                     ; 
64893 02 | FD7D A9 80      | LDA @#80                                                ; 
64895 02 | FD7F A0 00      | LDY @#0                                                 ; Clear current cursor position
64897 02 | FD81 85 DF      | STA #DF                                                 ; ) Set line start address to the top of
64899 02 | FD83 84 DE      | STY #DE                                                 ; ) the screen at #8000
64901 02 | FD85 F0 BB      | BEQ #FD42                                               ; Update cursor position and invert cursor
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <VT> subroutine
                                                                                     ; ----------------------
                                                                                     ; 
                                                                                     ; - Enter with Y containing the current cursor position ?#E1.
                                                                                     ; 
64903 03 | FD87 20 3A FE   | JSR #FE3A                                               ; Move the cursor position up a line
64906 03 | FD8A 4C 42 FD   | JMP #FD42                                               ; Update cursor position and invert cursor
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <SO> subroutine
                                                                                     ; ----------------------
                                                                                     ; 
                                                                                     ; - Turns page mode on, and sets the number of lines left to 16.
                                                                                     ; 
64909 01 | FD8D 18         | CLC                                                     ; 
64910 02 | FD8E A9 10      | LDA @#10                                                ; Get number of lines in page = 16
64912 02 | FD90 85 E6      | STA #E6                                                 ; Indicate page mode by setting count
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <SI> subroutine
                                                                                     ; ----------------------
                                                                                     ; 
                                                                                     ; - Turns page mode off.
                                                                                     ; - Enter with Carry set.
                                                                                     ; 
64914 02 | FD92 A2 08      | LDX @#8                                                 ; 
64916 03 | FD94 20 13 FD   | JSR #FD13                                               ; Set or clear bit 7 of #E6 according to
                                                                                     ; the state of the Carry flag
64919 03 | FD97 4C 44 FD   | JMP #FD44                                               ; Invert character at current position
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <LOCK> subroutine
                                                                                     ; ------------------------
                                                                                     ; 
                                                                                     ; - Toggles the lock flag - #E7 = #60 Lock on
                                                                                     ; #E7 =   0 Lock off
                                                                                     ; - Enter with Carry set.
                                                                                     ; 
64922 02 | FD9A A5 E7      | LDA #E7                                                 ; Get the lock flag
64924 02 | FD9C 49 60      | EOR @#60                                                ; ..toggle it
64926 02 | FD9E 85 E7      | STA #E7                                                 ; ..and restore it
64928 02 | FDA0 B0 09      | BCS #FDAB                                               ; Go fetch another keypress
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle Cursor Keys from Keyboard subroutine
                                                                                     ; -------------------------------------------
                                                                                     ; 
                                                                                     ; - Sends the cursor control code to screen and then fetches another key.
                                                                                     ; 
64930 02 | FDA2 29 05      | AND @#5                                                 ; 
64932 03 | FDA4 2E 01 B0   | ROL #B001                                               ; 
64935 01 | FDA7 2A         | ROL A                                                   ; 
64936 03 | FDA8 20 EA FC   | JSR #FCEA                                               ; Send control character to screen
64939 03 | FDAB 4C 9A FE   | JMP #FE9A                                               ; ..and fetch another key
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <COPY> Key subroutine
                                                                                     ; ----------------------------
                                                                                     ; 
64942 02 | FDAE A4 E0      | LDY #E0                                                 ; Get the current cursor position
64944 03 | FDB0 20 6B FE   | JSR #FE6B                                               ; Wait for the next or current flyback
64947 02 | FDB3 B1 DE      | LDA (#DE),Y                                             ; Get character at current cursor position
64949 02 | FDB5 45 E1      | EOR #E1                                                 ; Get rid of the cursor mask
64951 02 | FDB7 30 02      | BMI #FDBB                                               ; )
64953 02 | FDB9 49 60      | EOR @#60                                                ; )
64955 02 | FDBB E9 20      | SBC @#20                                                ; ) Convert screen character to ASCII
64957 03 | FDBD 4C E9 FD   | JMP #FDE9                                               ; Restore A,X,Y regs & status & return
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <DEL> key #F (ASCII #7F) subroutine
                                                                                     ; ------------------------------------------
                                                                                     ; 
64960 02 | FDC0 A9 5F      | LDA @#5F                                                ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle '[\]^_' keys #3B-#3F (ASCII #5B-#5F) subroutine
                                                                                     ; ------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Enter with accumulator = key number = #20 - ASCII value.
                                                                                     ; 
64962 02 | FDC2 49 20      | EOR @#20                                                ; 
64964 02 | FDC4 D0 23      | BNE #FDE9                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' keys #21-#3A (ASCII #41-#5A) sub
                                                                                     ; --------------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Enter with accumulator = key number = #20 - ASCII value.
                                                                                     ; 
64966 02 | FDC6 45 E7      | EOR #E7                                                 ; Invert if lock flag set to #60
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle '@' key #20 (ASCII #40) subroutine
                                                                                     ; -----------------------------------------
                                                                                     ; 
64968 03 | FDC8 2C 01 B0   | BIT #B001                                               ; Is the shift key being pressed ?
64971 02 | FDCB 30 02      | BMI #FDCF                                               ; ..no, don't invert the character
64973 02 | FDCD 49 60      | EOR @#60                                                ; ..yes, invert the character
64975 03 | FDCF 4C DF FD   | JMP #FDDF                                               ; Convert to ASCII & test for <CTRL> key
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle '!"#$' keys 1-4 (ASCII #21-#24) subroutine
                                                                                     ; -------------------------------------------------
                                                                                     ; 
                                                                                     ; - Enter with accumulator = key number = #20 - ASCII value.
                                                                                     ; 
64978 02 | FDD2 69 39      | ADC @#39                                                ; 
64980 02 | FDD4 90 F2      | BCC #FDC8                                               ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle '<=>?>' keys #1C-#1F (ASCII #3C-#3F) subroutine
                                                                                     ; ------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Enter with accumulator = key number = #20 - ASCII value.
                                                                                     ; 
64982 02 | FDD6 49 10      | EOR @#10                                                ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle '123456789:;' keys #11-#1B (ASCII #31-#3B) subroutine
                                                                                     ; ------------------------------------------------------------
                                                                                     ; 
                                                                                     ; - Enter with accumulator = key number = #20 - ASCII value.
                                                                                     ; 
64984 03 | FDD8 2C 01 B0   | BIT #B001                                               ; 
64987 02 | FDDB 30 02      | BMI #FDDF                                               ; 
64989 02 | FDDD 49 10      | EOR @#10                                                ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <SPACE> key 0 (ASCII #10) subroutine
                                                                                     ; -------------------------------------------
                                                                                     ; 
                                                                                     ; CONVERT TO ASCII & TEST FOR <CTRL> KEY
                                                                                     ; 
64991 01 | FDDF 18         | CLC                                                     ; 
64992 02 | FDE0 69 20      | ADC @#20                                                ; Convert to ASCII
64994 03 | FDE2 2C 01 B0   | BIT #B001                                               ; Is <CTRL> key pressed ?
64997 02 | FDE5 70 02      | BVS #FDE9                                               ; ..no, restore X, Y & flags & return
64999 02 | FDE7 29 1F      | AND @#1F                                                ; ..yes, mask to range 0-#1F
65001 03 | FDE9 4C 60 FE   | JMP #FE60                                               ; Restore X, Y & flags & return
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Handle <LF>, Scrolling if Necessary subroutine
                                                                                     ; ----------------------------------------------
                                                                                     ; 
                                                                                     ; - If in page mode, decrements page counter, and at the end of the page
                                                                                     ; waits for a keypress before scrolling.
                                                                                     ; 
65004 02 | FDEC A5 DE      | LDA #DE                                                 ; Get LSB start of line
65006 02 | FDEE A4 DF      | LDY #DF                                                 ; Get MSB start of line
65008 02 | FDF0 C0 81      | CPY @#81                                                ; In lower screen page ?
65010 02 | FDF2 90 38      | BCC #FE2C                                               ; ..no, do <LF> - scrolling not required
65012 02 | FDF4 C9 E0      | CMP @#E0                                                ; In last page..but is it the last line ?
65014 02 | FDF6 90 34      | BCC #FE2C                                               ; ..no, do <LF> - scrolling not required
                                                                                     ; 
                                                                                     ; SCROLLING REQUIRED - CHECK IN PAGE MODE
                                                                                     ; 
65016 02 | FDF8 A4 E6      | LDY #E6                                                 ; Get page mode flag
65018 02 | FDFA 30 0C      | BMI #FE08                                               ; ..not in page mode - scroll the screen
65020 01 | FDFC 88         | DEY                                                     ; 
65021 02 | FDFD D0 07      | BNE #FE06                                               ; 
                                                                                     ; 
                                                                                     ; IN PAGE MODE - GET KEYPRESS
                                                                                     ; 
65023 03 | FDFF 20 71 FE   | JSR #FE71                                               ; Scan keyboard
65026 02 | FE02 B0 FB      | BCS #FDFF                                               ; ..keep scanning until key pressed
65028 02 | FE04 A0 10      | LDY @#10                                                ; 
65030 02 | FE06 84 E6      | STY #E6                                                 ; Reset page counter to 16 lines
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Scroll the Screen subroutine
                                                                                     ; ----------------------------
                                                                                     ; 
65032 02 | FE08 A0 20      | LDY @#20                                                ; Shift screen up 32 characters = 1 line
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Scroll Y lines of the Screen subroutine
                                                                                     ; ---------------------------------------
                                                                                     ; 
                                                                                     ; - For every #20 in Y a top line of the screen is not scrolled.
                                                                                     ; 
65034 03 | FE0A 20 66 FE   | JSR #FE66                                               ; Wait for the start of the next flyback
65037 03 | FE0D B9 00 80   | LDA #8000,Y                                             ; Get byte from upper text page
65040 03 | FE10 99 E0 7F   | STA #7FE0,Y                                             ; ..and store it a line higher
65043 01 | FE13 C8         | INY                                                     ; Point to next screen byte
65044 02 | FE14 D0 F7      | BNE #FE0D                                               ; ..and shift up all the upper text page
65046 03 | FE16 20 6B FE   | JSR #FE6B                                               ; Wait for the next or current flyback
65049 03 | FE19 B9 00 81   | LDA #8100,Y                                             ; Get byte from lower text page
65052 03 | FE1C 99 E0 80   | STA #80E0,Y                                             ; ..and store it a line higher
65055 01 | FE1F C8         | INY                                                     ; Point to next screen byte
65056 02 | FE20 D0 F7      | BNE #FE19                                               ; ..and shift up all the lower text page
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Delete Current Line subroutine
                                                                                     ; ------------------------------
                                                                                     ; 
                                                                                     ; - CLears the 32 character line based at (#DE) to black (<SPACE>).
                                                                                     ; 
65058 02 | FE22 A0 1F      | LDY @#1F                                                ; Set character pointer to end of line
65060 02 | FE24 A9 20      | LDA @#20                                                ; Get <SPACE>
65062 02 | FE26 91 DE      | STA (#DE),Y                                             ; Clear the character to black
65064 01 | FE28 88         | DEY                                                     ; Point to the next character
65065 02 | FE29 10 FB      | BPL #FE26                                               ; ..and clear the entire print line
65067 01 | FE2B 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Add One Line to the Cursor Position subroutine
                                                                                     ; ----------------------------------------------
                                                                                     ; 
                                                                                     ; - Enter with the accumulator containing the LSB current cursor address
                                                                                     ; #DE and Carry clear.
                                                                                     ; 
65068 02 | FE2C 69 20      | ADC @#20                                                ; Add 32 characters = 1 print line
65070 02 | FE2E 85 DE      | STA #DE                                                 ; ..and update LSB cursor address
65072 02 | FE30 D0 02      | BNE #FE34                                               ; 
65074 02 | FE32 E6 DF      | INC #DF                                                 ; Increment MSB cursor address if overflow
65076 01 | FE34 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Move the Cursor Back One Position subroutine
                                                                                     ; --------------------------------------------
                                                                                     ; 
                                                                                     ; - Decrements the current cursor position, dealing with line underflow.
                                                                                     ; - If the cursor is at the top left of the screen, the character at this
                                                                                     ; position is inverted before premature return.
                                                                                     ; - Used by the <BS> and <DEL> subroutines.
                                                                                     ; - Enter with Y register holding the current cursor position ?#31.
                                                                                     ; 
65077 01 | FE35 88         | DEY                                                     ; Point to the previous cursor position
65078 02 | FE36 10 19      | BPL #FE51                                               ; ..still on current line, return
                                                                                     ; 
                                                                                     ; DEAL WITH LINE UNDERFLOW
                                                                                     ; 
65080 02 | FE38 A0 1F      | LDY @#1F                                                ; Set cursor position to last char on line
65082 02 | FE3A A5 DE      | LDA #DE                                                 ; Get LSB current line address
65084 02 | FE3C D0 0B      | BNE #FE49                                               ; ..not at top of screen, so can move line
                                                                                     ; address up a line
65086 02 | FE3E A6 DF      | LDX #DF                                                 ; Get MSB current line address
65088 02 | FE40 E0 80      | CPX @#80                                                ; Is it upper page ?
65090 02 | FE42 D0 05      | BNE #FE49                                               ; ..no, move line address up a line
                                                                                     ; 
                                                                                     ; ALREADY AT TOP OF SCREEN - RETURN
                                                                                     ; 
65092 01 | FE44 68         | PLA                                                     ; )
65093 01 | FE45 68         | PLA                                                     ; ) Remove return address from stack
65094 03 | FE46 4C 65 FD   | JMP #FD65                                               ; Invert char at current cursor position
                                                                                     ; 
                                                                                     ; MOVE CURRENT START ADDRESS UP A LINE
                                                                                     ; 
65097 02 | FE49 E9 20      | SBC @#20                                                ; Move LSB current line back 32 characters
65099 02 | FE4B 85 DE      | STA #DE                                                 ; ..and update LSB line address
65101 02 | FE4D B0 02      | BCS #FE51                                               ; 
65103 02 | FE4F C6 DF      | DEC #DF                                                 ; Decrement MSB line address if overflow
65105 01 | FE51 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Send Character to VIA and Screen subroutine
                                                                                     ; -------------------------------------------
                                                                                     ; 
                                                                                     ; - Preserves all registers.
                                                                                     ; 
65106 03 | FE52 20 FB FE   | JSR #FEFB                                               ; Send character in accumulator to the VIA
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Send Character to Screen subroutine
                                                                                     ; -----------------------------------
                                                                                     ; 
                                                                                     ; - Preserves all registers.
                                                                                     ; 
65109 01 | FE55 08         | PHP                                                     ; Save flags
65110 01 | FE56 48         | PHA                                                     ; Save accumulator
65111 01 | FE57 D8         | CLD                                                     ; 
65112 02 | FE58 84 E5      | STY #E5                                                 ; Save Y register
65114 02 | FE5A 86 E4      | STX #E4                                                 ; Save X register
65116 03 | FE5C 20 EA FC   | JSR #FCEA                                               ; Send character in accumulator to screen
65119 01 | FE5F 68         | PLA                                                     ; Restore accumulator
65120 02 | FE60 A6 E4      | LDX #E4                                                 ; Restore X register
65122 02 | FE62 A4 E5      | LDY #E5                                                 ; Restore Y register
65124 01 | FE64 28         | PLP                                                     ; Restore flags
65125 01 | FE65 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Wait Until Next CRT Field Flyback subroutine
                                                                                     ; --------------------------------------------
                                                                                     ; 
                                                                                     ; Preserves Accumulator, X, Y registers
                                                                                     ; 
65126 03 | FE66 2C 02 B0   | BIT #B002                                               ; In flyback ?
65129 02 | FE69 10 FB      | BPL #FE66                                               ; ..yes, wait until finished
                                                                                     ; 
                                                                                     ; Wait Until Next or Current CRT Field Flyback subroutine
                                                                                     ; -------------------------------------------------------
65131 03 | FE6B 2C 02 B0   | BIT #B002                                               ; In flyback ?
65134 02 | FE6E 30 FB      | BMI #FE6B                                               ; ..no, wait for flyback
65136 01 | FE70 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; Scan Key Matrix subroutine
                                                                                     ; --------------------------
                                                                                     ; - Does not examine the <CTRL>, <SHIFT>, or <REPT> keys.
                                                                                     ; - Enter with the 4 LSBs of #B000 clear.
                                                                                     ; - Returns with ASCII value minus #20 in Y register and Carry clear if successful.
                                                                                     ; - Destroys A,X,Y registers.
                                                                                     ; - Returns with Z flag set.
                                                                                     ; 
65137 02 | FE71 A0 3B      | LDY @#3B                                                ; Set key counter
65139 01 | FE73 18         | CLC                                                     ; 
65140 02 | FE74 A9 20      | LDA @#20                                                ; Initialise bit mask to examine bit 5
65142 02 | FE76 A2 0A      | LDX @#A                                                 ; Set row counter
65144 03 | FE78 2C 01 B0   | BIT #B001                                               ; Is the key in this row & column pressed ?
65147 02 | FE7B F0 08      | BEQ #FE85                                               ; ..yes - success
65149 03 | FE7D EE 00 B0   | INC #B000                                               ; ..no, point to the next row
65152 01 | FE80 88         | DEY                                                     ; Decrement key counter
65153 01 | FE81 CA         | DEX                                                     ; Decrement row counter
65154 02 | FE82 D0 F4      | BNE #FE78                                               ; ..and test this row in the same column
65156 01 | FE84 4A         | LSR A                                                   ; Tested all the rows - point to next column If failed, acc shifts to 0, Carry=1 - thus returns with Carry set if failed
65157 01 | FE85 08         | PHP                                                     ; Save flags - Z set if successful
65158 01 | FE86 48         | PHA                                                     ; Save column bit mask
65159 03 | FE87 AD 00 B0   | LDA #B000                                               ; Get contents of VDG/row counter port
65162 02 | FE8A 29 F0      | AND @#F0                                                ; Leave VDG bits unaltered, but clear row; counter so that <ESC> can be tested easily
65164 03 | FE8C 8D 00 B0   | STA #B000                                               ; Update VDG/row counter port
65167 01 | FE8F 68         | PLA                                                     ; Restore column bit mask
65168 01 | FE90 28         | PLP                                                     ; Restore flags
65169 02 | FE91 D0 E3      | BNE #FE76                                               ; ..keep testing
65171 01 | FE93 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; OSRDCH Get Key subroutine
                                                                                     ; -------------------------;
                                                                                     ; - Waits for a key to be pressed and returns with its ASCII value in the accumulator.
                                                                                     ; - Executes control characters before return.
                                                                                     ; - If <LOCK> or cursor control keys is pressed, the code is executed and another keypress fetched before return.
                                                                                     ; - Preserves X,Y registers and flags.
65172 01 | FE94 08         | PHP                                                     ; Save flags
65173 01 | FE95 D8         | CLD                                                     ; 
65174 02 | FE96 86 E4      | STX #E4                                                 ; Save X register
65176 02 | FE98 84 E5      | STY #E5                                                 ; Save Y register
                                                                                     ; WAIT FOR KEYBOARD TO BE RELEASED
65178 03 | FE9A 2C 02 B0   | BIT #B002                                               ; Is <REPT> key pressed ?
65181 02 | FE9D 50 05      | BVC #FEA4                                               ; ..yes, no need to wait for keyboard to be released
65183 03 | FE9F 20 71 FE   | JSR #FE71                                               ; Scan keyboard
65186 02 | FEA2 90 F6      | BCC #FE9A                                               ; ..wait for key to be released
                                                                                     ; GET KEYPRESS
65188 03 | FEA4 20 8A FB   | JSR #FB8A                                               ; Wait 0.1 second for debounce
65191 03 | FEA7 20 71 FE   | JSR #FE71                                               ; Scan keyboard
65194 02 | FEAA B0 FB      | BCS #FEA7                                               ; ..keep scanning until key pressed
65196 03 | FEAC 20 71 FE   | JSR #FE71                                               ; Scan keyboard again - still pressed ?
65199 02 | FEAF B0 F6      | BCS #FEA7                                               ; ..no, noise ? - try again
65201 01 | FEB1 98         | TYA                                                     ; Acc = ASCII value of key - #20
65202 02 | FEB2 A2 17      | LDX @#17                                                ; Pointer to control code table at #FEE2
                                                                                     ; GET EXECUTION ADDRESS AND JUMP TO IT
65204 03 | FEB4 20 C5 FE   | JSR #FEC5                                               ; Test for control code or otherwise
65207 03 | FEB7 BD E3 FE   | LDA #FEE3,X                                             ; Get LSB execution address
65210 02 | FEBA 85 E2      | STA #E2                                                 ; ..into w/s
65212 02 | FEBC A9 FD      | LDA @#FD                                                ; Get MSB execution address
65214 02 | FEBE 85 E3      | STA #E3                                                 ; ..into w/s
65216 01 | FEC0 98         | TYA                                                     ; Acc = ASCII value of key - #20
65217 03 | FEC1 6C E2 00   | JMP (#E2)                                               ; Jump to deal with char or control code
                                                                                     ; 
                                                                                     ; Decode Control Character subroutine
                                                                                     ; -----------------------------------
                                                                                     ; - Enter at #FEC5.
                                                                                     ; - Enter with X pointing to control code table:
                                                                                     ; X=#A  for the WRCHAR table at #FED5
                                                                                     ; X=#17 for the RDCHAR table at #FEE2.
                                                                                     ; - Returns with Carry set, and X pointing to matched code or last code.
                                                                                     ; - Returns with Z flag set if control code matched.
                                                                                     ; 
65220 01 | FEC4 CA         | DEX                                                     ; Point to next control code in table
65221 03 | FEC5 DD CB FE   | CMP #FECB,X                                             ; Is it this control code ?
65224 02 | FEC8 90 FA      | BCC #FEC4                                               ; ..no, table value too large - try the next code
65226 01 | FECA 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; WRCHAR Control Code Data Lookup Table
                                                                                     ; -------------------------------------
65227 11 | FECB 00 08 09 0A 0B 0C 0D 0E 0F 1E 7F                                     ; 
                                                                                     ; RDCHAR Control Code Data Lookup Table
                                                                                     ; -------------------------------------
65238 13 | FED6 00 01 05 06 08 0E 0F 10 11 1C 20 21 3B                               ; 
                                                                                     ; WRCHAR Control Code Address Lookup Table
                                                                                     ; ----------------------------------------
65251 11 | FEE3 44 5C 38 62 87 69 40 8D 92 7D 50                                     ; 
                                                                                     ; RDCHAR Control Code Address Lookup Table
                                                                                     ; ----------------------------------------
65262 13 | FEEE DF D2 9A A2 E2 AE C0 DF D8 D6 C8 C6 C2                               ; 
                                                                                     ; 
                                                                                     ; Send Contents of Accumulator to VIA subroutine
                                                                                     ; ----------------------------------------------
                                                                                     ; - Waits for the busy line VIA Port A bit 7 to go low, then dumps 7 bit
                                                                                     ; data to the 7 LSBs of Port A, and then strobes CA2 low for ~20uS.
                                                                                     ; - Enter with CA2 output set high.
                                                                                     ; - Preserves A,X,Y registers.
65275 01 | FEFB 48         | PHA                                                     ; Save a copy of data to be transmitted
65276 02 | FEFC C9 02      | CMP @#2                                                 ; Is it <STX> ?
65278 02 | FEFE F0 27      | BEQ #FF27                                               ; ..yes, initialise the printer
65280 02 | FF00 C9 03      | CMP @#3                                                 ; Is it <EXT> ?
65282 02 | FF02 F0 34      | BEQ #FF38                                               ; ..yes, disable the printer
65284 02 | FF04 C5 FE      | CMP #FE                                                 ; Is char allowed to be sent to printer ?
65286 02 | FF06 F0 2E      | BEQ #FF36                                               ; ..no, return
65288 03 | FF08 AD 0C B8   | LDA #B80C                                               ; Get the VIAs peripheral control register
65291 02 | FF0B 29 0E      | AND @#E                                                 ; Is it set up, ie <STX>ed ?
65293 02 | FF0D F0 27      | BEQ #FF36                                               ; ..no, can't send character - return
65295 01 | FF0F 68         | PLA                                                     ; Restore character to be sent
                                                                                     ; WAIT FOR PRINTER NOT BUSY
65296 03 | FF10 2C 01 B8   | BIT #B801                                               ; Busy ?
65299 02 | FF13 30 FB      | BMI #FF10                                               ; ..yes, wait for printer to be not busy
65301 03 | FF15 8D 01 B8   | STA #B801                                               ; Dump character to printer output port A
65304 01 | FF18 48         | PHA                                                     ; Save a copy of data that was transmitted
65305 03 | FF19 AD 0C B8   | LDA #B80C                                               ; Get 6522 VIA peripheral control register
65308 02 | FF1C 29 F0      | AND @#F0                                                ; Don't affect CB1, CB2, Port B conditions
65310 02 | FF1E 09 0C      | ORA @#C                                                 ; ..but set CA2 low - NSTROBE
65312 03 | FF20 8D 0C B8   | STA #B80C                                               ; Update the VIA peripheral control register
65315 02 | FF23 09 02      | ORA @#2                                                 ; Don't affect CB1, CB2 conditions, but set CA2 high
65317 02 | FF25 D0 0C      | BNE #FF33                                               ; Update PCR, restore character and return
                                                                                     ; DO <STX>
65319 02 | FF27 A9 7F      | LDA @#7F                                                ; 
65321 03 | FF29 8D 03 B8   | STA #B803                                               ; Set 7 LSBs of 6522 VIA Port A as the data outputs and the MSB as the busy input
65324 03 | FF2C AD 0C B8   | LDA #B80C                                               ; Get 6522 VIA peripheral control register
65327 02 | FF2F 29 F0      | AND @#F0                                                ; Don't affect CB1, CB2, Port B conditions
65329 02 | FF31 09 0E      | ORA @#E                                                 ; ..but set CA2 output high
65331 03 | FF33 8D 0C B8   | STA #B80C                                               ; Update the VIA peripheral control register
65334 01 | FF36 68         | PLA                                                     ; Restore the data that was transmitted
65335 01 | FF37 60         | RTS                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Do <EXT> subroutine
                                                                                     ; -------------------
65336 03 | FF38 AD 0C B8   | LDA #B80C                                               ; Get the VIAs peripheral control register
65339 02 | FF3B 29 F0      | AND @#F0                                                ; Don't affect CB1, CB2, Port B conditions
65341 02 | FF3D B0 F4      | BCS #FF33                                               ; Update PCR, restore character and return
                                                                                     ; 
                                                                                     ; RESET Routine
                                                                                     ; -------------
                                                                                     ; - Indirected by the vector #FFFC on power-up or BREAK.
                                                                                     ; RESET PAGE 2 VECTORS TO DEFAULT
65343 02 | FF3F A2 17      | LDX @#17                                                ; Set vector table pointer
65345 03 | FF41 BD 9A FF   | LDA #FF9A,X                                             ; Get byte from vector data table
65348 03 | FF44 9D 04 02   | STA #204,X                                              ; ..and store in the vector table in RAM
65351 01 | FF47 CA         | DEX                                                     ; Point to next byte
65352 02 | FF48 10 F7      | BPL #FF41                                               ; ..and set all 12 vectors = 24 bytes
65354 01 | FF4A 9A         | TXS                                                     ; Initialise stack pointer to #FF
65355 01 | FF4B 8A         | TXA                                                     ; 
65356 01 | FF4C E8         | INX                                                     ; Now X=0
65357 02 | FF4D 86 EA      | STX #EA                                                 ; Clear NOMON flag
65359 02 | FF4F 86 E1      | STX #E1                                                 ; Clear cursor position
65361 02 | FF51 86 E7      | STX #E7                                                 ; Clear lock off
                                                                                     ; SET ALL THE ARRAY POINTERS TO #FFFF
65363 02 | FF53 A2 33      | LDX @#33                                                ; Set array pointer
65365 03 | FF55 9D EB 02   | STA #2EB,X                                              ; Set array pointer LSB/MSB to #FF
65368 01 | FF58 CA         | DEX                                                     ; Point to next byte
65369 02 | FF59 10 FA      | BPL #FF55                                               ; ..and set all 26 array addresses
                                                                                     ; 
65371 02 | FF5B A9 0A      | LDA @#A                                                 ; Get <LF>
65373 02 | FF5D 85 FE      | STA #FE                                                 ; Set character not to be sent to printer
                                                                                     ; 
                                                                                     ; SET UP VDG FOR ALPHANUMERIC MODE
65375 02 | FF5F A9 8A      | LDA @#8A                                                ; 
65377 03 | FF61 8D 03 B0   | STA #B003                                               ; 
65380 02 | FF64 A9 07      | LDA @#7                                                 ; 
65382 03 | FF66 8D 02 B0   | STA #B002                                               ; 
                                                                                     ; PRINT INITIALISATION MESSAGE
65385 03 | FF69 20 D1 F7   | JSR #F7D1                                               ; Send the following string to WRCHAR
                                                                                     ; 
65388 16 | FF6C 06 0C 0F 41 43 4F 52 4E 20 41 54 4F 4D 0A 0A 0D                      ; ...ACORN ATOM...
                                                                                     ; 
                                                                                     ; SET DEFAULT TEXT SPACE & ENABLE INTERRUPTS
                                                                                     ; 
65404 02 | FF7C A9 82      | LDA @#82                                                ; Default text space is #8200
65406 02 | FF7E 85 12      | STA #12                                                 ; ..so set it
65408 01 | FF80 58         | CLI                                                     ; ..before enabling interrupts
                                                                                     ; 
                                                                                     ; TEST TEXT SPACE AT #2900 FOR RAM FITTED
65409 02 | FF81 A9 55      | LDA @#55                                                ; Get 1st test code
65411 03 | FF83 8D 01 29   | STA #2901                                               ; ..and write to lower text space
65414 03 | FF86 CD 01 29   | CMP #2901                                               ; Can it be read back ?
65417 02 | FF89 D0 0C      | BNE #FF97                                               ; ..no, stick to default text space
65419 01 | FF8B 0A         | ASL A                                                   ; Get 2nd test code = #AA
65420 03 | FF8C 8D 01 29   | STA #2901                                               ; ..and write to lower text space
65423 03 | FF8F CD 01 29   | CMP #2901                                               ; Can it be read back ?
65426 02 | FF92 D0 03      | BNE #FF97                                               ; ..no, stick to default text space
65428 03 | FF94 4C B2 C2   | JMP #C2B2                                               ; ..yes, initialise #2900 text space and Carry onto to the Direct Command Handler
65431 03 | FF97 4C B6 C2   | JMP #C2B6                                               ; Initialise #8200 text space and carry on to the Direct Command Handler
                                                                                     ; 
                                                                                     ; Vector Data Table
                                                                                     ; -----------------
65434 06 | FF9A 00 A0 EF F8 52 FE                                                    ; 
65440 16 | FFA0 94 FE 6E F9 E5 FA AC C2 AC C2 EE FB 7C FC 38 FC                      ; 
65456 02 | FFB0 78 C2                                                                ; 
                                                                                     ; 
                                                                                     ; IRQ/BRK Handler
                                                                                     ; ---------------
                                                                                     ; - If IRQ, pushes the accumulator onto the stack before jumping to IRQVEC at (#204).
                                                                                     ; - If BRK, jumps to BRKVEC at (#202).
65458 02 | FFB2 85 FF      | STA #FF                                                 ; Save accumulator
65460 01 | FFB4 68         | PLA                                                     ; Get status
65461 01 | FFB5 48         | PHA                                                     ; Re-save status
65462 02 | FFB6 29 10      | AND @#10                                                ; Is it IRQ or BRK ?
65464 02 | FFB8 D0 06      | BNE #FFC0                                               ; ..it's BRK - deal with it
65466 02 | FFBA A5 FF      | LDA #FF                                                 ; Restore accumulator
65468 01 | FFBC 48         | PHA                                                     ; Save accumulator onto stack
65469 03 | FFBD 6C 04 02   | JMP (#204)                                              ; ..before jumping to IRQVEC
                                                                                     ; 
                                                                                     ; Execute BRK
                                                                                     ; -----------
65472 02 | FFC0 A5 FF      | LDA #FF                                                 ; Restore accumulator
65474 01 | FFC2 28         | PLP                                                     ; Restore flags
65475 01 | FFC3 08         | PHP                                                     ; Re-save flags
65476 03 | FFC4 6C 02 02   | JMP (#202)                                              ; ..jump to BRKVEC
                                                                                     ; 
                                                                                     ; Execute NMI
                                                                                     ; -----------
                                                                                     ; - Pushes accumulator onto stack before jumping to NMIVEC at (#200).
65479 01 | FFC7 48         | PHA                                                     ; Save accumulator onto stack
65480 03 | FFC8 6C 00 02   | JMP (#200)                                              ; ..before jumping to NMIVEC
                                                                                     ; 
                                                                                     ; 
                                                                                     ; Operating System Jump Table
                                                                                     ; ---------------------------
65483 03 | FFCB 6C 1A 02   | JMP (#21A)                                              ; OSSHUT - normally #C278
65486 03 | FFCE 6C 18 02   | JMP (#218)                                              ; OSFIND - normally #FC38
65489 03 | FFD1 6C 16 02   | JMP (#216)                                              ; OSBPUT - normally #FC7C
65492 03 | FFD4 6C 14 02   | JMP (#214)                                              ; OSBGET - normally #FBEE
65495 03 | FFD7 6C 12 02   | JMP (#212)                                              ; OSSTAR - normally #C2AC
65498 03 | FFDA 6C 10 02   | JMP (#210)                                              ; OSRDAR - normally #C2AC
65501 03 | FFDD 6C 0E 02   | JMP (#20E)                                              ; OSSAVE - normally #FAE5
65504 03 | FFE0 6C 0C 02   | JMP (#20C)                                              ; OSLOAD - normally #F96E
65507 03 | FFE3 6C 0A 02   | JMP (#20A)                                              ; OSRDCH - normally #FE94
65510 03 | FFE6 20 E3 FF   | JSR #FFE3                                               ; OSECHO - normally #FE94 then FE52
65513 02 | FFE9 C9 0D      | CMP @#D                                                 ; OSASCI - #D causes <CR><LF>
65515 02 | FFEB D0 07      | BNE #FFF4                                               ; 
65517 02 | FFED A9 0A      | LDA @#A                                                 ; OSCRLF - causes <CR><LF>
65519 03 | FFEF 20 F4 FF   | JSR #FFF4                                               ; 
65522 02 | FFF2 A9 0D      | LDA @#D                                                 ; 
65524 03 | FFF4 6C 08 02   | JMP (#208)                                              ; OSWRCH - normally #FE52
65527 03 | FFF7 6C 06 02   | JMP (#206)                                              ; OSCLI  - normally #F8EF
                                                                                     ; 
65530 02 | FFFA C7 FF                                                                ; NMI     Jump Address
65532 02 | FFFC 3F FF                                                                ; RESET   Jump Address
65534 02 | FFFE B2 FF                                                                ; IRQ/BRK Jump Address
                                                                                     ; 
